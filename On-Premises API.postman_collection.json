{
	"info": {
		"_postman_id": "68ddd7f8-e8e6-4149-93dd-cecbafd3706e",
		"name": "On-Premises API",
		"description": "WhatsApp helps more than 2 billion people connect and share with the people they care about. Currently, WhatsApp offers the following products:\n\n1. Consumer App\n2. Small Business App\n3. Business API\n\n<!--![WhatsApp Products](https://developers.facebook.com/resources/wabiz-postman-overview-products.png)-->\n\nUnlike the consumer app and small business app, the business API is not an app, but a programming language interface that allows you to connect at scale. **The WhatsApp Business API is the product being covered on the documentation you are currently browsing.**\n\n> If you use anything other than the official WhatsApp Business API or other official WhatsApp tools, we reserve the right to limit or remove your access to WhatsApp as this violates our policies. Please do not use any non-WhatsApp authorized third-party tools to communicate on WhatsApp. See [Unauthorized use of automated or bulk messaging on WhatsApp](https://faq.whatsapp.com/general/security-and-privacy/unauthorized-use-of-automated-or-bulk-messaging-on-whatsapp?fbclid=IwAR3Qv2j2oCSgsJgAvGOWmJ6y55YhbnQrRqRvxx-IP-z0tZn7VeYke9c9gb8) for more information.\n\n# About the WhatsApp Business Platform API\nThe WhatsApp Business Platform API allows medium and large businesses to communicate with their customers at scale. Using the API, businesses can connect thousands of agents and bots to interact with customers manually and programmatically. Additionally, the API can be integrated with numerous backend systems, such as CRM and marketing platforms.\n\nBe aware that, to use our API, businesses must complete a series of requirements, including, but not limited to:\n\n* Following [WhatsApp's legal policies](https://www.whatsapp.com/legal/?fbclid=IwAR315KCPL8G4EwIFhhKun_Ps224mJL9dy2hdjhXbIFF7tTBqIn9TVHYWZXY), including the [WhatsApp Commerce Policy](https://www.whatsapp.com/legal/commerce-policy/?fbclid=IwAR2G9tuIvQs_i-38bLmid_hDZwpWHIT5R5NAsuMfdpNVmFhwy-r5Y8xsOb0) and the [WhatsApp Business Policy](https://www.whatsapp.com/legal/business-policy?fbclid=IwAR1zjfVm2nYDiRZ6VjdG_-XKKbFeH9NALK87PkQ0m_EDL9XusK-V5H6-wgY).\n* Going through [Business Verification](https://developers.facebook.com/docs/development/release/business-verification).\n* Following our [Display Name Guidelines](https://developers.facebook.com/docs/whatsapp/guides/display-name#display-name-guidelines).\n\n## Supporting Products\nThe following products support the implementation of the WhatsApp Business API:\n\n* [**Business Management API**](https://developers.facebook.com/docs/whatsapp/business-management-api): Used to programmatically manage your WhatsApp Business Account assets.\n* [**Embedded Signup**](https://developers.facebook.com/docs/whatsapp/embedded-signup): Used by BSPs to simplify the onboarding of new businesses to the API.\n\n# Using the API\nThere are two methods to use the API:\n\n| Method                  | Description                          |\n|-------------------------|--------------------------------------|\n| **Using a BSP**\t          | In this case, one of our third-party business solution providers (BSPs) hosts the WhatsApp Business API client. Then, businesses can use the API through their chosen BSP. |\n| **Direct Integration**      | In this case, a business directly installs the API client on their servers.<br/><br/>*Currently, this implementation is not available for new customers.* |\n\n# Changelog\n\nFor information relating to what has changed in the WhatsApp Business Platform, see [WhatsApp Business Platform Changelog](https://developers.facebook.com/docs/whatsapp/on-premises/changelog).\n\n# New On-Premises Features and Documentation Updates\n\nWhatsApp Business Platform contains the following updates and changes for version `2.45.1`:\n\nFor information relating to what has changed in the WhatsApp Business Platform, see [WhatsApp Business Platform Changelog](https://developers.facebook.com/docs/whatsapp/on-premises/changelog/#wa2451).\n\n## January 10th 2023 v2.45.1 Release\n\n### For businesses on expiring version `2.41.2`\nTo continue using the On-Premise API without disruptions, we strongly recommend that businesses that are still using expiring version `v2.41.2` upgrade to `v2.43.2` as soon as possible. You will have until January 28, 2023 to upgrade to the new version.\n\n> Note that deprecated versions of the API client are no longer supported. Should a client lose connection after the expiration date, the deprecated client will not be able to connect to the server and will not able to send or receive messages.\n\n### Database improvements\nWe have improved the database query execution time by reducing the round trips between client and database server. There are also some new DB indexes to improve performance of some heavy queries on message send path.\n\n### Security fixes\nWe updated key dependencies of On-Premise client and monitoring stack fixing critical vulnerabilities and making prometheus monitoring transport using secure protocol. \n\n**Monitoring metric fixes** - We have implemented a fix for the **`out_message_persisted`** prometheus metric, which stopped working from `v2.39.x` release.\n\n\n\n\n## October 11th 2022 v2.43.1 Release - Contacts Update\n\n### Changes to contacts node\nAs noted above in the notice for developers, responses from contacts requests will no longer provide status information about a phone number. Contacts can still be used to preload contact information before sending a message to the number. This can improve send message performance when sending messages in large volumes.\n\n### New API for blocking contacts\nWe are introducing a new API which will allow businesses to block and report customers who are sending obscene content, using inappropriate language, or harassing businesses’ employees.\n\nThe new Contact Requests are located at **API Reference**>>**Contacts** and consist of the following:\n\n* **[Block Contact](https://documenter.getpostman.com/view/14291747/UVJiiaLn#329e0e9e-17ae-49f4-b41c-d4b88242d370)**\n* **[Unblock Contact](https://documenter.getpostman.com/view/14291747/UVJiiaLn#7e656ab2-a04e-44c0-b4ad-df05e3e1c8e4)**\n* **[Get Block List](https://documenter.getpostman.com/view/14291747/UVJiiaLn#55770bb6-b46f-472a-9c2d-02a7cba6a08c)**\n* **[Report Contact](https://documenter.getpostman.com/view/14291747/UVJiiaLn#95f6614b-f727-4e83-bfb7-06a87104277a)**\n\n### Media reliability improvements\nImproved reliability for media message sends (including template media messages) in cases where the same media is sent at a high throughput, such as during campaigns.\n\n### Extended API timeout\nThe timeout for API requests has been increased to 120 seconds. This is a short-term mitigation to reduce the number of timeouts for operations that are still being processed by the API client.\n\n### Incoming contact message fix\nIncoming contact messages will now correctly show a contact’s company and department\n\nThe associated developer documentation is located at: [https://developers.facebook.com/docs/whatsapp/on-premises/reference/contacts](https://developers.facebook.com/docs/whatsapp/on-premises/reference/contacts).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2409494",
		"_collection_link": "https://www.postman.com/meta/workspace/whatsapp-business-platform/collection/14291747-68ddd7f8-e8e6-4149-93dd-cecbafd3706e?action=share&source=collection_link&creator=2409494"
	},
	"item": [
		{
			"name": "Overview",
			"item": [],
			"description": "Your business can host the WhatsApp Business Platform on your own servers using On-Premises API.\n\nFor more details, see [Developer Documentation - On-Premises API](https://developers.facebook.com/docs/whatsapp/on-premises/overview).",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Started",
			"item": [
				{
					"name": "Before You Start",
					"item": [
						{
							"name": "Setting up your WhatsApp Account",
							"item": [],
							"description": "Add a [phone number](https://developers.facebook.com/docs/whatsapp/overview/phone-number) and its [display name](https://developers.facebook.com/docs/whatsapp/overview/display-name) to your WhatsApp business account. This will submit the display name for review.\n\nIf you want to change the display name, you can do so as many times as you wish until you complete registration, after which you must wait 30 days between any display name change requests.\n\nWhen all reviews are completed, you can view and access your [base64-encoded certificate](https://developers.facebook.com/docs/whatsapp/api/account#certificate), which is necessary for registering your WhatsApp Business API client. We encourage you to register with an approved display name to start integration, before making any further changes to a display name. You can change your display name at any point after integration.",
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Review Billing and Pricing Information",
							"item": [],
							"description": "Once your business begins sending messages through the WhatsApp Business API, it's important to understand the billing process, such as how and when you're charged and how to view and pay your monthly invoice. For more information, see [About Billing For Your WhatsApp Business Account](https://www.facebook.com/business/help/2225184664363779). For pricing rules and cost per message, see our [Pricing](https://developers.facebook.com/docs/whatsapp/pricing) page.",
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "> In order to follow the steps in this tutorial, you must have been accepted into the WhatsApp Business API limited public preview or have signed up with one of our [Partnered Business Solution Providers](https://www.facebook.com/business/partner-directory/search?platforms=whatsapp&solution_type=messaging) for integration.\n\nYou need:\n\n* A [Facebook Business Manager](https://business.facebook.com/) account\n* A [verified business](https://www.facebook.com/business/help/2058515294227817)\n* A [WhatsApp business account](https://www.facebook.com/business/help/2087193751603668)\n* A [Line of Credit](https://www.facebook.com/business/help/1684730811624773) for your WhatsApp business account — You can refer to [About WhatsApp Business API Billing](https://www.facebook.com/business/help/2225184664363779) for more information about the billing process.\n* A command line tool such as Terminal or an app like [Postman](https://www.postman.com/?fbclid=IwAR3wnW_HMDztcQ3ReTA_KODk9NqZfguCraK5fIGe9Z1xVjNLiFhTYLGuK9o) that can perform cURL requests.\n\nAfter you verify your business, your business is reviewed for compliance with the [WhatsApp Terms of Service](https://www.whatsapp.com/legal?eea=0&fbclid=IwAR1vesECDB29rv8zOke1eztP2LpJK8E9H4mnQGyHKgvrYI1I-VmD3u6Bc0g#terms-of-service) and [WhatsApp Commerce Policy](https://www.whatsapp.com/legal/commerce-policy/?fbclid=IwAR1rwQ6qKyyxB6xB4HZwg7LMqMTiGevaKnOhYIjnsekVYUQdHh-mLSp-vcY). This step is initiated automatically. You can check the status of business verification and business review in the **Settings** tab of your WhatsApp business account in Business Manager. **Business verification** will show as **Verified** and **Account Status** will show as **Approved** upon approvals.",
					"auth": {
						"type": "noauth"
					}
				},
				{
					"name": "Step 1: Install the WhatsApp Business API Client",
					"item": [
						{
							"name": "Update Your Settings",
							"item": [],
							"description": "You can make changes to the Application Settings once the WhatsApp Business API client is working. However, you don't get access to your WhatsApp Business API client's different profile settings until registration is complete.\n\n*   The [Application Settings](#36152591-dcb0-4af6-8255-ab798ca677d5) pertain to how the client works — callback settings, Webhooks, on-call pager, sent status, media download behavior, etc. **Note:** It is strongly recommended you set up a [Webhooks](#d569b936-7774-42f7-b855-fc414b4a2bc8) in order to receive notifications about incoming messages or errors.\n*   The [Business Profile Settings](#c11c20f4-6051-42bf-beb8-0b2f8dd9cff8) and [Profile Settings](#18e009b2-edc4-4030-9e34-fd3a2e54aead) cover your business's information such as address, email, website, industry, about information, and profile photo."
						}
					],
					"description": "## Environment\n\nAt its core, the WhatsApp Business API client is based on [Docker](https://www.docker.com/?fbclid=IwAR2WqEUdrqdLyAtLpPAJ_Lrr9rkPccz-rAZtxx3pt9ZqRyqsf3tH4Ivs_9Q).\n\n## Equipment\n\nThe WhatsApp Business API client will run on any internet-connected machine that can run Docker for Linux, either in a virtual machine, or on Linux server. For more information see the [FAQ](https://developers.facebook.com/docs/whatsapp/faq#faq_751289021935523). For instance, simple testing can be done on a laptop. For a production environment server, we recommend at least 250 GB SSD, 16 GB RAM, and 4 core CPU. HDD is not recommended as the I/O speeds will become bottlenecks under load.\n\nIn most cases, you should run the database on a separate physical server from the Coreapp and Webapp containers. The database server should only be a few milliseconds of latency away from the compute machine(s).\n\n## Installation\n\nThere are two ways to get started with the WhatsApp Business API:\n\n*   **On-Premises installation:** You can set up the Docker containers on your own using the [Installation guide](#e99d6fa9-fe47-4144-a62a-4461ed1dc739). We recommend beginning with one of the Developer Setups to get familiar with the setup process and sending messages. This On-Premises solution can be used on your computer before [migrating](#faca8dbb-6a26-48b3-88d6-0fbb0767f442) to a [production environment](https://developers.facebook.com/docs/whatsapp/on-premises/get-started/installation#prod).\n*   **Amazon Web Services (AWS):** If you use AWS or would like a more standalone solution, see the [AWS guide](https://developers.facebook.com/docs/whatsapp/on-premises/get-started/installation/aws). The AWS solution sets up a whole WhatsApp Business API solution with backups, recovery, and more in an AWS cloud you manage and own.\n    \n\n> Once the WhatsApp Business API client is running, you must be logged in as `admin` to perform the rest of the setup steps."
				},
				{
					"name": "Step 2: Start Using the Client",
					"item": [],
					"description": "## Registration\n\nOnce you have the WhatsApp Business API client up and running, you can register your phone number by sending an [API call to the `account` endpoint](#91d5b02f-89aa-4bef-8824-cdd26fea75b8).\n\n## Send A Test Message\n\nYou can send test messages using the `messages` endpoint. First, [check the status](#c98294b2-00f3-4364-bad2-f7b920575874) of the phone number you are using for testing. You will need to send your WhatsApp account a message from the test phone number to enable the Customer Service window, which allows you to send any type of message within the 24-hours window (See [Cut-off Control](https://developers.facebook.com/docs/whatsapp/api/messages#cutoffcontrol) for details). Then, [send a text message](#f06e5c54-e161-45a7-86ed-f2f379d13ca8) to your test phone number. If the message arrives it means that the installation has been successful. If it doesn't arrive, check your Webhook for notifications that may indicate any problems.\n\n# Additional Suggestions\n\n## DO\n\n*   Start sending and receiving messages with internal employees first to check that the system is working.\n*   Respond to all customers within 24 hours.\n*   Abide by our policies outlined in the [WhatsApp Business Policy](https://www.whatsapp.com/legal/business-policy?fbclid=IwAR349dCbub2U_oEI16m4M1M_DofMuj-HIG7_M7cPkcVu7t0YVo6J5BNQlBY) and [WhatsApp Commerce Policy](https://www.whatsapp.com/legal/commerce-policy?fbclid=IwAR0mafxJ-Iovj-eaTT3YYqB_InFELvXjCjjMMXees92TEMdrOYSrbubBdc0).\n*   Use multiple phone numbers for development, testing, and production.\n*   Check the FAQ before opening a Direct Support ticket.\n*   Provide product feedback. Direct Support is the best channel for that.\n*   Provide details to reproduce your issue such as [logs](https://developers.facebook.com/docs/whatsapp/support), support info from the `health` and `support` nodes, [WADebug](https://developers.facebook.com/docs/whatsapp/on-premises/guides/wadebug) data, API calls to reproduce, etc.\n    \n\n## DON'T\n\n*   Send duplicate notifications to multiple channels.\n*   Send spam.\n*   Use 1-800 numbers for testing.\n*   Create a Business Manager only for WhatsApp integrations. Use an existing one if available.\n    \n\n> **If we detect that you have violated any of our guidelines or policies, we reserve the right to limit or remove your access to WhatsApp.**"
				},
				{
					"name": "Client Architecture",
					"item": [],
					"description": "Unlike typical REST APIs, the WhatsApp (WA) Business API requires the WhatsApp Business API Client to be installed and managed by your business. This way the WhatsApp Business API client can communicate with WA servers in an end-to-end-encrypted manner and provide the API endpoints that your business systems integrate with. The WhatsApp Business API Client consists of a set of Docker containers, as well as database and media volumes as shown in the following image.\n\n<!--![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.8562-6/149354421_256949469256488_4004844326605412962_n.png?_nc_cat=104&ccb=1-5&_nc_sid=6825c5&_nc_ohc=8Bk6ZMdN2FsAX_SF5sn&_nc_oc=AQk_VKqnzZFYrkaauceImx9nG2-SwUlE6ulEgHkWhQ1DpSIKFpw0yOkqsKixOvMww87Jom6JCgmFYikDg6rKKYww&_nc_ht=scontent-sea1-1.xx&oh=a0a70cc73a611a46546b896311dceac3&oe=61AB03C7)-->\n\n## Components\n\nA WhatsApp Business API Client consists of the following components shown in the preceding image.\n\n### WebApp node\n\n*   Handles authentication and authorization of WhatsApp Business API users\n*   Accepts incoming Rest API calls from your business systems and forwards them to the CoreApp node(s)\n    \n\n### CoreApp node(s)\n\n*   Receives Rest API calls from the WebApp node, and sends resulting messages to the WhatsApp server\n*   After receiving messages from the WhatsApp server, sends messages to your Webhook server that include the incoming payload from the WhatsApp servers\n*   Downloads and saves media to the media volume\n    \n\n### Database\n\nStores data for the WhatsApp Business API client, including messages, contacts, configurations etc.\n\n### Media volume\n\nStores uploaded media files used for outgoing media messages / media message templates, as well as the media files from incoming media messages\n\n### Webhook server\n\nReceives incoming HTTP messages from the CoreApp nodes\n\nAfter the successful [installation](#e99d6fa9-fe47-4144-a62a-4461ed1dc739) of the WhatsApp Business API Client, your business can start integrating with the WhatsApp Business API like common REST APIs via HTTPS, and receiving incoming messages using [Webhooks](#d569b936-7774-42f7-b855-fc414b4a2bc8).\n\n## Development versus Production Architecture\n\nIt's important that the database runs on a separate host from the CoreApp and WebApp nodes in your production environment. Ideally, they are also on separate hosts for high-availability reasons. For more information, see [Availability and Scaling](https://developers.facebook.com/docs/whatsapp/availability-scaling).\n\nWhen you are developing your system, you can run your database, CoreApp, and WebApp nodes on the same physical server for testing purposes."
				},
				{
					"name": "Installation",
					"item": [],
					"description": "The WhatsApp Business API client can be installed as a developer setup for testing using either Docker Compose or Minikube. You can also use Amazon Web Services (AWS) on production systems. You can migrate from a developer setup to a production setup when ready to send messages to customers.\n\nMake sure you have approval for your business's [phone number](https://developers.facebook.com/docs/whatsapp/guides/phone-number) and have a [certificate](https://developers.facebook.com/docs/whatsapp/guides/display-name) before attempting installation.\n\n## Developer Setups\n\nDemonstrates how to set up a WhatsApp Business API client on your developer machine with the purpose of getting familiar with the setup process. This should not be used for a production environment. It is highly recommended that you try out one of the developer setup processes below before attempting a production setup.\n\n*   [**Single Instance**](https://developers.facebook.com/docs/whatsapp/installation/dev-single-instance): Simple Docker Compose setup with one Coreapp instance\n*   [**High Availability/Multiconnect**](https://developers.facebook.com/docs/whatsapp/installation/dev-multiconnect): Advanced Docker Compose setup with multiple Coreapp instances, which helps avoid a single point of failure and/or provides higher message throughput\n*   [**Multiconnect on Minikube**](https://developers.facebook.com/docs/whatsapp/installation/dev-multiconnect-minikube): Minikube developer setup using High Availability mode\n    \n\n## Production Setups\n\nDemonstrates how to set up a WhatsApp Business API client in a production environment and covers best practices.  \n**Please use this documentation as reference and make necessary changes according to your business needs.**\n\n*   [**Single Instance**](https://developers.facebook.com/docs/whatsapp/installation/prod-single-instance): Simple setup with one Coreapp instance\n*   [**High Availability/Multiconnect**](https://developers.facebook.com/docs/whatsapp/installation/prod-multiconnect): Advanced setup with multiple Coreapp instances that helps avoid a single point of failure and/or provides higher message throughput\n*   [**Amazon Web Services**](https://developers.facebook.com/docs/whatsapp/aws): Use AWS to deploy your production WhatsApp Business API client"
				},
				{
					"name": "Migration",
					"item": [],
					"description": "If you have an existing setup of the WhatsApp Business API client and want to migrate to a new setup using the same phone number and App Settings, the [Migration guide](https://developers.facebook.com/docs/whatsapp/installation/migration) will help you identify changes and what you need to do.\n\n> We no longer suggest database migration owing to privacy and complexity concerns.\n\n**Migrate From Cloud to On-Premises**\n\nFor information on how to migrate from WhatsApp Cloud API to On-Premises, see [Migrate from Cloud API to On-Premises API](hhttps://developers.facebook.com/docs/whatsapp/cloud-api/guides/migrate-between-on-premises-and-cloud-api#cloud-to-on-premises).\n\n**Migrate From On-Premises to Cloud**\n\nFor information on how to migrate from On-Premises to WhatsApp Cloud API, see [Migrate from On-Premises API to Cloud API](https://developers.facebook.com/docs/whatsapp/cloud-api/guides/migrate-between-on-premises-and-cloud-api#on-premises-to-cloud).\n\n**Migrate Phone Number to a Different WABA**\n\nFor information on how to migrate a registered phone number from one WhatsApp Business Account to another, see [Migrate Phone Number to a Different WABA](https://developers.facebook.com/docs/whatsapp/business-management-api/guides/migrate-phone-to-different-waba).\n\n\n<!--\n## Before You Start\n\n*   **Backup is the most important step of the migration.**\n*   **You don’t have to re-register your phone number after migration.** You can start messaging as soon as the migration is complete.\n*   **The new setup must have the same number of shards as the old setup.** You cannot scale up or scale down during migration. If your old setup is configured with an X number of Masters and a Y number of Coreapps, the new setup must have exactly the same number of Masters and Coreapps. If there is a mismatch in the number of Masters and Coreapps before and after migration, the migration will fail.\n*   **Try migrating a test account before migrating a production account.**\n*   **Prepare for downtime.** How long is dependent on the of migration option, but every migration has downtime.\n    \n\n## Settings Migration\n\nMigrating the WhatsApp Business client settings preserves the application settings, the registration information and the encryption keys. Messages and authentication token info are not migrated.\n\nBecause the amount of data needing to be transferred between machines is minimal, there is only small amount of downtime.\n\n### Step 1: Install a new setup\n\nSet up your new WhatsApp Business API client using the [Installation documentation](https://developers.facebook.com/docs/whatsapp/installation).\n\n### Step 2: Obtain a new authentication token for the new setup\n\nThe current authentication token will not be valid in new environment. [Log in](https://developers.facebook.com/docs/whatsapp/api/users/login#first-login) to the new setup to obtain a new authentication token.\n\n### Step 3: Cleanup\n\n*   **Disable two-step authentication** *\\[Optional\\]*. This is helpful when the two-step authentication code is forgotten and you need to re-register. Though re-registration is not required for a smooth migration, you may be forced to re-register if the backup and restore fails for some unknown reason. Follow the [instructions to disable the two-step authentication code](https://developers.facebook.com/docs/whatsapp/api/settings/two-factor#disable).\n    \n    > Note: If you are confident that your two-step authentication code is correct, this step is optional.\n    \n*   **Reset any Webhooks** *\\[Optional\\]*. If Webhooks are set up to receive [inbound notifications](https://developers.facebook.com/docs/whatsapp/api/webhooks/inbound/) and the Webhook server is also getting changed during migration, disable the old Webhook server in the [Application Settings](https://developers.facebook.com/docs/whatsapp/api/settings/app).  \n    Note: This step is optional if you are not changing the Webhook server after the migration.\n    \n\n### Step 4: Back up the settings from the current setup\n\nUse the current authentication token to [back up the settings data](https://developers.facebook.com/docs/whatsapp/api/settings/backup-and-restore#backup) from the current WhatsApp Business API client.\n\n### Step 5: Uninstall the current setup\n\n*This causes a downtime for messaging.* To minimize it, make sure the WhatsApp Business API client is ready to run in the new location. Refer to the Uninstalling section of the respective [Installation guide](https://developers.facebook.com/docs/whatsapp/installation) for instructions. Make sure you are only uninstalling the WhatsApp Business API client, which includes the Docker containers of the Coreapp, Webapp and Master; **DO NOT DELETE THE DATABASE.**\n\n### Step 6: Restore the settings in the new setup\n\n[Log in](https://developers.facebook.com/docs/whatsapp/api/users/login) if you're not already using a new authentication token, and perform a [restore](https://developers.facebook.com/docs/whatsapp/api/settings/backup-and-restore#restore) on the new setup.  \nYour new WhatsApp Business API client should be running with all the required information and ready for messaging. The most important thing to remember is re-registration of the WhatsApp account is not required if the settings are backed up and restored properly.\n\n### Step 7: Perform a health check\n\nPerform a [health check](https://developers.facebook.com/docs/whatsapp/api/health) and send a test message to verify the WhatsApp Business API client is working.\n\n### Step 8: \\[Optional\\] Enable two-step verification\n\nIf you disabled it in **Step 3**, [re-enable two-step verification](https://developers.facebook.com/docs/whatsapp/api/settings/two-factor/#enable) now. This provides additional security for your WhatsApp account.\n\n### Step 9: Set up Webhooks\n\nSet up your Webhooks to enable [inbound notifications](https://developers.facebook.com/docs/whatsapp/api/settings/app).\n\n### Step 10: Drop the old database\n\nYour old database contains the data of your old settings, old messages and old auth tokens. If you want to recover any of this data in future, do not drop the old database. Once you decide to drop the database, make sure the WhatsApp Business API client has been running for at least 14 days and messaging is working well before deleting it.\n-->"
				},
				{
					"name": "Advanced Setup",
					"item": [],
					"description": "After getting your WhatsApp Business API client up and running, there are more advanced steps and settings to get the most out of your experience.\n\n## Webhooks\n\nWebhooks handle incoming messages from people who respond to you on WhatsApp including text, location, and media such as pictures and documents as well as the status of the messages you've sent. We've prepared a [test app](https://developers.facebook.com/docs/whatsapp/api/webhooks#test-app) so that you can try this out with only a couple of clicks.\n\nCallbacks are an important channel for delivering both timely notifications as well as out-of-band errors, and it is thus highly recommended you set the **`webhooks`** parameter in the [Application Settings](https://developers.facebook.com/docs/whatsapp/api/settings/app) with a callback URL.\n\nWebhooks used with the WhatsApp Business API require HTTPS. You can use your own Certification Authority certificates to prevent SSL errors when sending callbacks to the configured Webhook. For more information, see [Webhooks CA Certificates](https://developers.facebook.com/docs/whatsapp/api/certificates/webhooks).\n\nSee the [Webhooks documentation](https://developers.facebook.com/docs/whatsapp/api/webhooks) for more information.\n\n## Backup and Restore\n\nOnce you have a working WhatsApp Business API client and have all the settings in place, you can create a backup to make it easier to restore to a known working state, if necessary, or to move to different environments/servers. This allows you to restore everything you have just done on another machine without having to go through registration again. *Make sure to keep your password in a secure place*.\n\nSee the [Backup and Restore documentation](https://developers.facebook.com/docs/whatsapp/api/settings/backup-and-restore) for more information.\n\n## Two-Step Verification\n\nUse two-step verification to add an extra layer of security to the WhatsApp Business API client. When you have two-step verification enabled, any attempt to register your phone number on WhatsApp must be accompanied by the six-digit PIN that you create using this feature.\n\nSee the [Two-Step Verification documention](https://developers.facebook.com/docs/whatsapp/api/settings/two-factor) for more information.\n\n## Monitoring\n\nYou can set up dashboards to monitor the WhatsApp Business API client and send notifications for changes in monitoring using Prometheus and Grafana.\n\nSee the [Monitoring and Alerting documentation](https://developers.facebook.com/docs/whatsapp/monitoring-alerting) for more information.\n\n## Availability and Scaling\n\nThe base version of the WhatsApp Business API runs on a single Docker container. High Availability and Multiconnect work together to give you more options. For more information on setting up and running these solutions, see the [High Availability](https://developers.facebook.com/docs/whatsapp/high-availability) and [Multiconnect](https://developers.facebook.com/docs/whatsapp/multiconnect_mc) documentation."
				}
			],
			"description": "This tutorial provides information on how to set up your WhatsApp Business API client, register your phone number, update your settings, and send a test message.\n\nThe process of getting started with this API can be divided into 3 main parts:\n\n1. [**Prepare assets**](#ae31b588-fc3f-47ff-88af-a912642508f2) — Before you start, you must set up the assets required to complete your API integration, including a [WhatsApp Business Account](#account-setup).\n2. [**Install the WhatsApp Business API Client**](#4c2af476-0420-480d-afa8-eb61e8c7ace2) — Install your API client. Once your client is working, you can update your application settings.\n3. [**Start using the Client**](#c2f3778e-8185-4069-a7e4-08c29400e560) — Register your phone number with an API call to `/account` and send a test message with a call to `/messages`."
		},
		{
			"name": "Guides",
			"item": [
				{
					"name": "Postman Collection",
					"item": [],
					"description": "To learn more about how to use Postman with the WhatsApp Business API, see [WhatsApp Business Platform Postman Collections](https://www.postman.com/meta/workspace/a31742be-ce5c-4b9d-a828-e10ee7f7a5a3/overview)."
				},
				{
					"name": "Send Messages",
					"item": [
						{
							"name": "Sending Text Messages",
							"item": [
								{
									"name": "Sending Text Messages",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer {{User-Access-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"preview_url\": false | true,\n    \"recipient_type\": \"individual\",\n    \"to\": \"whatsapp-id\",\n    \"type\": \"text\",\n    \"text\": {\n        \"body\": \"your-text-message-content\"\n    }\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										},
										"description": "This example shows how to send a text message."
									},
									"response": [
										{
											"name": "Text Message Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
														"key": "Authorization",
														"value": "Bearer {{User-Access-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"preview_url\": true,\n    \"to\": \"whatsapp-id\",\n    \"text\": {\n        \"body\": \"You have to check out this amazing messaging service https://www.whatsapp.com/\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										}
									]
								}
							],
							"description": "You can use the `messages` endpoint to send text messages to your customers.\n\n## Before You Start\n\nYou need to meet all the prerequisites listed in the Before You Start section of the Messages documentation.\n\n### Constraints:\n\nA text message can be a max of 4096 characters long.\n\n## Step 1: Make **POST** Request to `/messages`\n\nOnce you have the WhatsApp ID for the user you want to message, use it to send a text message. Specify **`text`** in the **`type`** field.\n\nFor more information on parameters, see:\n\n*   [Parameters common to all message requests](https://developers.facebook.com/docs/whatsapp/api/messages#parameters)\n*   [Parameters for text messages](https://developers.facebook.com/docs/whatsapp/api/messages#text-messages)\n    \n\nIf you want to format your message, see [Formatting in Text Messages](https://developers.facebook.com/docs/whatsapp/api/messages#formatting).\n\n### Sending URLs in Text Messages\n\nBy default, the mobile WhatsApp application recognizes URLs and makes them clickable. To include a URL preview, include **`preview_url`**: **`true`** in the message body and make sure the URL begins with `http://` or `https://`. A hostname is required, IP addresses are not matched.\n\nThe majority of the time when you send a URL, whether with a preview or not, the receiver of the message will see a URL that they can click on.\n\nURL previews are only rendered after one of the following has happened:\n\n1.  The business has sent a message template to the user.\n2.  The user initiates a conversation with a \"click to chat\" link.\n3.  The user adds the business phone number to their address book and initiates a conversation.\n    \n\n## Step 2: Check Your Response\n\nA successful response includes a messages object with an ID for the newly created message.\n\n```\n{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }]\n}  \n\n```\n\nAn unsuccessful response contains an error message. See [Error and Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors) for more information."
						},
						{
							"name": "Sending Media Messages",
							"item": [
								{
									"name": "Sending Media Messages",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"recipient_type\": \"individual\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\" | \"contact\" | \"document\" | \"image\" | \"location\" | \"sticker\" | \"text\" | \"video\",\n    \"audio\": {\n        \"id\": \"<Media-ID>\"\n    }\n  \n  \"document\": {\n        \"id\": \"<Media-ID>\",\n        \"caption\": \"<Document-Caption-To-Be-Sent>\",\n        \"filename\": \"<Document-Filename>\"\n    }\n  \n  \"document\": {\n        \"link\": \"the-provider-name/protocol://the-url\",\n        \"provider\": {\n            \"name\": \"<Provider-Name>\"\n        },\n        \"caption\": \"<Document-Caption>\"\n    }\n  \n  \"document\": {\n        \"link\": \"http(s)://the-url.pdf\",\n        \"caption\": \"<Document-Caption>\"\n    }\n  \n  \"video\": {\n        \"id\": \"<Media-ID>\",\n        \"caption\": \"<Video-Caption>\"\n    }\n  \n  \"image\": {\n        \"link\": \"http(s)://the-url\",\n        \"provider\": {\n            \"name\": \"<Provider-Name>\"\n        },\n        \"caption\": \"<Image-Caption>\"\n    }\n  \n  \"image\": {\n        \"id\": \"<Media-ID>\",\n        \"caption\": \"<Image-Caption>\"\n    }\n  \n  \"sticker\": {\n        \"id\": \"<Media-ID>\"\n    }\n  \n  \"sticker\": {\n        \"link\": \"http(s)://the-url\",\n        \"provider\": {\n            \"name\": \"provider-name\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										},
										"description": "The following example shows you how to send a media message."
									},
									"response": [
										{
											"name": "Media Message Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{User-Access-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"recipient_type\": \"individual\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\",\n    \"audio\": {\n        \"id\": \"<Media-ID>\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": null,
											"cookie": [],
											"body": "{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n} "
										}
									]
								}
							],
							"description": "Use the `messages` endpoint to send messages containing audio, documents, images, stickers, or videos to your customers.\n\nIn essence, when you send a message that includes media, you must provide either the ID of the uploaded media or a link to the media in the request body. You must also specify the type of media that you are sending: `audio`, `document`, `image`, `sticker`, or `video`. When the request is received, the media is uploaded to the WhatsApp server and sent to the user indicated in the **`to`** field.\n\nCurrently, there are two ways to send media messages with the WhatsApp Business API:\n\n*   **IDs** — To use an ID, you must first upload the media using the **`media`** node to obtain the ID required for the messages API call.\n*   **Links** — To use a link, you supply an HTTP(S) link from which the application will download the media, saving you the step of uploading media yourself.\n    \n\n## Before You Start\n\nYou need to:\n\n*   Meet all the prerequisites listed in the Before You Start section of the [Messages documentation](#bb169693-0775-4eb4-92a5-5ead731a5e42).\n*   Upload the media you're sending or have a link to it.\n    \n\n## Step 1: Make a **POST** Request to `/messages`\n\nAfter you upload the media, use the returned ID for the **`id`** field in the API call sending the media message. Alternatively, you can provide a **`link`** parameter pointing to the media you want to send (currently only HTTP/HTTPS links are supported).\n\n> Either **`id`** or **`link`** is required, but should not be used at the same time.\n\n### Example\n\nThe sample request below shows multiple different objects such as `audio`, `document`, `image`, `sticker`, and `video` for illustration purposes only. A valid request body contains only one of them.\n\nFor more information on parameters, see:\n\n*   [Parameters common to all message requests](#a9259d0a-62a6-4614-b1d5-6591b4170ec0)\n*   [Parameters for media messages](#3517b4c1-a8c6-420e-aab3-3176f8616fd8)\n*   [The media object](#649bdd3f-f18e-4367-8309-ed2b9d0a19c7)\n    \n\n## Step 2:\n\nThe successful response includes a **`messages`** object with a message ID.\n\nIn the case of an unsuccessful response, a callback is sent to your Webhook URL even though the response will yield a message ID similar to a successful message send. This is why it's important to have a [Webhooks](#d569b936-7774-42f7-b855-fc414b4a2bc8) server set up.\n\nSee [Error and Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors) for more information on errors."
						},
						{
							"name": "Sending Contact and Location Messages",
							"item": [
								{
									"name": "Sending Contacts and Location Messages",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										},
										"description": "The following examples show how to send contact and location messages."
									},
									"response": [
										{
											"name": "Contact Message Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{User-Access-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"contacts\",\n    \"contacts\": [\n        {\n            \"addresses\": [\n                {\n                    \"city\": \"Menlo Park\",\n                    \"country\": \"United States\",\n                    \"country_code\": \"us\",\n                    \"state\": \"CA\",\n                    \"street\": \"1 Hacker Way\",\n                    \"type\": \"HOME\",\n                    \"zip\": \"94025\"\n                },\n                {\n                    \"city\": \"Menlo Park\",\n                    \"country\": \"United States\",\n                    \"country_code\": \"us\",\n                    \"state\": \"CA\",\n                    \"street\": \"200 Jefferson Dr\",\n                    \"type\": \"WORK\",\n                    \"zip\": \"94025\"\n                }\n            ],\n            \"birthday\": \"2012-08-18\",\n            \"emails\": [\n                {\n                    \"email\": \"test@fb.com\",\n                    \"type\": \"WORK\"\n                },\n                {\n                    \"email\": \"test@whatsapp.com\",\n                    \"type\": \"WORK\"\n                }\n            ],\n            \"name\": {\n                \"first_name\": \"John\",\n                \"formatted_name\": \"John Smith\",\n                \"last_name\": \"Smith\"\n            },\n            \"org\": {\n                \"company\": \"WhatsApp\",\n                \"department\": \"Design\",\n                \"title\": \"Manager\"\n            },\n            \"phones\": [\n                {\n                    \"phone\": \"+1 (940) 555-1234\",\n                    \"type\": \"HOME\"\n                },\n                {\n                    \"phone\": \"+1 (650) 555-1234\",\n                    \"type\": \"WORK\",\n                    \"wa_id\": \"16505551234\"\n                }\n            ],\n            \"urls\": [\n                {\n                    \"url\": \"https://www.facebook.com\",\n                    \"type\": \"WORK\"\n                }\n            ]\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"messages\": [{\n       \"id\": \"message-id\"\n    }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										},
										{
											"name": "Location Message Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{User-Access-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"location\",\n    \"location\": {\n        \"longitude\": -122.425332,\n        \"latitude\": 37.758056,\n        \"name\": \"Facebook HQ\",\n        \"address\": \"1 Hacker Way, Menlo Park, CA 94025\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"messages\": [{\n       \"id\": \"message-id\"\n    }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}\n"
										}
									]
								}
							],
							"description": "Use the **`messages`** endpoint to send other message types, such as contacts or location messages, to your customers.\n\n## Before You Start\n\nYou will need to meet all the prerequisites listed in the [Before You Start section of the Messages documentation](#bb169693-0775-4eb4-92a5-5ead731a5e42).\n\nThese messages can only be sent in response to an incoming message from your customer within the customer-care window. There is currently no support to send this within a message template.\n\n## Contacts Messages\n\n### Step 1: Make a **POST** Request to `/messages`/\n\n```\nPOST /v1/messages\n{\n    \"to\": \"recipient-wa-id\",\n    \"type\": \"contacts\",\n    \"contacts\": [\n                {\n                    \"addresses\": [\n                        {\n                            \"city\": \"Menlo Park\",\n                            \"country\": \"United States\",\n                            \"country_code\": \"us\",\n                            \"state\": \"CA\",\n                            \"street\": \"1 Hacker Way\",\n                            \"type\": \"HOME\",\n                            \"zip\": \"94025\"\n                        },\n                        {\n                            \"city\": \"Menlo Park\",\n                            \"country\": \"United States\",\n                            \"country_code\": \"us\",\n                            \"state\": \"CA\",\n                            \"street\": \"200 Jefferson Dr\",\n                            \"type\": \"WORK\",\n                            \"zip\": \"94025\"\n                        }\n                    ],\n                    \"birthday\": \"2012-08-18\",\n                    \"emails\": [\n                        {\n                            \"email\": \"test@fb.com\",\n                            \"type\": \"WORK\"\n                        },\n                        {\n                            \"email\": \"test@whatsapp.com\",\n                            \"type\": \"WORK\"\n                        }\n                    ],\n                    \"name\": {\n                        \"first_name\": \"John\",\n                        \"formatted_name\": \"John Smith\",\n                        \"last_name\": \"Smith\"\n                    },\n                    \"org\": {\n                        \"company\": \"WhatsApp\",\n                        \"department\": \"Design\",\n                        \"title\": \"Manager\"\n                    },\n                    \"phones\": [\n                        {\n                            \"phone\": \"+1 (940) 555-1234\",\n                            \"type\": \"HOME\"\n                        },\n                        {\n                            \"phone\": \"+1 (650) 555-1234\",\n                            \"type\": \"WORK\",\n                            \"wa_id\": \"16505551234\"\n                        }\n                    ],\n                    \"urls\": [\n                        {\n                             \"url\": \"https://www.facebook.com\",\n                             \"type\": \"WORK\"\n                        }\n                    ]\n                }\n            ]\n}\n\n```\n\nFor more information on parameters, see:\n\n*   [Parameters common to all message requests](#a9259d0a-62a6-4614-b1d5-6591b4170ec0): under **`type`**, use **`location`**.\n*   [Parameters for contact messages](#7840d828-4223-49d4-8f89-a011676cf6cd)\n    \n\n### Step 2: Check Your Response\n\nA successful response will look like the Contact Message Example response below.\n\n```\n{\n    \"messages\": [{\n       \"id\": \"message-id\"\n    }]\n}\n\n```\n\n## Location Messages\n\n### Step 1: Make a **POST** Request to `/messages`/\n\n```\nPOST /v1/messages\n{\n    \"to\": \"recipient-wa-id\",\n    \"type\": \"location\",\n    \"location\": {\n        \"longitude\": -122.425332,\n        \"latitude\": 37.758056,\n        \"name\": \"Meta HQ\",\n        \"address\": \"1 Hacker Way, Menlo Park, CA 94025\"\n    }\n}\n\n```\n\nFor more information on parameters, see:\n\n*   [Parameters common to all message requests](#a9259d0a-62a6-4614-b1d5-6591b4170ec0): under **`type`**, use **`location`**.\n*   [Parameters for location messages](#2ef0ae3e-26c1-41df-ba51-fe2ccace0320)\n    \n\n### Step 2: Check Your Response\n\nA successful response will look like the Location Message Example response below.\n\n```\n{\n    \"messages\": [{\n       \"id\": \"message-id\"\n    }]\n}\n\n```"
						},
						{
							"name": "Sending Interactive Messages",
							"item": [],
							"description": "This guide teaches you how to send each interactive message option. Interactive messages give your users a simpler way to find and select what they want from your business on WhatsApp. During testing, chatbots using interactive messaging features achieved significantly higher response rates and conversions compared to those that are text-based.\n\nThe following messages are considered interactive:\n\n* **List Messages**: Messages including a menu of up to 10 options. This type of message offers a simpler and more consistent way for users to make a selection when interacting with a business.\n* **Reply Buttons**: Messages including up to 3 options, where each option is a button. This type of message offers a quicker way for users to make a selection from a menu when interacting with a business. Reply buttons have the same user experience as interactive templates with buttons.\n* **Single Product Message**: Messages with a Single Product item from the business’ inventory. See [Share Products With Customers](https://developers.facebook.com/docs/whatsapp/guides/commerce-guides/share-products-with-customers) for more information.\n* **Multi-Product Message**: Messages containing a selection of up to 30 items from a business’ inventory. See [Share Products With Customers](https://developers.facebook.com/docs/whatsapp/guides/commerce-guides/share-products-with-customers) for more information.\n\n> With WhatsApp Business API `v2.39`, we have introduced two new types of interactive messages: Single Product Messages and Multi-Product Messages.\n\n## Interactive Message Specifications\n* Interactive messages can be combined together in the same flow.\n* Users cannot select more than one option at the same time from a list or button message, but they can go back and re-open a previous message.\n* List or reply button messages cannot be used as notifications. Currently, they can only be sent within 24 hours of the last message sent by the user. If you try to send a message outside the 24-hour window, you get an error message.\n* Supported platforms: iOS, Android, and web.\n\n<!--The following is an image that shows how text messages compare to interactive messages:\n\n![Example Text, List, and Reply Button Messages](https://scontent-sea1-1.xx.fbcdn.net/v/t39.8562-6/185251026_214443210216177_123641285902243447_n.png?_nc_cat=111&ccb=1-5&_nc_sid=6825c5&_nc_ohc=i_3KYd30fdcAX8ZCLfV&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=96e988c3422e604fc9d75b7f236c2bec&oe=61833E1B)-->\n\n## Overview\n### Why You Should Use It\n#### User Comprehension\nWhen compared to text-based lists, interactive messages provide a simpler and more consistent format for people to find and select what they want from a business. During testing, people had higher comprehension levels interacting with these features.\n\n#### Business Outcomes\nDuring testing, chatbots using interactive messaging features achieved significantly higher response rates and conversions compared to those that are text-based.\n\n#### Personalized\nPopulated dynamically in real-time and so can be personalized to the customer or situation. For example, you can show a List message of available time slots for appointment booking, or use Reply buttons to show previous delivery addresses.\n\n#### No Templates\nInteractive Messages do not require templates or pre-approvals.\n\n### When You Should Use It\nList Messages are best for presenting several options, such as:\n\n* A customer care or FAQ menu\n* A take-out menu\n* Selection of nearby stores or locations\n* Available reservation times\n* Choosing a recent order to repeat\n\nReply Buttons are best for offering quick responses from a limited set of options, such as:\n\n* Airtime recharge\n* Changing personal details\n* Reordering a previous order\n* Requesting a return\n* Adding optional extras to a food order\n* Choosing a payment method\n\nReply buttons are particularly valuable for ‘personalized’ use cases where a generic response is not adequate.\n\n### How To Use It\nAt the API level, interactive messages are set by specifying a message’s **`type`** to **`interactive`** and adding the **`interactive`** object. Generally, these messages include 4 main parts: **`header`**, **`body`**, **`footer`**, and **`action`**:\n\n```\n{\n  \"recipient_type\": \"individual\",\n  \"to\" :  \"whatsapp-id\",\n  \"type\": \"interactive\" \n  \"interactive\":{\n    \"type\": \"list\" | \"button\",\n    \"header\": {},\n    \"body\":   {},\n    \"footer\": {},\n    \"action\": {}\n  }\n}\n```\n\n<!--For List Messages, this is how the parts fit together:\n\n![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.8562-6/183554814_504218921028568_8013384280208209094_n.png?_nc_cat=101&ccb=1-5&_nc_sid=6825c5&_nc_ohc=s9IJHInBRuIAX_5i-fu&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=11879326bddc8ebec0ad551d5bb792d7&oe=61835633)\n\nFor Reply Buttons Messages, this is how the parts fit together:\n\n![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.8562-6/185178652_167746018610362_8499207846916681529_n.png?_nc_cat=102&ccb=1-5&_nc_sid=6825c5&_nc_ohc=qOL9k3UrU_gAX-RfwF8&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=068cd380481518c9f4877465b709c20b&oe=6183D5D8)-->\n\n## Get Started\nBefore you can send each message, you need to get your receiver’s WhatsApp ID with a call to the `/contacts` endpoint.\n\nWe recommend setting up your Webhooks to receive message status and inbound message notifications. This way, you can track if your message was sent and the answers you get from the users. See [Webhooks](#d569b936-7774-42f7-b855-fc414b4a2bc8) for more information.\n\n## Step 1: Assemble your `interactive` object\n\n### List Messages\nTo send a list message, you must assemble an interactive object of type list with the following components:\n\n| Object\t     | Description                       |\n|--------------------|-----------------------------------|\n| **`header`**       | **Optional**.<br/>If you decide to include it, you must set the header’s type to text and add a text field with the desired content.<br/><br/>[See all available header fields](#2a261667-d51f-441f-a9bd-9b99a63abeaa).|\n| **`body`**         | **Required**.<br/>The message’s body.<br/><br/>[See all available body fields](#a1c31d10-7973-41c8-ab62-1fd0570cb0c1).|\n| **`footer`**       | **Optional.**<br/>Your message’s footer.<br/><br/>[See all available footer fields](#37cda982-e34d-4f0b-b12c-4f399cadde0e).|\n| **`action`**       | **Required.**<br/>Inside action, you must nest:<ul><li>a **`button`** field with your button’s content, and</li><li>at least one **`section`** object (maximum of 10).</li></ul><br/><br/>\nInside **`section`**, you must add at least one **`rows`** object.<br/><br/>[See all available action fields.](#bce0fefd-8033-466c-9aa7-b267d7dc7e64)<br/>[See all available section fields](#16e429b1-1be2-488e-bfec-7ba4985a75c4).|\n\nBy the end, your **`interactive`** object should look something like this:\n\n```\n \"interactive\":{\n    \"type\": \"list\",\n    \"header\": {\n      \"type\": \"text\",\n      \"text\": \"your-header-content\"\n    },\n    \"body\": {\n      \"text\": \"your-text-message-content\"\n    },\n    \"footer\": {\n      \"text\": \"your-footer-content\"\n    },\n    \"action\": {\n      \"button\": \"cta-button-content\",\n      \"sections\":[\n        {\n          \"title\":\"your-section-title-content\",\n          \"rows\": [\n            {\n              \"id\":\"unique-row-identifier\",\n              \"title\": \"row-title-content\",\n              \"description\": \"row-description-content\",           \n            }\n          ]\n        },\n        {\n          \"title\":\"your-section-title-content\",\n          \"rows\": [\n            {\n              \"id\":\"unique-row-identifier\",\n              \"title\": \"row-title-content\",\n              \"description\": \"row-description-content\",           \n            }\n          ]\n        },\n        ...\n      ]\n    }\n  }\n```\n### Reply Buttons\nTo send a reply button message, you must assemble an **`interactive`** object of type **`button`** with the following components:\n\n| Object\t     | Description                       |\n|--------------------|-----------------------------------|\n| **`header`**       | **Optional**.<br/>For button interactive messages, you can use the following header types: text, video, image, or document.<br/><br/>Once you select your **`type`**, add the corresponding objects/fields with more information:<ul><li>For **`video`**, **`image`**, and **`document`** types: Add a **`media`** object.</li><li>For **`text`** type: Add a **`text`** field with the desired content.</li></ul><br/>[See all available header fields](#2a261667-d51f-441f-a9bd-9b99a63abeaa).|\n| **`body`**         | **Required**.<br/>The message’s body.<br/><br/>[See all available body fields](#a1c31d10-7973-41c8-ab62-1fd0570cb0c1).|\n| **`footer`**       | **Optional.**<br/>Your message’s footer.<br/><br/>[See all available footer fields](#37cda982-e34d-4f0b-b12c-4f399cadde0e).|\n| **`action`**       | **Required.**<br/>You must add at least one **`button`**, and include **`type`**, **`title`**, and **`id`** for your buttons. You cannot add more than 3 buttons.[See all available action fields.](#bce0fefd-8033-466c-9aa7-b267d7dc7e64).|\n\nBy the end, your **`interactive`** object should look something like this:\n```\n\"interactive\": {\n    \"type\": \"button\",\n    \"header\": { # optional\n      \"type\": \"text\" | \"image\" | \"video\" | \"document\",\n      \"text\": \"your text\"\n      # OR\n      \"document\": {\n        \"id\": \"your-media-id\",\n        \"filename\": \"some-file-name\"\n      }\n      # OR\n      \"document\": {\n        \"link\": \"the-provider-name/protocol://the-url\",\n        \"provider\": {\n          \"name\": \"provider-name\",\n        },\n        \"filename\": \"some-file-name\"\n      },\n      # OR\n      \"video\": {\n        \"id\": \"your-media-id\"\n      }\n      # OR\n      \"video\": {\n        \"link\": \"the-provider-name/protocol://the-url\",\n        \"provider\": {\n          \"name\": \"provider-name\"\n        }\n      }\n      # OR\n      \"image\": {\n        \"id\": \"your-media-id\"\n      }\n      # OR\n      \"image\": {\n        \"link\": \"http(s)://the-url\",\n        \"provider\": {\n          \"name\": \"provider-name\"\n        }\n      }\n    }, # end header\n    \"body\": {\n      \"text\": \"your-text-body-content\"\n    },\n    \"footer\": { # optional\n      \"text\": \"your-text-footer-content\"\n    },\n    \"action\": {\n      \"buttons\": [\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"unique-postback-id\",\n            \"title\": \"First Button’s Title\" \n          }\n        },\n        {\n          \"type\": \"reply\",\n          \"reply\": {\n            \"id\": \"unique-postback-id\",\n            \"title\": \"Second Button’s Title\" \n          }\n        }\n      ] \n    } # end action   \n  } # end interactive\n```\n## Step 2: Add common message parameters\nNow that you have your interactive object, append the other parameters that make a message: **`recipient_type`**, **`to`**, and **`type`**. Remember to set the **`type`** to **`interactive`**.\n\n```\n{\n  \"recipient_type\": \"individual\",\n  \"to\" : \"whatsapp-id\", // WhatsApp ID of your recipient\n  \"type\": \"interactive\",\n  \"interactive\":{\n    // Your interactive object  \n   }\n}\n```\nFor more information regarding parameters common to all message types, see [Message Object](#a9259d0a-62a6-4614-b1d5-6591b4170ec0).\n\n## Step 3: Make a **POST** call to `/messages`\n\nMake a **POST** call to the `/messages` endpoint with the `JSON` object you have assembled in steps 1 and 2. If your message is sent successfully, you get the following response:\n\n```\n{\n  \"messages\": [{\n    \"id\": \"{message-id}\"\n  }]\n}\n\n```\n\n## Step 4 (Optional): Check Webhooks\nIf you set up your [Webhooks](#d569b936-7774-42f7-b855-fc414b4a2bc8), check for changes in your message status as well as any responses coming from users.\n\nWebhooks of users responding to interactive messages include a new component called **`interactive`**, which contains information about the user’s choice. See [Webhooks, Components](#d4088709-d4eb-45f4-9020-9f08d5f0fb08) for more information.\n\n## Troubleshooting\nFor more information about error codes, see [Errors and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
						},
						{
							"name": "Sending Message Templates",
							"item": [
								{
									"name": "Sending Message Templates",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Namespace>\",\n        \"name\": \"<Template-Name>\",\n        \"language\": {\n            \"code\": \"<Language-and-Locale-Code>\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Text-String>\"\n                    },\n                    {\n                        \"type\": \"currency\",\n                        \"currency\": {\n                            \"fallback_value\": \"$100.99\",\n                            \"code\": \"USD\",\n                            \"amount_1000\": 100990\n                        }\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"February 25, 1977\",\n                            \"day_of_week\": 5,\n                            \"day_of_month\": 25,\n                            \"year\": 1977,\n                            \"month\": 2,\n                            \"hour\": 15,\n                            \"minute\": 33\n                        }\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"February 25, 1977\",\n                            \"timestamp\": 1485470276\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"response": [
										{
											"name": "Message Template Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{User-Access-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Namespace>\",\n        \"name\": \"<Template-Name>\",\n        \"language\": {\n            \"code\": \"<Language-and-Locale-Code>\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Text-String>\"\n                    },\n                    {\n                        \"type\": \"currency\",\n                        \"currency\": {\n                            \"fallback_value\": \"$100.99\",\n                            \"code\": \"USD\",\n                            \"amount_1000\": 100990\n                        }\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"February 25, 1977\",\n                            \"day_of_week\": 5,\n                            \"day_of_month\": 25,\n                            \"year\": 1977,\n                            \"month\": 2,\n                            \"hour\": 15,\n                            \"minute\": 33\n                        }\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"February 25, 1977\",\n                            \"timestamp\": 1485470276\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n} "
										}
									]
								}
							],
							"description": "You can use the **`/messages`** endpoint to send message templates to your customers. A message template can be text-based, media-based, or interactive.\n\n<!--\n![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.8562-6/208928083_1505692899772044_6512443067227180116_n.png?_nc_cat=105&ccb=1-5&_nc_sid=6825c5&_nc_ohc=RV6UNElh23UAX9cZQ89&_nc_oc=AQnil-Mqh6mcLOpB2isoCdZ71Le3MIpbIAyneM8M3X0Q0ng2kTUyxLJEDZbiPi4QBqcuvvb_Rqn-GByBNwkGzYW0&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=4ff007502a0141049d10a1b02c098fc9&oe=6183C419)-->\n\nTo learn more about message templates, see [Messages, Business-Initiated Messages](https://developers.facebook.com/docs/whatsapp/overview/messages#business-initiated-messages).\n\n## Before You Start\n\nMake sure that you have completed the actions in the [Messages — Prerequisites documentation](https://developers.facebook.com/docs/whatsapp/api/messages#prereq).\n\n## Step 1: Create Template Using the WhatsApp Manager\n\nMessage templates are created in the WhatsApp Manager, which is part of your WhatsApp Account in the [Meta Business Manager](https://business.facebook.com/). Your message templates will be reviewed to ensure they do not violate WhatsApp policies. Once approved, your business will have its own namespace where the message templates live.\n\nWhen creating a message template, you must have the following:\n\n1.  **Message template name**: Can only contain **lowercase alphanumeric** characters and underscores ( _ ). No other characters or white space are allowed.\n2.  **Components of the message template**: Fill in the template with the text and/or media components, including parameter placeholders, as required. Make sure it contains no newlines, tabs, or more than 4 consecutive spaces and meets the length restrictions as called out in the Business Manager or [WhatsApp Business Management API](https://developers.facebook.com/docs/whatsapp/business-management-api/message-templates#creating-message-templates).\n3.  All other translations your business desires.\n    \n\nWhen creating a message template, you can add a sample template by clicking the **Add Sample** button. This helps us during the review and approval process, so we can understand what kind of message you plan to send. Make sure these are examples and do not include any confidential or personal information.\n\nSee [Create Message Templates for your WhatsApp Business API Account](https://www.facebook.com/business/help/2055875911147364) for more detailed steps for creating message templates.\n\n### Examples\n\nCreating a welcome message where the message template name is welcome and the message is:\n\n```\n  \"Welcome {{1}}. We look forward to serving you on WhatsApp.\" \n\n```\n\nCreating an order confirmation message where the message template name is **`order_confirmation`** and the message is:\n\n```\n  \"Your order {{1}} for a total of {{2}} is confirmed. The expected delivery is {{3}}.\" \n\n```\n\n### Translations\n\nWhatsApp does not do any translations for your business. All message template translations must be entered by you in same format described here. The element name is the same for all translations. For more information, see:\n\n*   [Translations](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#translations)\n*   [Supported languages](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages)\n    \n\n## Step 2: Make **POST** Request to `/messages`\n\nOnce you have your template, you can send it to your customers via the **`template`** object.\n\n```\nPOST /v1/messages\n{\n  \"to\": \"recipient_wa_id\",\n  \"type\": \"template\",\n  \"template\": {\n        \"namespace\": \"your-namespace\",\n        \"name\": \"your-template-name\",\n        \"language\": {\n            \"code\": \"your-language-and-locale-code\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [{\n            \"type\": \"body\",\n            \"parameters\": [\n                {\n                    \"type\": \"text\",\n                    \"text\": \"your-text-string\"\n                },\n                {\n                    \"type\": \"currency\",\n                    \"currency\": {\n                        \"fallback_value\": \"$100.99\",\n                        \"code\": \"USD\",\n                        \"amount_1000\": 100990\n                    }\n                },\n                {\n                    \"type\": \"date_time\",\n                    \"date_time\" : {\n                        \"fallback_value\": \"February 25, 1977\",\n                        \"day_of_week\": 5,\n                        \"day_of_month\": 25,\n                        \"year\": 1977,\n                        \"month\": 2,\n                        \"hour\": 15,\n                        \"minute\": 33\n                    }\n                },\n                {\n                \"type\": \"date_time\",\n                    \"date_time\" : {\n                    \"fallback_value\": \"February 25, 1977\",\n                    \"timestamp\": 1485470276\n                    }\n                }\n            ]\n        }]\n    }\n}\n\n```\n\n### Parameters\n\n*   [Parameters common to all message requests](#a9259d0a-62a6-4614-b1d5-6591b4170ec0)\n*   [Parameters for message templates](https://developers.facebook.com/docs/whatsapp/api/messages#message-templates): **`template`** object, **`components`** object, **`parameters`** object, **`hsm`** object, and the **`language`** object.\n*   Language: [Language policy options](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#language-policy-options), [**`language`** object](#5bf11e7b-5a2b-4ad8-a113-f96afe031281), [Localizable parameters](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#local).\n    \n\n## Step 3: Check Your API Response\n\nA successful response includes a **`messages`** object with an **`id`**.\n\n```\n{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }]\n} \n\n```\n\nAn unsuccessful response contains an error object with an error string, error code and other information. See [Error and Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors) for more information."
						},
						{
							"name": "Sending Media Message Templates",
							"item": [
								{
									"name": "Sending Media Message Templates",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"caption\": \"<Message Caption>\",\n                        \"link\": \"<Media HTTPS URL>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Message Text Param>\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										},
										"description": "The following examples show how to send 3 types of media message templates that were provided in the above guide. These examples include:\n\n1. Media Message Template\n2. Move Ticket\n3. Flight Ticket"
									},
									"response": [
										{
											"name": "Media Message Template Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"caption\": \"<Message Caption>\",\n                        \"link\": \"<Media HTTPS URL>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Message Text Param>\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										},
										{
											"name": "Move Ticket Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"movie_ticket_update\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"image\": {\n                          \"id\": \"your-image-id\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                \t{\n                \t\t\"type\": \"text\",\n                \t\t\"text\": \"Star Rangers\"\n                \t},\n                    {\n                    \t\"type\": \"date_time\",\n                        \"date_time\" : {\n                            \"fallback_value\": \"May 1st, 2019 8:45pm\",\n                            \"day_of_month\": 20,\n                            \"year\": 2019,\n                            \"month\": 9,\n                            \"hour\": 20,\n                            \"minute\": 45\n                        }\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Carnival, Sangam\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Silver\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"F6, F7, F8\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{ \n    \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										},
										{
											"name": "Flight Ticket Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n\t        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"flight_confirmation\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"document\",\n                        \"document\": {\n                        \t\"filename\": \"MRRATH-CGK-KUL.pdf\",\n                        \t\"link\": \"link-to-your-document\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                \t{\n                \t\t\"type\": \"text\",\n                \t\t\"text\": \"CGK (Jakarta)\"\n                \t},\n                \t{\n                \t\t\"type\": \"text\",\n                \t\t\"text\": \"KUL (Kuala Lumpur)\"\n                \t},\n                    {\n                    \t\"type\": \"date_time\",\n                        \"date_time\" : {\n                            \"fallback_value\": \"20th April 2019, 12:20pm\",\n                            \"day_of_month\": 20,\n                            \"year\": 2019,\n                            \"month\": 9,\n                            \"hour\": 12,\n                            \"minute\": 10\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{ \n    \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										}
									]
								}
							],
							"description": "Media message templates expand the content you can send recipients beyond the standard message template type to include media and headers using a **`components`** object. The **`components`** object allows you to indicate the **`type`** of message and the message's **`parameters`**.\n\n<!--![Media Message Templates](https://scontent-sea1-1.xx.fbcdn.net/v/t39.8562-6/207199434_988368091926276_8069423785945816495_n.png?_nc_cat=109&ccb=1-5&_nc_sid=6825c5&_nc_ohc=mzBXmhTWlp4AX-iBjus&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=37f9181b10ed659e27a66603693b995a&oe=6183EC44)-->\n\n## Step 1: Make **POST** Request to `/messages`\n```\nPOST /v1/messages\n{\n  \"to\": \"recipient_wa_id\",\n  \"type\": \"template\",\n  \"template\": {\n    \"namespace\": \"your-namespace\",\n    \"language\": {\n      \"policy\": \"deterministic\",\n      \"code\": \"your-language-and-locale-code\"\n    },\n    \"name\": \"your-template-name\",\n    \"components\": [\n    {\n      \"type\" : \"header\",\n      \"parameters\": [\n      # The following parameters code example includes several different possible header types, \n      # not all are required for a media message template API call.\n\n      {\n        \"type\": \"text\",\n        \"text\": \"replacement_text\"\n      }\n\n      # OR\n\n      {\n        \"type\": \"document\",\n        \"document\": {\n          \"id\": \"your-media-id\",\n          # filename is an optional parameter\n          \"filename\": \"your-document-filename\"\n        }\n      }\n\n      # OR\n\n      {\n        \"type\": \"document\",\n        \"document\": {\n          \"link\": \"the-provider-name/protocol://the-url\",\n          # provider and filename are optional parameters\n          \"provider\": {\n            \"name\" : \"provider-name\"\n          },\n          \"filename\": \"your-document-filename\"\n        }\n      }\n\n      # OR\n  \n      {\n        \"type\": \"video\",\n        \"video\": {\n          \"id\": \"your-media-id\"\n        }\n      }\n\n      # OR\n  \n      {\n        \"type\": \"video\",\n        \"video\": {\n          \"link\": \"the-provider-name/protocol://the-url\"\n          # provider is an optional parameter\n          \"provider\": {\n            \"name\" : \"provider-name\"\n          }\n        }\n      }\n\n      # OR\n\n      {\n        \"type\": \"image\",\n        \"image\": {\n          \"link\": \"http(s)://the-url\",\n          # provider is an optional parameter\n          \"provider\": {\n            \"name\" : \"provider-name\"\n          },\n        }\n      }\n    ]\n    # end header\n    },\n    {\n      \"type\" : \"body\",\n      \"parameters\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"replacement_text\"\n        },\n        {\n          \"type\": \"currency\",\n          \"currency\" : {\n            \"fallback_value\": \"$100.99\",\n            \"code\": \"USD\",\n            \"amount_1000\": 100990\n          }\n        },\n        {\n          \"type\": \"date_time\",\n          \"date_time\" : {\n            \"fallback_value\": \"February 25, 1977\",\n            \"day_of_week\": 5,\n            \"day_of_month\": 25,\n            \"year\": 1977,\n            \"month\": 2,\n            \"hour\": 15,\n            \"minute\": 33, #OR\n            \"timestamp\": 1485470276\n          }\n        },\n        {\n        ...\n        # Any additional template parameters\n        }\n      ] \n      # end body\n      },\n    ]\n  }\n}\n```\n\n### Parameters\n* [Parameters common to all message requests](https://developers.facebook.com/docs/whatsapp/api/messages#parameters)\n* [Parameters for message templates](https://developers.facebook.com/docs/whatsapp/api/messages#message-templates)\n\n### Media Format Recommendation\nImages taller than 1.91:1 aspect ratio are cropped vertically. To communicate the crux in such images, plan to present the most important information at the center of the image.\n\n## Step 2: Check the API Response\nA successful response includes a **`messages`** object with an **`id`**.\n\n```\n{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }]\n}\n```\nAn unsuccessful response contains an error object with an error string, error code and other information.\n\n> If a template is sent to an account that is incapable of receiving the template, the `1026 (ReceiverIncapable)` error will be sent in the error object to the configured Webhook server.\n\nSee [Error and Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors) for more information on errors.\n\n## Examples\n\nThese examples demonstrate the process of setting up media message templates beginning with the template creation in your Business Manager and sending the message templates with API calls to the **`messages`** endpoint.\n\n> These examples are for illustrative purposes only and cannot be used. You must create your own samples and have them approved in order to test the media message template functionality.\n\n### Move Ticket Example\n\nThis example show the creation of a media message template with a QR code image.\n\n#### 1. Create the media message template in your Business Manager.\n<!--\n![Business Manager message template creation](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/77773705_547937049364225_6258536858087587840_n.png?_nc_cat=109&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=zjXogjK4lccAX8Zuu3O&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=dbd71573d57540052aac65bf3b6e9d14&oe=61820C4B)-->\n\n#### 2. The `messages` API call adds in the parameter information.\n\n```\nPOST /v1/messages\n{\n    \"to\": \"your-test-recipient-wa-id\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"movie_ticket_update\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"image\": {\n                          \"id\": \"your-image-id\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                \t{\n                \t\t\"type\": \"text\",\n                \t\t\"text\": \"Star Rangers\"\n                \t},\n                    {\n                    \t\"type\": \"date_time\",\n                        \"date_time\" : {\n                            \"fallback_value\": \"May 1st, 2019 8:45pm\",\n                            \"day_of_month\": 20,\n                            \"year\": 2019,\n                            \"month\": 9,\n                            \"hour\": 20,\n                            \"minute\": 45\n                        }\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Carnival, Sangam\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Silver\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"F6, F7, F8\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n\n#### 3. Your customer receives their movie ticket message.\n<!--\n![Movie Ticket Message](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/70129256_415817289048977_6233957271353688064_n.png?_nc_cat=107&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=WZodsUSE3f0AX-3ayE-&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=249adcf98d6df1bc6b705c95f68d4325&oe=6182ADAA)-->\n\n### Flight Ticket Example\nThis example show the creation of a media message template with a PDF document.\n\n#### 1. Create the media message template in your Business Manager.\n\n<!--![Business Manager message template creation](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/77782367_798102473959182_7671110249796861952_n.png?_nc_cat=105&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=g9k0321Vmj8AX-t5cT6&_nc_oc=AQlf_bwHgDLNCHs2vqJ_ZPyPjG3uXVWrvRUl15YaTDC7UmNaf1qpiFgBb-S5c5dAPdLjOgCXCapEnlcIe2Y5Rb9_&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=2f5fc289cb83f85484e447fb64147c14&oe=6183CE93)-->\n\n#### 2. The `messages` API call adds in the parameter information.\n\n```\nPOST /v1/messages\n{\n    \"to\": \"your-test-recipient-wa-id\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n\t        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"flight_confirmation\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"document\",\n                        \"document\": {\n                        \t\"filename\": \"MRRATH-CGK-KUL.pdf\",\n                        \t\"link\": \"link-to-your-document\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                \t{\n                \t\t\"type\": \"text\",\n                \t\t\"text\": \"CGK (Jakarta)\"\n                \t},\n                \t{\n                \t\t\"type\": \"text\",\n                \t\t\"text\": \"KUL (Kuala Lumpur)\"\n                \t},\n                    {\n                    \t\"type\": \"date_time\",\n                        \"date_time\" : {\n                            \"fallback_value\": \"20th April 2019, 12:20pm\",\n                            \"day_of_month\": 20,\n                            \"year\": 2019,\n                            \"month\": 9,\n                            \"hour\": 12,\n                            \"minute\": 10\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n#### 3. Your customer receives their boarding pass in a PDF document.\n\n<!--![Flight Ticket Message](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/70137244_1157828557742271_5964907703749836800_n.png?_nc_cat=111&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=mYMIMhlYw0gAX8fjix5&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=6616cbf43b05056e9481fc2aefa6611a&oe=6183E604)-->"
						},
						{
							"name": "Sending Interactive Message Templates",
							"item": [
								{
									"name": "Sending Interactive Message Templates",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										},
										"description": "The following examples show you how to send interactive message templates. These examples include:\n\n1. Callback from a Quick Reply Button Click\n2. Trip Reminder\n3. Product Shipment"
									},
									"response": [
										{
											"name": "Callback from a Quick Reply Button Click",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{User-Access-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16505551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"button\": {\n                \"payload\": \"No-Button-Payload\",\n                \"text\": \"No\"\n            },\n            \"context\": {\n                \"from\": \"16315558007\",\n                \"id\": \"gBGGFmkiWVVPAgkgQkwi7IORac0\"\n            },\n            \"from\": \"16505551234\",\n            \"id\": \"ABGGFmkiWVVPAgo-sKD87hgxPHdF\",\n            \"timestamp\": \"1591210827\",\n            \"type\": \"button\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										},
										{
											"name": "Trip Reminder Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{User-Access-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"upcoming_trip_reminder\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"12/26\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"*Ski Trip*\"\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"29th July 2019, 8:00am\",\n                            \"day_of_month\": \"29\",\n                            \"year\": \"2019\",\n                            \"month\": \"7\",\n                            \"hour\": \"8\",\n                            \"minute\": \"00\"\n                        }\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"*Squaw Valley Ski Resort, Tahoe*\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"quick_reply\",\n                \"index\": 0,\n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        \"payload\": \"Yes-Button-Payload\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"quick_reply\",\n                \"index\": 1,\n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        \"payload\": \"No-Button-Payload\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										},
										{
											"name": "Product Shipment Example",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"oculus_shipment_update\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"image\": {\n                            \"link\": \"<Link To Your Image>\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Anand\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Quest\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"113-0921387\"\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\": {\n                            \"fallback_value\": \"23rd Nov 2019\",\n                            \"day_of_month\": \"20\",\n                            \"year\": \"2019\",\n                            \"month\": \"9\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"type\": \"button\",\n                \"index\": \"0\",\n                \"sub_type\": \"url\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"1Z999AA10123456784\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/messages",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"messages"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
										}
									]
								}
							],
							"description": "Interactive message templates expand the content you can send recipients beyond the standard message template and media messages template types to include interactive buttons using the **`components`** object.\n\nThere are two types of predefined buttons offered:\n\n*   **Call-to-Action**: Allows your customer to call a phone number and visit a website\n*   **Quick Reply**: Allows your customer to return a simple text message\n    \n\nThese buttons can be attached to text messages or media messages. Once your interactive message templates have been created and approved, you can use them in notification messages as well as customer service/care messages.\n\n## Step 1: Make **POST** Request to `/messages`\n\n```\n{\n    \"to\": \"recipient_wa_id\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"your-namespace\",\n        \"language\": {\n            \"policy\": \"deterministic\",\n            \"code\": \"your-language-and-locale-code\"\n        },\n        \"name\": \"your-template-name\",\n        \"components\": [\n            {\n                \"type\" : \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"replacement_text\"\n                    }\n                ]\n            # end header\n            },\n            {\n                \"type\" : \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"replacement_text\"\n                    },\n                    {\n                        \"type\": \"currency\",\n                        \"currency\" : {\n                            \"fallback_value\": \"$100.99\",\n                            \"code\": \"USD\",\n                            \"amount_1000\": 100990\n                        }\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\" : {\n                            \"fallback_value\": \"February 25, 1977\",\n                            \"day_of_week\": 5,\n                            \"day_of_month\": 25,\n                            \"year\": 1977,\n                            \"month\": 2,\n                            \"hour\": 15,\n                            \"minute\": 33, #OR\n                            \"timestamp\": 1485470276\n                        }\n                    },\n                    {\n                        ...\n                        # Any additional template parameters\n                    }\n                ] \n            # end body\n            },\n            # The following part of this code example includes several possible button types, \n            # not all are required for an interactive message template API call.\n            {\n                \"type\": \"button\",\n                \"sub_type\" : \"quick_reply\",\n                \"index\": \"0\", \n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        # Business Developer-defined payload\n                        \"payload\":\"aGlzIHRoaXMgaXMgY29vZHNhc2phZHdpcXdlMGZoIGFTIEZISUQgV1FEV0RT\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\" : \"url\",\n                \"index\": \"1\", \n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        # Business Developer-defined dynamic URL suffix\n                        \"text\": \"9rwnB8RbYmPF5t2Mn09x4h\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\" : \"url\",\n                \"index\": \"2\",\n                \"parameters\": [\n                    {                    \n                        \"type\": \"text\",\n                        # Business Developer-defined dynamic URL suffix\n                        \"text\": \"ticket.pdf\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n\n```\n\n### Parameters\n\n*   [Parameters common to all message requests](https://developers.facebook.com/docs/whatsapp/api/messages#parameters)\n*   [Parameters for message templates](https://developers.facebook.com/docs/whatsapp/api/messages#message-templates):\n    *   [**`template`** object](https://developers.facebook.com/docs/whatsapp/api/messages#template-object)\n    *   [**`components object`**:](https://developers.facebook.com/docs/whatsapp/api/messages#components-object) for interactive message templates, include the **`button`** type and the **`sub_type`** field\n    *   [**`parameters`** object](https://developers.facebook.com/docs/whatsapp/api/messages#parameters-object)\n\n## Step 2: Check Your API Response\n\nA successful response includes a **`messages`** object with an **`id`**.\n\n```\n{\n  \"messages\": [{\n    \"id\": \"gBEGkYiEB1VXAglK1ZEqA1YKPrU\"\n  }]\n}\n\n```\n\nAn unsuccessful response contains an error object with an error string, error code and other information.\n\n> If a template is sent to an account that is incapable of receiving the template, the `1026 (ReceiverIncapable)` error will be sent in the error object to the configured Webhook server.\n\nSee [Error and Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors) for more information on errors.\n\n## Callback from a Quick Reply Button Click\n\nWhen your customer clicks on a quick reply button, a response is sent. Below is an example of the callback format. **Note:** A customer may not click a button and either reply to the interactive template message or just send you a message. Make sure that you are able to support this type of scenario as well. See the [Webhooks documentation](https://developers.facebook.com/docs/whatsapp/api/webhooks) for more information.\n\n```\n{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16505551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"button\": {\n                \"payload\": \"No-Button-Payload\",\n                \"text\": \"No\"\n            },\n            \"context\": {\n                \"from\": \"16315558007\",\n                \"id\": \"gBGGFmkiWVVPAgkgQkwi7IORac0\"\n            },\n            \"from\": \"16505551234\",\n            \"id\": \"ABGGFmkiWVVPAgo-sKD87hgxPHdF\",\n            \"timestamp\": \"1591210827\",\n            \"type\": \"button\"\n        }\n    ]\n    # If there are any errors, an errors field (array) will be present        \n    \"errors\": [ { ... } ]\n}\n\n```\n\n## Examples\n\nThese examples illustrate the process of setting up interactive message templates beginning with the template creation in your Business Manager and sending the message templates with API calls to the **`messages`** endpoint.\n\n### Trip Reminders\n\nThis example show the creation of an interactive media message template with quick reply buttons.\n\n#### 1\\. Create the interactive media message template in your Business Manager.\n\n<!--\n![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/69992761_2422053444581036_9156860843323817984_n.png?_nc_cat=103&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=IYL-Bsp4fmwAX8gJM6P&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=f9416a11994d1b9b5779646c4b08f69e&oe=61850DF3)-->\n\n#### 2\\. The messages API call adds in the parameter information.\n\n```\nPOST /v1/messages\n{\n    \"to\": \"your-test-recipient-wa-id\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"upcoming_trip_reminder\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"12/26\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"*Ski Trip*\"\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\" : {\n                            \"fallback_value\": \"29th July 2019, 8:00am\",\n                            \"day_of_month\": \"29\",\n                            \"year\": \"2019\",\n                            \"month\": \"7\",\n                            \"hour\": \"8\",\n                            \"minute\": \"00\"\n                        }\n                    },\n                    {\n                            \"type\": \"text\",\n                            \"text\": \"*Squaw Valley Ski Resort, Tahoe*\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"quick_reply\",\n                \"index\": 0,\n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        \"payload\": \"Yes-Button-Payload\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"quick_reply\",\n                \"index\": 1,\n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        \"payload\": \"No-Button-Payload\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n\n```\n\n#### 3\\. Your customer receives their trip reminder message with quick reply buttons.\n\n<!-- ![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/70078284_2422831358040222_1067361169045454848_n.png?_nc_cat=106&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=RMwW84in4ssAX9j4ahK&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=2c5d3453510cadc647662b48e21205b5&oe=6184B19F) -->\n\n### Product Shipment\n\nThis example show the creation of an interactive media message template with URL and phone number buttons.\n\n#### 1\\. Create the interactive media message template in your Business Manager.\n\n<!-- ![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/70078284_2422831358040222_1067361169045454848_n.png?_nc_cat=106&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=RMwW84in4ssAX9j4ahK&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=2c5d3453510cadc647662b48e21205b5&oe=6184B19F) -->\n\n#### 2\\. The `messages` API call adds in the parameter information.\n\n```\nPOST /v1/messages\n{\n    \"to\": \"your-test-recipient-wa-id\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"88b39973_f0d5_54e1_29cf_e80f1e3da4f2\",\n        \"name\": \"oculus_shipment_update\",\n        \"language\": {\n            \"code\": \"en\",\n            \"policy\": \"deterministic\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [{\n                    \"type\": \"image\",\n                    \"image\": {\n                        \"link\": \"link-to-your-image\"\n                    }\n                }]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Anand\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"Quest\"\n                    },\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"113-0921387\"\n                    },\n                    {\n                        \"type\": \"date_time\",\n                        \"date_time\" : {\n                            \"fallback_value\": \"23rd Nov 2019\",\n                            \"day_of_month\": \"20\",\n                            \"year\": \"2019\",\n                            \"month\": \"9\"\n                        }\n                    }\n                ] \n            },\n            {\n                \"type\": \"button\",\n                \"index\": \"0\",\n                \"sub_type\": \"url\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"1Z999AA10123456784\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n\n```\n\n#### 3\\. Your customer receives their product shipment message with URL and phone call buttons.\n\n<!-- ![](https://scontent-sea1-1.xx.fbcdn.net/v/t39.2365-6/70110077_2418689288410121_928570447631482880_n.png?_nc_cat=105&ccb=1-5&_nc_sid=ad8a9d&_nc_ohc=JKPe_qiSHrAAX_fKga0&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=7beb9298beb61d0ed6f3e0893b535cc1&oe=61855F5E)-->"
						},
						{
							"name": "Mark Messages as Read",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"read\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages/message-id",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages",
										"message-id"
									]
								},
								"description": "You can use the **`messages`** endpoint to change the status of incoming messages to read.\n\n## Before You Start\nYou must set **`pass_through`** to **`false`** in the [application settings](https://developers.facebook.com/docs/whatsapp/guides/docs/whatsapp/api/settings/app).\n\nWhen **`pass_through`** is set to **`true`**, messages are removed from the local database after they are delivered to or read by the recipient. But, when it is set to **`false`**, incoming messages are saved in local database for 7 days, after which they are deleted if **`db_garbagecollector_enable`** is set to **`true`**.\n\nWe recommend marking incoming messages as read within 7 days of receipt.\n\n> When you set the flag for first time, you must restart the Coreapp to reflect this change.\n\n## Step 1: Make **PUT** Request to `/messages`\n\nThe **`message_id`** used in this API call is the **`id`** provided in the inbound notification.\n\n```\nPUT /v1/messages/message-id\n\n{\n    \"status\": \"read\"\n}\n```\n\n### Request Parameter\n\n| Name                  | Description                         |\n|-----------------------|-------------------------------------|\n| **`status`**          | **Required**.<br/>Updating **`status`** to **`read`** is applicable only for incoming messages. |\n\n## Step 2: Check the API Response\nA successful response returns `null` or `{}`."
							},
							"response": [
								{
									"name": "Mark Messages as Read",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"read\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages/message-id",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages",
												"message-id"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.41.2\"\n    }\n}"
								}
							]
						}
					],
					"description": "This section contains a collection of guides that show you how to send various messages."
				},
				{
					"name": "Sell Products and Services",
					"item": [],
					"description": "Businesses using the WhatsApp Business API can showcase and share their products and services with customers for them to browse items and add to a cart without leaving the chat. To learn more about selling products and services, see [Commerce Guides](https://developers.facebook.com/docs/whatsapp/guides/commerce-guides)."
				},
				{
					"name": "Set up and Maintain Your API Client",
					"item": [],
					"description": "To learn more about setting up and maintaining your API Client, see [Set up and Maintain Your API Client](https://developers.facebook.com/docs/whatsapp/guides/set-up-and-maintaining-your-api-client)."
				},
				{
					"name": "Troubleshooting Guides",
					"item": [],
					"description": "To learn more about troubleshooting media upload and download issues, see [Troubleshooting Media Upload and Download](https://developers.facebook.com/docs/whatsapp/guides/troubleshooting/media-upload-and-download)"
				},
				{
					"name": "Reset Your Password",
					"item": [],
					"description": "See [Reset Your Password](https://developers.facebook.com/docs/whatsapp/on-premises/guides/reset-password), to learn how to reset your password if you forgot it."
				},
				{
					"name": "WADebug: Troubleshooting Tool",
					"item": [],
					"description": "For more information about WADebug, see [WADebug: Troubleshooting Tool for WhatsApp Business API](https://developers.facebook.com/docs/whatsapp/guides/wadebug)."
				}
			],
			"description": "These guides walk through the various parts of your business on WhatsApp."
		},
		{
			"name": "API Reference",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Login User",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{UserPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{UserUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_password\": \"<New Password>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/users/login",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users",
										"login"
									]
								},
								"description": "To authenticate yourself with WhatsApp Business API client, you must log in. To log in, send your username and password over basic authentication and receive a bearer token in response. Then, you then use the bearer token for authentication when sending requests to any WhatsApp Business API endpoint. Learn more about authentication to use the API.\n\n## Creating\n\nYou authenticate yourself using basic authentication (username, password) when you log in. The Authorization is set in the HTTP header. The `type` is `Basic` and the `credentials` are a base64-encoded string consisting of the `username` and `password` joined with a colon (i.e., `username:password`).\n\nWhen your login request is received by the WhatsApp Business API client, your credentials are processed for validation.\n\n* If successful, your token is generated. The response contains your token in the token field.\n* If not successful, an error is returned.\n\n## Response Parameters\n\n| Name                  | Description                      |\n|-----------------------|----------------------------------|\n| **`token`**  | **Required.** <br/><br/>Authentication token to be used for all other WhatsApp Business API calls. The token must be sent in the authorization header in the format:<br/>`Authorization: Bearer <authentication-token>` |\n| **`expires_after`** | **Required.** <br/><br/> Token expiration timestamp. By default, this is 7 days. |"
							},
							"response": [
								{
									"name": "Login User",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic base64({{Username}}:{{Password}})"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"abcd!@#$\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/users/login",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n   \"users\": [{\n      \"token\": \"eyJhbGciOHlXVCJ9.eyJ1c2VyIjoNTIzMDE2Nn0.mEoF0COaO00Z1cANo\",\n      \"expires_after\": \"2021-09-14 15:29:26+00:00\"\n   }],\n   \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Login Admin",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{AdminPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{AdminUsername}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"new_password\": \"<New Admin Password>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/users/login",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users",
										"login"
									]
								},
								"description": "The WhatsApp Business API client has a default account — the username of the account is `admin` and the password is `secret`. This account cannot be removed or deleted from the system. For security reasons, you are required to change the admin password on your first login.\n\n## Password Recommendations\n\nWe recommended you use strong passwords when creating new accounts and when setting new accounts' passwords, as per industry best practices.\n\nPasswords need to be between 8 and 64 characters long and have at least:\n\n* one digit\n* one uppercase character\n* one lowercase character\n* one special character from among `!\"#$%&\\'()*+,-./:;<=>?@[]^_`{|}~`\n\nPassword complexity is enforced upon creating a new account or changing an existing account's password."
							},
							"response": [
								{
									"name": "Login Admin",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"<New Admin Password>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/users/login",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users",
												"login"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{   \n   \"users\": [{\n      \"username\": \"username\"\n   }],\n   \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<User Username>\",\n    \"password\": \"<User Password>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/users",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users"
									]
								},
								"description": "> **The `admin` account is the only account that can create and delete users**. We recommend using the **`admin`** account only for this purpose. You should create user accounts and use them to manage your WhatsApp Business API Clients.\n\nTo create an account for a user within your business who can access the WhatsApp Business API, send the **`username`** and **`password`** to the WhatsApp Business API Client using the **/users** endpoint. It validates the **`username`** and **`password`** and then creates a new account if one does not already exist for that **`username`**. The password is processed with a one-way hash and stored in a data volume. Both **`username`** and **`password`** are required parameters.\n\n## Request Parameters\n\n| Name                           | Description                              |\n|--------------------------------|------------------------------------------|\n| **`username`** <br/><string>                | **Required**. <br/><br/>Must be a minimum of 4 characters and a maximum of 32 characters. Establish a template for username, such as first initial and last name, to avoid creating multiple accounts for the same person. |\n| **`password`** <br/><string>                | **Required**. <br/><br/>Must be a minimum of 8 characters and a maximum of 64 characters. |\n| **`Authorization`** <br/><string>                | **Required**. <br/><br/>Authentication token for the administrator who is running the request. For more information, see the [Login and Authentication — Tokens](https://developers.facebook.com/docs/whatsapp/api/users/login#token) documentation. |\n\n## Common Errors\nYou may encounter the following errors when creating a new user:\n\n| HTTP Status Code\t| Reason                   |\n|-----------------------|--------------------------|\n| `400`                 | <ul><li>**`Password`** is too short (less than 8 characters) or too long (greater than 64 characters).</li><li>**`Username`** is too short (fewer than 4 characters) or too long (greater than 32 characters)</li></ul><br/>Submit the request again with an appropriate length `username/password`.|\n| `403`                 | You are not using the `admin` account to create the user account. |\n| `500`                 | Unable to create the account, possibly because it already exists. |\n\nIf there are other errors in the response, refer to the following sources for more information: [Error Codes](https://developers.facebook.com/docs/whatsapp/api/errors#error) and [HTTP Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors#http)."
							},
							"response": [
								{
									"name": "Create User",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{UserUsername}}\",\n    \"password\": \"{{UserPassword}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/users",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"users\": [\n        {\n            \"username\": \"username\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								},
								{
									"name": "Create User Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"{{UserUsername}}\",\n    \"password\": \"{{UserPassword}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/users",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": 1014,\n            \"title\": \"Internal error\",\n            \"details\": \"Unable to create user. Already exist?\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/users/{{AdminUsername}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users",
										"{{AdminUsername}}"
									]
								},
								"description": "This request retrieves the administrator user account associated with WhatsApp Business API.\n\nIf successful, the request returns HTTP status code `200 OK`.\n\nIf not successful, the response may contain one of the following HTTP status codes:\n\n| HTTP Status Code\t| Reason                   |\n|-----------------------|--------------------------|\n| `401 Unauthorized`    | The `Bearer` token sent with the request is not valid. Verify that you are using a valid `Bearer` token and try again.|\n| `404 Not Found`       | A user account with the username submitted in the request was not found. |\n| `500`                 | Unknown reason |\n\nIf there are other errors in the response, refer to the following sources for more information: [Error Codes](https://developers.facebook.com/docs/whatsapp/api/errors#error) and [HTTP Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors#http)."
							},
							"response": [
								{
									"name": "Get Admin",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/users/{{AdminUsername}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users",
												"{{AdminUsername}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"users\": [\n        {\n            \"ROLES\": \"ROLE_ADMIN | ROLE_USER\",\n            \"username\": \"admin\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/users/{{UserUsername}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users",
										"{{UserUsername}}"
									]
								},
								"description": "You can get information to determine if a user account has been created for a specific username and to find out the role assigned to the user account.\n\nIf successful, the request returns HTTP status code `200 OK`.\n\nIf not successful, the response may contain one of the following HTTP status codes:\n\n| HTTP Status Code\t| Reason                   |\n|-----------------------|--------------------------|\n| `401 Unauthorized`    | The `Bearer` token sent with the request is not valid. Verify that you are using a valid `Bearer` token and try again.|\n| `404 Not Found`       | A user account with the username submitted in the request was not found. |\n| `500`                 | Unknown reason |\n\nIf there are other errors in the response, refer to the following sources for more information: [Error Codes](https://developers.facebook.com/docs/whatsapp/api/errors#error) and [HTTP Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors#http)."
							},
							"response": [
								{
									"name": "Get User",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/users/{{UserUsername}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users",
												"{{UserUsername}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"users\": [\n        {\n            \"ROLES\": \"ROLE_ADMIN | ROLE_USER\",\n            \"username\": \"username\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update User",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<New Password>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/users/{{UserUsername}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users",
										"{{UserUsername}}"
									]
								},
								"description": "A user with the role of `ROLE_ADMIN` can update the password associated with user accounts with roles of `ROLE_ADMIN` and `ROLE_USER`. Individual users can also update the password for their own accounts. Updating a user account password does not invalidate any access tokens associated with the user. Currently,  only user `admin` has `ROLE_ADMIN`; other users have `ROLE_USER`.\n\n> **Only the `admin` account is used to manage accounts, that is actions such as creating or removing users.** If you forget your password, please contact Direct Support for assistance with resetting it.\n\nIf successful, the password associated with the username is updated. The HTTP status code 200 OK is returned, along with a payload similar to response in the example.\n\nIf not successful, the response may contain on the following HTTP status codes:\n\n| HTTP Status Code\t| Reason                   |\n|-----------------------|--------------------------|\n| `400`    | Bad request.|\n| `401`    | Unable to validate the credentials.|\n| `404 Not Found`       | A user account with the username submitted in the request was not found. |\n| `500`                 | Unknown reason |\n\nIf there are other errors in the response, refer to the following sources for more information: [Error Codes](https://developers.facebook.com/docs/whatsapp/api/errors#error) and [HTTP Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors#http)."
							},
							"response": [
								{
									"name": "Update User",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"<New Password>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/users/{{UserUsername}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users",
												"{{UserUsername}}"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"users\": [\n        {\n            \"username\": \"username\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete User",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/v1/users/{{UserUsername}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users",
										"{{UserUsername}}"
									]
								},
								"description": "Use the following API call to delete a user account, where username is the name of the user account you want to delete. The Bearer token is the token belonging to the admin account.\n\nIf an account is compromised or if there are any other reasons to delete it, the **`admin`** must delete the account. After you successfully delete an account, all the tokens associated with the account are removed from the system.\n\n> The `admin` account cannot be removed from the system.\n\nIf successful, the user account is deleted. The response includes the HTTP status code 200 OK and the payload displayed in the example response.\n\nIf not successful, the response may contain one of the following HTTP status codes:\n\n| HTTP Status Code\t| Reason                   |\n|-----------------------|--------------------------|\n| `400`    | Invalid username, `admin`.|\n| `401`    | Unable to validate the credentials.|\n| `403`    | Not using the `admin` account.\n| `404`       | A user account with the username submitted in the request was not found. |\n| `500`                 | Unknown reason |\n\nIf there are other errors in the response, refer to the following sources for more information: [Error Codes](https://developers.facebook.com/docs/whatsapp/api/errors#error) and [HTTP Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors#http)."
							},
							"response": [
								{
									"name": "Delete User",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/users/{{UserUsername}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users",
												"{{UserUsername}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n    \"users\": [\n        {\n            \"username\": \"username\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Logout User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/v1/users/logout",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"users",
										"logout"
									]
								},
								"description": "Use the **`/v1/users/logout`** endpoint to log out of the WhatsApp Business API Client. Logging out revokes the authentication token.\n\n## Before You Start\n\n* Logging out of the WhatsApp Business API Client explicitly revokes the authentication token sent with the request —generating an authentication token is discussed in Login and Authentication. Any other tokens associated with the same username remain valid.\n\n* If you want to log a user out or revoke the user's token, use the **`DELETE /v1/users`** ([Delete User](#478fa015-dafb-4a13-ad1f-a23fe229f169)) endpoint instead. This action deletes the user from the system.\n\n## HTTP Response Code\n\n| Code | Result                    |\n|--------------------|----------------------------|\n| `200 OK`           | Success — The request was validated and the user is logged out of the account. |\n| `401 Unauthorized` | Error — The request was not validated and the user is not logged out of the account. An error code and information will present possible reasons for the error, such as invalid credentials. |"
							},
							"response": [
								{
									"name": "Logout User",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/users/logout",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"users",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Application",
							"item": [
								{
									"name": "Get Settings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/settings/application",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application"
											]
										},
										"description": "Gets the application settings of the WhatsApp Business API client.\n\n> **You must use the `admin` account to access the application settings.**\n\n## Response Parameters\n\n| Name                     | Description                      |\n|--------------------------|----------------------------------|\n| **`callback_persist`**<br/>type: Boolean   | Stores callbacks on disk until they are successfully acknowledged by the Webhook or not. Messages and callbacks are both stored in a local database to ensure that they are delivered successfully before being removed from the local database. This protects the callbacks in the event the WhatsApp Business API client or server goes down. <br/><br/>**Values:**  **`true`**(default), **`false`**<br/>**Coreapp restart required.** |\n| **`max_callback_backoff_delay_ms`**<br/>type: String | Maximum delay for a failed callback in milliseconds. For more information, read the description for **`callback_backoff_delay_ms`** below. <br/><br/>**Default:** 900000 |\n| **`media`** <br/>type: Array | List of media to auto-download. For more information, see [Auto-download Media Settings](https://developers.facebook.com/docs/whatsapp/api/settings/app#auto).|\n| **`callback_backoff_delay_ms`**<br/>type: String | Backoff delay for a failed callback in milliseconds.<br/><br/>This setting is used to configure the amount of time the backoff delays before retrying a failed callback. The backoff delay increases linearly by this value each time a callback fails to get a `HTTPS 200 OK` response. The backoff delay is capped by the **`max_callback_backoff_delay_ms`** setting. For example, if a callback fails the first time, it will try again in 3000ms (3 sec). A second failure will result in a 6000ms (6 sec) delay before retry. This continues until the callback is successful or the delay reaches 900000ms (15 min) after which the callback will continue to be retried but the delay will not increase.<br/><br/>**Default**: 3000 |\n| **`pass_through`**<br/>type: Boolean | Starting with `v2.35`, you can no longer re-enable the pass_through setting for WhatsApp Business API Clients.<br/><br/>Allows for individual messages to be deleted or stored to a local database after they've been delivered or read.<br/><br/>When messages are sent, they are stored in a local database. This database is used as the application's history. Since the business keeps its own history, you can specify whether you want message **`pass_through`** or not.<ul><li>When **`true`**, it removes messages from the local database after they are delivered to or read by the recipient.</li><li>When **`false`**, it saves all messages on local storage until they are automatically deleted (i.e., **`db_garbagecollector_enable`** is **`true`**) or explicitly deleted (i.e., **`db_garbagecollector_enable`** is **`false`**). For more information, see the [Services documentation](https://developers.facebook.com/docs/whatsapp/api/services).</li></ul><br/><br/>We recommend you disable **`pass_through`** so the status callback can function as expected.<br/><br/>**Values**: **`true`**, **`false`**(default)<br/>**Coreapp restart required.** |\n| **`sent_status`**<br/>type: Boolean | **Deprecated**: Receive a notification that a message was sent to the server.<br/><br/>**Values**: **`true`** (default), **`false`**<br/><ul><li>When set to true, you will receive a message indicating that a message has been sent.</li><li>When set to false, you will not receive a notification.</li></ul><br/> Starting in **`v2.45`**, this parameter will be deprecated in favor of the Webhooks Message Object Component.|\n| **`webhooks`**<br/>type: Webhooks Object | The Webhook URL. For example: `https://spotless-process.glitch.me/webhook`.<br/><br/>If the Webhook URL is not set, callbacks are dropped. Callbacks are an important channel to deliver both timely notifications as well as out-of-band errors, and it is thus highly recommended you configure the Webhook URL endpoint. For details on the Webhook fields, see the **`Webhooks`** Field table below. |\n| **`unhealthy_interval`**<br/>type: Integer | Maximum amount of seconds a Master node waits for a Coreapp node to respond to a heartbeat before considering it unhealthy and starting the failover process.<br/><br/> **Default**: 30<br/>**Applies to Multiconnect setups**. |\n| **`heartbeat_interval`**<br/>type: Integer | Interval of the Master node monitoring of Coreapp nodes in seconds.<br/><br/> **Default**: 5<br/>**Applies to Multiconnect setups**. |\n| **`axolotl_context_striping_disabled`**<br/>type: Boolean | Affects database connection limits.<br/><br/>Outbound and inbound performance improved with `v2.25`. This optimization relies on creating additional database connections. For some deployments, this can cause database connection limits to be reached. In that case, set the **`axolotl_context_striping_disabled`** configuration to **`true`** to disable this performance improvement feature. There is no other effect on any functionalities of the Coreapp.<br/><br/> **Values**: **`true`**, **`false`** (default)<br/>**Coreapp restart required**. |\n| **`notify_user_change_number`**<br/>type: Boolean | Affects the user_changed_number system notification.<br/><br/>**Values**: **`true`**, **`false`** (default) |\n| **`show_security_notifications`**<br/>type: Boolean | If enabled, you will receive a **`user_identity_changed`** Webhook notification when the WhatsApp Business API client detects a user you are in a conversation with has potentially changed. When this happens, all outgoing messages to this user are blocked until you have acknowledged the identity change for this user using the **`identity`** endpoint.<br/><br/>**Values**: **`true`**, **`false`** (default) |\n| **`db_garbagecollector_enable`**<br/>type: Boolean | Enables automatic garbage collection of the messages database to assist in database management.<br/><br/>This parameter is **`false`** for users who had **`pass_through`** set to **`false`** before `v2.29`. We recommend you enable this setting to ensure your database operates with stability. If you would like to disable this setting, we recommend you consider using the `/services/message/gc` endpoint to manage the database.<br/><br/>**Values**: **`true`** (default), **`false`**<br/>**Coreapp restart required**.  |\n| **`skip_referral_media_download`**<br/>type: Boolean | If set to **`true`**, the image or video that the user clicked on an ad that Clicks to WhatsApp is not downloaded.<br/><br/>**Values**: **`true`**, **`false`** (default) |\n| **`webhook_payload_conversation_pricingmodel_disabled`**<br/>type: Boolean | **Deprecated as of `v2.39` release**. <br/>Controls the inclusion of conversation and pricing information payloads in message status notifications. This field was introduced with the WhatsApp API `v2.33`.<br/><br/>**Values**: **`true`**, **`false`** (default)<br/>**Coreapp restart is not required**. |\n\n## Webhooks Fields\n\nThe following table describes fields in the `webhooks` object in more detail:\n\n| Name                     | Description                      |\n|--------------------------|----------------------------------|\n| **`url`**<br/>Type: String | Inbound and outbound notifications are routed to this URL. For more information, see the Webhooks documentation.<br/><br/>**An HTTPS-based endpoint is required; HTTP will not work.**<br/>**Example:** `https://spotless-process.glitch.me/webhook` |\n| **`max_concurrent_requests`**<br/>Type: Integer | Configures the maximum number of inflight callback requests that are sent out.<br/><br/>**Values:** `6` (Default), `12`, `18`, or `24`<br/>**Coreapp restart required**.  |\n\n## Auto-download Media Parameters\n\nThe following table describes the `media` object in more detail:\n\n| Name                     | Description                      |\n|--------------------------|----------------------------------|\n| **`auto_download`**<br/>Type: Array | Specifies which types of media to automatically download.<br/><br/>**Values:** `audio`, `document`, `voice`, `video`. `image`, `sticker`<br/> |"
									},
									"response": [
										{
											"name": "Get Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/settings/application",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"application"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"settings\": {\n        \"application\": {\n            \"callback_backoff_delay_ms\": 3000,\n            \"callback_persist\": true,\n            \"garbagecollector_enable\": {\n               \"messages\": true,\n                \"media\": false\n            },\n            \"heartbeat_interval\": 5,\n            \"max_callback_backoff_delay_ms\": 900000,\n            \"media\": {\n                \"auto_download\": [\n                    \"image\",\n                    \"video\",\n                    \"voice\",\n                    \"sticker\",\n                    \"audio\",\n                    \"document\"\n                ]\n            },\n            \"notify_user_change_number\": true,\n            \"sent_status\": true,\n            \"show_security_notifications\": true,\n            \"unhealthy_interval\": 30,\n            \"wa_id\": \"16315551019\",\n            \"webhooks\": {\n                \"max_concurrent_requests\": 12,\n                \"url\": \"https://10.254.254.254:8000\"\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.51.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Get Shards",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/account/shards",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"account",
												"shards"
											]
										},
										"description": "Gets the number of shards running for Multiconnect.\n\n## Response Fields\n\n| Name                 | Description                        |\n|----------------------|------------------------------------|\n| **`shards`**<br/>Type: Integer         | The number, as an integer , of shards running.<br/><br/>**Values**: `1`, `2`, `4`, `8`, `16`, or `32` |"
									},
									"response": [
										{
											"name": "Get Shards",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/account/shards",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"account",
														"shards"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"account\": {\n        \"shards\": 2\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Set Shards",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cc\": \"{{Country-Code}}\",\n    \"phone_number\": \"{{Phone-Number}}\",\n    \"shards\": \"1 | 2 | 4 | 8 | 16 | 32\",\n    \"pin\": \"{{Two-Step-PIN}}\",\n    \"cert\": \"<your-verified-name-cert-in-base64>\"\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/account/shards",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"account",
												"shards"
											]
										},
										"description": "The WhatsApp Business API Client uses sharding to achieve multiconnect. Depending on the number of shards you set up, the database stores a shard map that determines which shard a message should go to depending on the recipient ID (or WhatsApp username). The function to determine this is:\n\n```\nshard_id = hash(recipient-id) % shard-number\n```\n\n## Response Parameters\n\n| Name                      | Description                        |\n|---------------------------|------------------------------------|\n| **`cc`**<br/>Type: String | **Required**.<br/>The country code for the phone number registered for this WhatsApp Business API Client as a string. For example: `\"1\"`. |\n| **`phone_number`**<br/>Type: String | **Required**.<br/>The phone number registered for this WhatsApp Business API Client without the country code or plus symbol (+) as a string. For example: `\"6315550000\"`. |\n| **`shards`**<br/>Type: Integer | **Required**.<br/>The number of shards you want to have as an integer.<br/><br/>**Options**: `1`, `2`, `4`, `8`, `16`, or `32` |\n| **`pin`**<br/>Type: String | **Optional**.<br/>The existing 6-digit PIN for two-factor verification as a string. For example: `\"123456\"`. This is only required if you have two-factor verification enabled on this account. |\n| **`cert`**<br/>Type: String | **Required**.<br/>A Base64-encoded certificate associated with the phone number previously specified.<br/><br/>You can get this certificate using Business Manager. See [Copy the Base64-encoded Certificate](https://developers.facebook.com/docs/whatsapp/api/account#certificate) for information.<br/><br/>**Notes**:<ul><li>If you provide an expired certificate, your account will be banned.</li><li>If you provide a wrong certificate, you will get an error saying that your client setup is logged off. To set your shards, you need to call the endpoint again, using the correct certificate.</li><li>Starting in `v2.45`, the **`cert`** parameter is now **required**. Ensure that you update your integration to always include a valid certificate when calling the **`shards`** node.</li></ul> |\n\n## Response\n\nIf successful, the API call returns `201 Created   : You successfully changed shard number`.\n\nIf not successful, The API call returns `403 Forbidden : You could hit this if server is temporarily unavailable, retry the request should fix it.`\n\n## Troubleshooting\n\nIf there has been more than 7 days since you registered your phone number, the set shards API request will disconnect your phone number."
									},
									"response": [
										{
											"name": "Set Shards",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"cc\": \"1\",\n    \"phone_number\": \"5555551234\",\n    \"shards\": \"4\",\n    \"pin\": \"123456\",\n    \"cert\": \"<your-verified-name-cert-in-base64>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/account/shards",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"account",
														"shards"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "201 Created   : You successfully changed shard number "
										}
									]
								},
								{
									"name": "Update Webhooks",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"webhooks\": {\n        \"url\": \"<Webhook URL, https>\",\n        \"message\": {\n            \"delivered\": true,\n            \"read\": true,\n            \"sent\": true\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/application",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application"
											]
										},
										"description": "Use the **PATCH** API call to update your Webhooks settings.\n\nTo deploy a live Webhooks that can receive Webhooks events from the WhatsApp Business API, your code must have the following:\n\n* HTTPS support\n* A valid SSL certificate\n\nFor information about uploading and retrieving Webhooks CA Certificate, see the [Certificates documentation](https://developers.facebook.com/docs/whatsapp/api/certificates/webhooks).\n\n## Request Parameters\n\n| Name                                  | Description                         |\n|---------------------------------------|-------------------------------------|\n| **`webhooks`**<br/>Type: String       | **Required when you are using Webhooks**.<br/>Provide the URL for your Webhook. If the Webhook URL is not set, then callbacks are dropped. See the Sample Testing App for a simple way to see and test your Webhooks.<br/><br/>You can validate Webhook events by specifying a shared secret as a query parameter when you set the Webhook URL. For example: `https://url?auth='[shared_secret]'`. |\n| **`sent_status`**<br/>Type: Boolean   | Specify if you want to receive notifications when a message is received by the server. By default, these notifications are set to false.<br/><br/>**Values:** **`true`**, **`false`** (default) |\n| **`callback_persist`**<br/>Type: Boolean | Select whether to store callbacks on disk until they are successfully acknowledged by the Webhook or not. Notifications that are not successful (no `HTTPS 200` response) are retried indefinitely. Use this setting to configure the retry. <br/><br/>**Values:** **`true`** (default), **`false`**  |"
									},
									"response": [
										{
											"name": "Update Webhooks",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"webhooks\": {\n        \"url\": \"<Webhook URL, https>\",\n        \"message\": {\n            \"delivered\": true,\n            \"read\": true,\n            \"sent\": true\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/application",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"application"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Delete Webhooks",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"webhooks\": {\n       \"url\": \"\"\n    }\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/application",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application"
											]
										},
										"description": "Use the **DELETE** REST call to remove a Webhooks URL."
									},
									"response": [
										{
											"name": "Delete Webhooks",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"webhooks\": {\n        \"url\": \"\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/application",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"application"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"callback_backoff_delay_ms\": 3000,\n    \"callback_persist\": true,\n    \"max_callback_backoff_delay_ms\": 900000,\n    \"media\": {\n        \"auto_download\": [\n            \"audio\",\n            \"document\",\n            \"voice\",\n            \"video\",\n            \"image\",\n            \"sticker\"\n        ]\n    },\n    \"sent_status\": false | true,\n    \"heartbeat_interval\": <heartbeat-interval-in-secs>,\n    \"unhealthy_interval\": <unhealthy-interval-in-secs>,\n    \"webhooks\": {\n        \"url\": \"<webhook.your-domain>\",\n        \"max_concurrent_requests\": 12,\n        \"message\": {\n            \"delivered\": true,\n            \"read\": true,\n            \"sent\": true\n        }\n    },\n    \"axolotl_context_striping_disabled\": <false | true>,\n    \"notify_user_change_number\": <false | true>,\n    \"show_security_notifications\": <false | true>,\n    \"garbagecollector_enable\": {\n        \"messages\": <true | false>,\n        \"media\": <true | false>\n    }\n    \"skip_referral_media_download\": <true | false>,\n    \"webhook_payload_conversation_pricingmodel_disabled\": <false | true>\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/application",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application"
											]
										},
										"description": "To configure settings for the WhatsApp Business API client, use the `/v1/settings/application` endpoint with a JSON message body containing the field names and values to be set.\n\nIf a field is not present in the request, no change is made to that setting. For example, if **`callback_persist`** is not sent with the request, the existing configuration for **`callback_persist`** is unchanged.\n\n## Request Parameters\n\n| Name                     | Description                      |\n|--------------------------|----------------------------------|\n| **`callback_persist`**<br/>type: Boolean   | Stores callbacks on disk until they are successfully acknowledged by the Webhook or not. Messages and callbacks are both stored in a local database to ensure that they are delivered successfully before being removed from the local database. This protects the callbacks in the event the WhatsApp Business API client or server goes down. <br/><br/>**Values:**  **`true`**(default), **`false`**<br/>**Coreapp restart required.** |\n| **`max_callback_backoff_delay_ms`**<br/>type: String | Maximum delay for a failed callback in milliseconds. For more information, read the description for **`callback_backoff_delay_ms`** below. <br/><br/>**Default:** 900000 |\n| **`media`** <br/>type: Array | List of media to auto-download. For more information, see [Auto-download Media Settings](https://developers.facebook.com/docs/whatsapp/api/settings/app#auto).|\n| **`callback_backoff_delay_ms`**<br/>type: String | Backoff delay for a failed callback in milliseconds.<br/><br/>This setting is used to configure the amount of time the backoff delays before retrying a failed callback. The backoff delay increases linearly by this value each time a callback fails to get a `HTTPS 200 OK` response. The backoff delay is capped by the **`max_callback_backoff_delay_ms`** setting. For example, if a callback fails the first time, it will try again in 3000ms (3 sec). A second failure will result in a 6000ms (6 sec) delay before retry. This continues until the callback is successful or the delay reaches 900000ms (15 min) after which the callback will continue to be retried but the delay will not increase.<br/><br/>**Default**: 3000 |\n| **`pass_through`**<br/>type: Boolean | Starting with `v2.35`, you can no longer re-enable the pass_through setting for WhatsApp Business API Clients.<br/><br/>Allows for individual messages to be deleted or stored to a local database after they've been delivered or read.<br/><br/>When messages are sent, they are stored in a local database. This database is used as the application's history. Since the business keeps its own history, you can specify whether you want message **`pass_through`** or not.<ul><li>When **`true`**, it removes messages from the local database after they are delivered to or read by the recipient.</li><li>When **`false`**, it saves all messages on local storage until they are automatically deleted (i.e., **`db_garbagecollector_enable`** is **`true`**) or explicitly deleted (i.e., **`db_garbagecollector_enable`** is **`false`**). For more information, see the [Services documentation](https://developers.facebook.com/docs/whatsapp/api/services).</li></ul><br/><br/>We recommend you disable **`pass_through`** so the status callback can function as expected.<br/><br/>**Values**: **`true`**, **`false`**(default)<br/>**Coreapp restart required.** |\n| **`sent_status`**<br/>type: Boolean | Receive a notification that a message was sent to the server.<br/><br/>**Values**: **`true`** (default), **`false`**<br/><ul><li>When set to true, you will receive a message indicating that a message has been sent.</li><li>When set to false, you will not receive a notification.</li></ul> |\n| **`webhooks`**<br/>type: Webhooks Object | The Webhook URL. For example: `https://spotless-process.glitch.me/webhook`.<br/><br/>If the Webhook URL is not set, callbacks are dropped. Callbacks are an important channel to deliver both timely notifications as well as out-of-band errors, and it is thus highly recommended you configure the Webhook URL endpoint. For details on the Webhook fields, see the [Webhooks Field table]() below. |\n| **`unhealthy_interval`**<br/>type: Integer | Maximum amount of seconds a Master node waits for a Coreapp node to respond to a heartbeat before considering it unhealthy and starting the failover process.<br/><br/> **Default**: 30<br/>**Applies to Multiconnect setups**. |\n| **`heartbeat_interval`**<br/>type: Integer | Interval of the Master node monitoring of Coreapp nodes in seconds.<br/><br/> **Default**: 5<br/>**Applies to Multiconnect setups**. |\n| **`axolotl_context_striping_disabled`**<br/>type: Boolean | Affects database connection limits.<br/><br/>Outbound and inbound performance improved with `v2.25`. This optimization relies on creating additional database connections. For some deployments, this can cause database connection limits to be reached. In that case, set the **`axolotl_context_striping_disabled`** configuration to **`true`** to disable this performance improvement feature. There is no other effect on any functionalities of the Coreapp.<br/><br/> **Values**: **`true`**, **`false`** (default)<br/>**Coreapp restart required**. |\n| **`notify_user_change_number`**<br/>type: Boolean | Affects the user_changed_number system notification.<br/><br/>**Values**: **`true`**, **`false`** (default) |\n| **`show_security_notifications`**<br/>type: Boolean | If enabled, you will receive a **`user_identity_changed`** Webhook notification when the WhatsApp Business API client detects a user you are in a conversation with has potentially changed. When this happens, all outgoing messages to this user are blocked until you have acknowledged the identity change for this user using the **`identity`** endpoint.<br/><br/>**Values**: **`true`**, **`false`** (default) |\n| **`db_garbagecollector_enable`**<br/>type: Boolean | Enables automatic garbage collection of the messages database to assist in database management.<br/><br/>This parameter is **`false`** for users who had **`pass_through`** set to **`false`** before `v2.29`. We recommend you enable this setting to ensure your database operates with stability. If you would like to disable this setting, we recommend you consider using the `/services/message/gc` endpoint to manage the database.<br/><br/>**Values**: **`true`** (default), **`false`**<br/>**Coreapp restart required**.  |\n| **`skip_referral_media_download`**<br/>type: Boolean | If set to **`true`**, the image or video that the user clicked on an ad that Clicks to WhatsApp is not downloaded.<br/><br/>**Values**: **`true`**, **`false`** (default) |\n| **`webhook_payload_conversation_pricingmodel_disabled`**<br/>type: Boolean | Controls inclusion of conversation and pricing information payloads in message status notifications. This field was introduced with the WhatsApp API `v2.33`.<br/><br/>**Values**: **`true`**, **`false`** (default)<br/>**Coreapp restart is not required**. |\n\n## Webhooks Fields\n\nThe following table describes fields in the `webhooks` object in more detail:\n\n| Name                     | Description                      |\n|--------------------------|----------------------------------|\n| **`url`**<br/>Type: String | Inbound and outbound notifications are routed to this URL. For more information, see the Webhooks documentation.<br/><br/>**An HTTPS-based endpoint is required; HTTP will not work.**<br/>**Example:** `https://spotless-process.glitch.me/webhook` |\n| **`max_concurrent_requests`**<br/>Type: Integer | Configures the maximum number of inflight callback requests that are sent out.<br/><br/>**Values:** `6` (Default), `12`, `18`, or `24`<br/>**Coreapp restart required**.  |\n\n## Auto-download Media Parameters\n\nThe following table describes the `media` object in more detail:\n\n| Name                     | Description                      |\n|--------------------------|----------------------------------|\n| **`auto_download`**<br/>Type: Array | Specifies which types of media to automatically download.<br/><br/>**Values:** `audio`, `document`, `voice`, `video`. `image`, `sticker` |"
									},
									"response": [
										{
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"callback_backoff_delay_ms\": 3000,\n    \"max_callback_backoff_delay_ms\": 900000,\n    \"callback_persist\": true,\n    \"media\": {\n        \"auto_download\": [\n            \"image\",\n            \"document\",\n            \"audio\"\n        ]\n    },\n    \"webhooks\": {\n        \"url\": \"<Webhook URL, https>\",\n        \"max_concurrent_requests\": 12,\n        \"message\": {\n            \"delivered\": true,\n            \"read\": true,\n            \"sent\": true\n        }\n    },\n    \"sent_status\": false,\n    \"db_garbagecollector_enable\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/application",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"application"
													]
												}
											},
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.51.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Reset App Settings",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/settings/application",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application"
											]
										},
										"description": "Use the `/v1/settings/application` endpoint to reset the application settings to their default values.\n\nA successful response is `200 OK` with `null` or `{}`.\n\nIf you encounter any errors, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Reset App Settings",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{URL}}/v1/settings/application",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"application"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Get Media Providers",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/settings/application/media/providers",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application",
												"media",
												"providers"
											]
										},
										"description": "Use the `/v1/settings/application/media/providers` endpoint to compile a list of media providers for sending media links. A providers list allows you to have different media providers for the same provider type while being able to pick a provider to use on a per request basis.\n\n## Response Parameters\n\n| Name                 | Description                      |\n|----------------------|----------------------------------|\n| **`name`**<br/>type: String| **Required.**<br/>The name for the provider. |\n| **`type`**<br/>type: String| **Required.**<br/>The name for the provider. |\n| **`config`**<br/>type: `config` object| **Required.**<br/>The `config` object. |"
									},
									"response": [
										{
											"name": "Get Media Providers",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/settings/application/media/providers",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"application",
														"media",
														"providers"
													]
												}
											},
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"settings\": {\n        \"application\": {\n            \"media\": {\n                \"providers\": [\n                    {\n                        \"name\": \"<First Provider>\",\n                        \"type\": \"www\",\n                        \"config\": {\n                            \"basic\": {\n                                \"username\": \"<Username>\",\n                                \"password\": \"<Password>\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"<Second Provider>\",\n                        \"type\": \"www\",\n                        \"config\": {\n                            \"bearer\": \"<Bearer Token>\"\n                        }\n                    }\n                ]\n            }\n        }\n    },    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }    \n}\n"
										}
									]
								},
								{
									"name": "Delete Media Providers",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/settings/application/media/providers/<Provider Name>",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application",
												"media",
												"providers",
												"<Provider Name>"
											]
										},
										"description": "Send a `DELETE` API call with the **`name`** of a provider to the `/v1/settings/application/media/providers` endpoint to delete that provider from your list.\n\n## Response\n\nA successful request returns the HTTP Status Code `200 OK` and either `null` or `{}`.\n\nAn unsuccessful response contains an error message. For more information regarding errors, see [Error and Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Delete Media Providers",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/settings/application/media/providers/<Provider Name>",
													"host": [
														"{{WebApp URL, i.e 'https://localhost:9090'}}"
													],
													"path": [
														"v1",
														"settings",
														"application",
														"media",
														"providers",
														"<Provider Name>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n} "
										}
									]
								},
								{
									"name": "Update Media Providers",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{\n\t\t\"name\": \"<Provider Name>\",\n\t\t\"type\": \"www\",\n\t\t\"config\": {\n\t\t\t\"bearer\": \"<Bearer Auth Token>\"\n\t\t}\n\t}\n]"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/application/media/providers",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"application",
												"media",
												"providers"
											]
										},
										"description": "To configure providers for the WhatsApp Business API Client, use the `/v1/settings/application/media/providers` endpoint with the provider's information. Currently, you can only set up one provider at a time. Also, you can only use these provider objects for sending media messages using `HTTP/HTTPS` links that rely on either basic authentication or bearer token authentication.\n\n## Request Parameters\n\n| Name                 | Description                      |\n|----------------------|----------------------------------|\n| **`name`**<br/>type: String| **Required.**<br/>The name for the provider. |\n| **`type`**<br/>type: String| **Required.**<br/>The name for the provider. |\n| **`config`**<br/>type: `config` object| **Required.**<br/>The `config` object. |\n\n## Response\n\nA successful request returns the HTTP Status Code `200 OK` and either `null` or `{}`.\n\nAn unsuccessful response contains an error message. For more information on errors, see [Error and Status Codes](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Update Media Providers using Bearer Token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n\t{\n\t\t\"name\": \"<Provider Name>\",\n\t\t\"type\": \"www\",\n\t\t\"config\": {\n\t\t\t\"bearer\": \"<Bearer Auth Token>\"\n\t\t}\n\t}\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/settings/application/media/providers",
													"host": [
														"{{WebApp URL, i.e 'https://localhost:9090'}}"
													],
													"path": [
														"v1",
														"settings",
														"application",
														"media",
														"providers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										},
										{
											"name": "Update Media Providers using Basic Authorization",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"<Provider Name>\",\n        \"type\": \"www\",\n        \"config\": {\n            \"basic\": {\n                \"username\": \"<Your Username>\",\n                \"password\": \"<Your Password>\"\n            }\n        }\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/application/media/providers",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"application",
														"media",
														"providers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								}
							],
							"description": "Update, retrieve, or reset the application settings of the WhatsApp Business API client. All valid application settings requests are listed below."
						},
						{
							"name": "Backup and Restore",
							"item": [
								{
									"name": "Backup Settings",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"password\": \"<Password for Backup>\"\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/backup",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"backup"
											]
										},
										"description": "The ability to back up/export only runs after the WhatsApp Business API Client has been registered and is running. The backup does not back up messages or callbacks, and taking virtual machine snapshots and restoring them does not work.\n\nTo back up, use the `/v1/settings/backup` endpoint with the `password` parameter.\n\n## Request Parameters\n\n| Name                            | Description                          |\n|---------------------------------|--------------------------------------|\n| **`password`**<br/>Type: String | The password used to encrypt backup data for security. |\n\n## Response Parameters\n\n| Name                            | Description                          |\n|---------------------------------|--------------------------------------|\n| **`settings`**<br/>Type: String | The **`settings`** object containing the **`data`** parameter. |\n| **`data`**<br/>Type: String | The data that has been backed up and encrypted for security. **Save the `data` value as that will be used along with your password to restore the information**. |"
									},
									"response": [
										{
											"name": "Backup Settings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"<Password for Backup>\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/backup",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"backup"
													]
												}
											},
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"settings\": \n    {\n        \"data\": \"<encrypted-backup-data>\"\n    },  \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Restore Settings",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"password\": \"<Password for Backup>\",\n\t\"data\": \"<Data to Restore, from Backup API>\"\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/restore",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"restore"
											]
										},
										"description": "Restore can be used to set up a new version of the WhatsApp Business API Client on a new machine or restore the application to a known working state on the same machine with the same encryption information and settings of a previous setup.\n\nFor setting up the application on a new machine, the Coreapp must be running, but not registered. Upon successful import, the Coreapp automatically initializes itself and starts serving requests. If the machine has an existing application and you do a restore, the application stops and you have to start it again with the `docker restart` command.\n\nWhen restoring a [multiconnect setup](https://developers.facebook.com/docs/whatsapp/multiconnect_mc), you need to perform the restore on top of the same type of setup you are restoring from. For example, if you backed up a setup with two shards running, you must have two shards running for the restore.\n\nTo restore settings, use the `/v1/settings/restore` endpoint with the password and data fields.\n\n## Request Parameters\n\n| Name                            | Description                          |\n|---------------------------------|--------------------------------------|\n| **`password`**<br/>Type: String | The password you used in the `/v1/settings/backup` ([Backup Settings]()) API call to encrypt the backup data. |\n| **`data`**<br/>Type: String | The data that was returned by the `/v1/settings/backup` ([Backup Settings]()) API call. |\n\nA successful request returns the HTTP Status `Code 200 OK` and either `null` or `{}`. If you encounter any errors, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Restore Settings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"<Password for Backup>\",\n    \"data\": \"<Data to Restore, from Backup API>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/restore",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"restore"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								}
							],
							"description": "Use the `/v1/settings/backup` and `/v1/settings/restore` endpoints to make it easier to move to different environments or servers and restore to a known working state. We recommend that you back up occasionally so that if your WhatsApp Business API client or server goes down, you can easily bring it back up.\n\nThe WhatsApp Business API client supports backing up and restoring all necessary information including app settings and registration.\n\n### Security Update\nIn `v2.31.4` WhatsApp fixed the backup and restore endpoints to make them consistent with the security model of the backup and restore functionality of other WhatsApp clients (i.e., phone apps). With this change a new security code is generated between your WhatsApp business account and its contacts after a successful restore operation.\n\nAfter a WhatsApp business account restores from backup, the consumer client will receive a notice “Your security code with {Business Account} changed. Tap to learn more.” if they have the “security notification” setting enabled. All other backup/restore behaviors remain the same as before."
						},
						{
							"name": "Business Profile",
							"item": [
								{
									"name": "Get Business Profile",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/settings/business/profile",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"business",
												"profile"
											]
										},
										"description": "Make a **GET** API call to the `/v1/settings/business/profile` endpoint to retrieve your business profile settings.\n\n## Response Fields\nA successful response includes the profile object containing the following business profile data: \n\n| Name                           | Description                               |\n|--------------------------------|-------------------------------------------|\n| **`address`**<br/>Type: String | The address of the business. **Maximum of 256 characters**. |\n| **`description`**<br/>Type: String | The description of the business. **Maximum of 256 characters**. |\n| **`email`**<br/>Type: String | The email address  (in valid email format) to contact the business. **Maximum of 128 characters**. |\n| **`vertical`**<br/>Type: String | The industry of the business. The value must be one of the following:<br/><ul><li>`Automotive`</li><li>`Beauty, Spa, and Salon`</li><li>`Clothing and Apparel`</li><li>`Education`</li><li>`Entertainment`</li><li>`Event Planning and Service`</li><li>`Finance and Banking`</li><li>`Food and Grocery`</li><li>`Public Service`</li><li>`Hotel and Lodging`</li><li>`Medical and Health`</li><li>`Non-profit`</li><li>`Professional Services`</li><li>`Shopping and Retail`</li><li>`Travel and Transportation`</li><li>`Restaurant`</li><li>`Other`</li></ul><br/><br/>The business vertical cannot be set back to an empty value after it is created. |\n| **`websites`**<br/>Type: Array of Strings | The URLs (including `http://` or `https://`) associated with the business (e.g., website, Facebook Page, Instagram). Maximum of **2** websites with a **maximum of 256 characters**. |"
									},
									"response": [
										{
											"name": "Get Business Profile",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/settings/business/profile",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"business",
														"profile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n   \"settings\": {\n     \"business\": {\n        \"profile\": {\n          \"address\": \"<BUSINESS-ADDRESS>\",\n          \"description\": \"<BUSINESS-DESC>\",\n          \"email\": \"<BUSINESS-EMAIL>\",\n          \"vertical\": \"<BUSINESS-INDUSTRY>\",\n          \"websites\": [ \"website-1\", \"website-2\" ]\n        }\n      }\n    },  \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Set Business Profile",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"address\": \"{{Business Profile Address}}\",\n    \"description\": \"{{Business Profile Description}}\",\n    \"email\": \"{{Business Profile Email}}\",\n    \"vertical\": \"{{Business Profile Vertical}}\",\n    \"websites\": [\n        \"https://www.whatsapp.com\",\n        \"https://www.facebook.com\"\n    ]\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/business/profile",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"business",
												"profile"
											]
										},
										"description": "Make a **POST** API call to the `/v1/settings/business/profile` endpoint to update your business profile settings.\n\n## Request Parameters\n\n| Name                           | Description                               |\n|--------------------------------|-------------------------------------------|\n| **`address`**<br/>Type: String | The address of the business. **Maximum of 256 characters**. |\n| **`description`**<br/>Type: String | The description of the business. **Maximum of 256 characters**. |\n| **`email`**<br/>Type: String | The email address  (in valid email format) to contact the business. **Maximum of 128 characters**. |\n| **`vertical`**<br/>Type: String | The industry of the business. The value must be one of the following:<br/><ul><li>`Automotive`</li><li>`Beauty, Spa, and Salon`</li><li>`Clothing and Apparel`</li><li>`Education`</li><li>`Entertainment`</li><li>`Event Planning and Service`</li><li>`Finance and Banking`</li><li>`Food and Grocery`</li><li>`Public Service`</li><li>`Hotel and Lodging`</li><li>`Medical and Health`</li><li>`Non-profit`</li><li>`Professional Services`</li><li>`Shopping and Retail`</li><li>`Travel and Transportation`</li><li>`Restaurant`</li><li>`Other`</li></ul><br/><br/>The business vertical cannot be set back to an empty value after it is created. |\n| **`websites`**<br/>Type: Array of Strings | The URLs (including `http://` or `https://`) associated with the business (e.g., website, Facebook Page, Instagram). Maximum of **2** websites with a **maximum of 256 characters**. |\n\nA successful request returns the HTTP Status Code `200 OK` and either `null` or `{}`. If you encounter any errors, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Set Business Profile",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"address\": \"<Business Profile Address>\",\n    \"description\": \"<Business Profile Description>\",\n    \"email\": \"<Business Profile Email>\",\n    \"vertical\": \"<Business Profile Vertical>\",\n    \"websites\": [\n        \"https://www.whatsapp.com\",\n        \"https://www.facebook.com\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/business/profile",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"business",
														"profile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										},
										{
											"name": "Partial Update Business Profile",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"address\": \"<New Business Address>\",\n    \"email\": \"<New Business Email>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/business/profile",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"business",
														"profile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								}
							],
							"description": "Use the `/v1/settings/business/profile` endpoint to configure the following business profile settings: business address, business description, email for business contact, business industry, and business website.\n\n> **You must use the `admin` account to access the business profile settings.**"
						},
						{
							"name": "Profile",
							"item": [
								{
									"name": "Get Profile About",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/settings/profile/about",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"profile",
												"about"
											]
										},
										"description": "> **You must use the `admin` account to access the profile settings**.\n\nYou can view your profile's About section in the following ways:\n\n* In the WhatsApp app, click on **Chat with business account**, then click on the name at the top to see the complete contact information, including **About**.\n\n* Use a **Get** call to the `/v1/settings/profile/about` endpoint to retrieve your profile's **About** section.\n\n## Request Parameter\n\n| Name                        | Description                  |\n|-----------------------------|------------------------------|\n| **`text`**<br/>Type: String | Text that is displayed in your profile's **About** section\nThe max length for the string is **139 characters**. | \n\n## Response\n\nA successful response contains the **`profile`** object with the **`text`** parameter containing your profile's **About** content."
									},
									"response": [
										{
											"name": "Get Profile About",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/settings/profile/about",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"profile",
														"about"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"settings\": \n    {\n        \"profile\": {\n            \"about\": {\n                \"text\": \"<YOUR-PROFILE-ABOUT-TEXT>\"\n            }\n        }\n    },    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Get Profile Photo Binary",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/settings/profile/photo",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"profile",
												"photo"
											]
										},
										"description": "> **You must use the admin account to access the profile settings.**\n\nYou can get your profile's photo image by the following methods:\n\n* In the WhatsApp app, click on Chat with business account, then click on the name at the top to see the complete contact information, including the profile photo.\n\n* Use the WhatsApp Business API's `/v1/settings/profile/photo` endpoint to retrieve the image that you are using as your profile photo as a base64-encoded binary content.\n\n## Response\nA successful response contains the base64-encoded binary of the profile photo."
									},
									"response": [
										{
											"name": "Get Profile Photo Binary",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/settings/profile/photo",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"profile",
														"photo"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "Content-Type: mage/jpeg, or other appropriate type\nContent-Length: content-size\n\nbinary-image-content"
										}
									]
								},
								{
									"name": "Get Profile Photo URL",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/settings/profile/photo?format=link",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"profile",
												"photo"
											],
											"query": [
												{
													"key": "format",
													"value": "link"
												}
											]
										},
										"description": "> **You must use the admin account to access the profile settings.**\n\nYou can get your profile's photo image by URL the following methods:\n\n* In the WhatsApp app, click on Chat with business account, then click on the name at the top to see the complete contact information, including the profile photo.\n\n* Use the WhatsApp Business API's `/v1/settings/profile/photo` endpoint to retrieve the image that you are using as your profile photo as a public URL of the image.\n\n## Response\nA successful response contains the public URL of the profile photo."
									},
									"response": [
										{
											"name": "Get Profile Photo URL",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/settings/profile/photo?format=link",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"profile",
														"photo"
													],
													"query": [
														{
															"key": "format",
															"value": "link"
														}
													]
												}
											},
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"settings\": \n    {\n        \"profile\": {\n            \"photo\": {\n                \"link\": \"<YOUR-PROFILE-PHOTO-URL>\"\n            }\n        }\n    },\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Set Profile About",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"text\": \"{{About Profile}}\"\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/profile/about",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"profile",
												"about"
											]
										},
										"description": "> **You must use the `admin` account to access the profile settings**.\n\nTo update your profile's **About** section, update the text field of the API call to the `/v1/settings/profile/about` endpoint.\n\n## Request Parameter\n\n| Name                        | Description                  |\n|-----------------------------|------------------------------|\n| **`text`**<br/>Type: String | Text to display in your profile's **About** section\nThe max length for the string is **139 characters**. | \n\n## Response \n\nA successful request returns the HTTP Status Code `200 OK` and either `null` or `{}`.\n\nIf you encounter any errors, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Set Profile About",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"text\": \"<About Profile>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/profile/about",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"profile",
														"about"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Set Profile Photo",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "image/jpeg"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{URL}}/v1/settings/profile/photo",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"profile",
												"photo"
											]
										},
										"description": "> **You must use the admin account to access the profile settings.**\n\nTo change your profile photo using the API, send the raw image to the `/v1/settings/profile/photo endpoint`.\n\nThe cURL will look similar to the following:\n```\ncurl -X POST \\\n  https://your-webapp-hostname:your-webapp-port/v1/settings/profile/photo \\\n  -H 'Authorization: Bearer {{AdminAuthToken}} \\\n  'Content-Type: image/png' \n  --data-binary @your-path-to-image\n```\n\n## Response\n\nA successful request returns the HTTP Status Code `200 OK` and either `null` or `{}`.\n\nIf you encounter any errors, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Set Profile Photo",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "image/jpeg"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "file",
													"file": {}
												},
												"url": {
													"raw": "{{URL}}/v1/settings/profile/photo",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"settings",
														"profile",
														"photo"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Two-Step Verification",
							"item": [
								{
									"name": "Enable Two Step",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"pin\": \"<Two-Step Verification PIN>\"\n}"
										},
										"url": {
											"raw": "{{URL}}/v1/settings/account/two-step",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"account",
												"two-step"
											]
										},
										"description": "To enable two-factor verification, use the `/v1/settings/account/two-step` endpoint with the **`pin`** parameter.\n\nIf you forget or misplace your PIN, you can disable two-factor verification, and then enable it again with a new PIN.\n\n## Using the Two-Factor Verification PIN in Registration\nIf you are trying to re-register while the account has two-factor verification enabled, include the **`pin`** parameter in the registration request. For more details on registration with two-factor verification enabled, see the [Registration documentation](https://developers.facebook.com/docs/whatsapp/api/account).\n\n\n## Request Parameter\n\n| Name                       | Description                          |\n|----------------------------|--------------------------------------|\n| **`pin`**                  | **Required**.<br/> A 6-digit PIN you want to use for two-step verification. |\n\n## Response\nA successful request returns the HTTP Status Code `200 OK` and either `null` or `{}`. If you encounter any errors, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Enable Two Step",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"pin\": \"<Two-Step Verification PIN>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/settings/account/two-step",
													"host": [
														"{{WebApp URL, i.e 'https://localhost:9090'}}"
													],
													"path": [
														"v1",
														"settings",
														"account",
														"two-step"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								},
								{
									"name": "Disable Two Step",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/settings/account/two-step",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"settings",
												"account",
												"two-step"
											]
										},
										"description": "To disable two-factor verification, make a **DELETE** call to the `/v1/settings/account/two-step` endpoint. If you forget or misplace your PIN, you can disable two-factor verification, and then enable it again with a new PIN.\n\nA successful request returns the HTTP Status Code `200 OK` and either `null` or `{}`. If you encounter any errors, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors)."
									},
									"response": [
										{
											"name": "Disable Two Step",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{AdminAuthToken}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/settings/account/two-step",
													"host": [
														"{{WebApp URL, i.e 'https://localhost:9090'}}"
													],
													"path": [
														"v1",
														"settings",
														"account",
														"two-step"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
										}
									]
								}
							],
							"description": "Use two-factor verification to add an extra layer of security to the WhatsApp Business API Client. When you have two-factor verification enabled, any attempt to register your phone number on WhatsApp must be accompanied by the six-digit PIN that you create using this feature. Two-Factor verification can be enabled and disabled using the `/v1/settings/account/two-step` endpoint.\n\n> **You must use the `admin` account to access the two-factor verification settings**."
						}
					],
					"description": "Use the settings node to configure the WhatsApp Business API Client, your business profile, your profile, groups, your account, and to backup and restore data. Configurable settings include: [application settings](#36152591-dcb0-4af6-8255-ab798ca677d5), [backup and restore](#0dfab9eb-2023-4439-b65a-3cb5738f0313), [business profile settings](#c11c20f4-6051-42bf-beb8-0b2f8dd9cff8), [profile settings](#18e009b2-edc4-4030-9e34-fd3a2e54aead), and [two-step verification](#50fea9de-c04f-4401-bb30-9f54b4095dec)."
				},
				{
					"name": "Registration",
					"item": [
						{
							"name": "Request Code",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"cc\": \"<Country Code>\",\n\t\"phone_number\": \"<Phone Number>\",\n\t\"method\": \"< sms | voice >\",\n\t\"cert\": \"<Valid Cert from Business Manager>\",\n\t\"pin\": \"<Two-Step Verification PIN\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/account",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"account"
									]
								},
								"description": "Make a **POST** call to this endpoint to request a registration code. In your call, add your phone number and base64-encoded certificate string. You can receive your code via either SMS or voice call.\n\n## Request Parameters\n\n| Name                                 | Description                          |\n|--------------------------------------|--------------------------------------|\n| **`cc`**                             | **Required**.<br/>The numerical country code for the phone number you are registering. |\n| **`phone_number`**                             | **Required**.<br/>The phone number you are registering, without the country code or plus symbol (`+`). |\n| **`method`**                             | **Required**.<br/>The method of receiving your registration code.<br/>**Options:** `VOICE`, `SMS` |\n| **`cert`**                             | **Required**.<br/>The Base64-encoded certificate. |\n| **`pin`**                             | **Optional**.<br/>Existing 6-digit PIN — This is only required when two-factor verification is enabled on this account. |\n\n## Response\nDepending on the response received, the registration procedure can be considered complete or require another step to complete. If successful, you receive one of the following HTTP status codes. Follow the instructions that match the response you received:\n\n* `201 Created` — The account already exists. You are already registered, so you do not need to do anything else.\n* `202 Accepted` — The account does not exist. Depending on the method selected in the request, check your SMS or voice number for the registration code. This response will include a returned payload that contains the **`vname`** decoded from the **`cert`** parameter for you to confirm the right display name is being set. If correct, proceed to Completing Your Account Registration to complete registration.\n\nIf any errors are returned, refer to [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/Errors/Errors) for more information."
							},
							"response": [
								{
									"name": "Request Code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cc\": \"{{Country Code}}\",\n    \"phone_number\": \"{{Phone Number}}\",\n    \"method\": \"{{ sms | voice }}\",\n    \"cert\": \"{{Valid Cert from Business Manager}}\",\n    \"pin\": \"{{Two-Step Verification PIN}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/account",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"account"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Register Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"<Registration Code Received via SMS/Voice>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/account/verify",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"account",
										"verify"
									]
								},
								"description": "> **You must use the `admin` account to register the application.**\n\nThe **`account`** node is for registering your WhatsApp Business API client.\n\nOnce you have received the registration code via your specified method, you can complete your account registration by sending an API call to `/v1/account/verify`.\n\n## Response\nIf successful, the response will return the HTTP status `201 Created` with no payload object in response body.\n\nIf any errors are returned, refer to [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/Errors/Errors) for more information."
							},
							"response": [
								{
									"name": "Register Account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"code\": \"<Registration Code Received via SMS/Voice>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/account/verify",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"account",
												"verify"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Contacts",
					"item": [
						{
							"name": "Create Contact",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"blocking\": \"wait\",\n    \"contacts\": [\n        \"{{Recipient-WA-ID}}\"\n    ],\n    \"force_check\": \"<false (default) | true>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts"
									]
								},
								"description": "Send an API call to `/v1/contacts` that contains an array of registered phone numbers. The phone numbers can be in any standard telephone number format.\n\n## Request Parameters\n\n| Name | Description |\n| --- | --- |\n| **`blocking`**  <br>Type: String | **Optional**.  <br>Specifies whether the API request should wait for processing to complete or not before returning a response. For more information, read the Blocking section below.  <br>**Possible Values:** `no_wait` (default), `wait` |\n| **`contacts`**  <br>Type: Integer | **Required**.  <br>An array of phone numbers to be validated.  <br>  <br>The numbers can be in any standard telephone number format. The recommended format for contact phone numbers is with a plus sign (+) and the country code. For more information, see the [Phone Number Formats](https://developers.facebook.com/docs/whatsapp/on-premises/reference/contacts#phone). |\n| **`force_check`**  <br>Type: String | **Optional**.  <br>Specifies whether to check the contacts cache or not. Contact information is normally cached for 7 days. By setting the **`force_check`** parameter to `true`, the cache will be bypassed ensuring a check is performed.  <br>**Possible values:** `false`(default), `true` |\n\n## Edges\n\nThe following edges are connected to this node:\n\n| Edge | Description |\n| --- | --- |\n| **`/{user-whatsapp-id}/identity`** | Use this edge to manage users' identities. For more information, see [Understanding Identity Change](https://developers.facebook.com/docs/whatsapp/overview/identity-change). |\n\n## Response\n\nThe **`contacts`** response payload contains the same array of phone numbers sent in the request with the **`input`**, **`status`**, and **`wa_id`** properties:\n\n| Name | Description |\n| --- | --- |\n| **`input`** | The value you sent in the `contacts` field of the request. |\n| **`status`**<br><br>**v2.41 and below** | Specifies the status of the user.<br><br>**Possible values:**<br><br>*   `processing` — Input is still being processed<br>*   `valid` — A valid WhatsApp user<br>*   `invalid` — Not a valid WhatsApp user<br>*   `failed` — There was an error processing this check |\n| **`status`**<br><br>**v2.43 and above** | Specifies the status of the user.  <br><br>**Possible values:**<br><br>*   `processing` — Input is still being processed<br>*   `valid` — Contact check complete and message send can proceed<br>*   `failed` — There was an error processing this check<br><br> |\n| **`wa_id`**<br><br>**v2.41 and below** | <br><br>WhatsApp user ID that can be used in other calls. Only returned if `status` is `valid`<br><br> |\n| **`wa_id`**<br><br>**v2.43 and above** | <br><br>WhatsApp user ID returned which may or may not be valid<br><br>**As there is no guarantee the value will be valid, please refrain from using this value in subsequent calls.**<br><br> |\n\nAlong with the **`processing`** status, you should see an HTTP status of `200 OK`.\n\nIf a template message is sent to a phone number without a WhatsApp account, you will receive an error message denoting **\"User is not valid\"** with error code `1013`.\n\nFor any other errors in the response, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/on-premises/errors)."
							},
							"response": [
								{
									"name": "Create Contact",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"blocking\": \"wait\",\n    \"contacts\": [\n        \"{{Recipient-WA-ID}}\"\n    ],\n    \"force_check\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/contacts",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"contacts\": [\n        {\n            \"wa_id\": \"16315551000\",\n            \"input\": \"16315551000\",\n            \"status\": \"valid\"\n        },\n        {\n            \"wa_id\": \"16315551001\",\n            \"input\": \"+1 631 555 1001\",\n            \"status\": \"processing\"\n        },\n        {\n            \"input\": \"6315551002\",\n            \"status\": \"invalid\"\n        },\n        {\n            \"input\": \"+163155588\",\n            \"status\": \"failed\"\n        }\n    ],\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Block Contact",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Optional string(0;60). Freeform block reason. Will be used when another business account is being blocked\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/block",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts",
										"{{Recipient-WA-ID}}",
										"block"
									]
								},
								"description": "To block a contact, send a **POST** call to **`/v1/contacts//block`** and include a reason (string) why you are blocking them.\n\n> The contact must have sent you a message in the last 24 hours in order to block them.\n\n| Setting | Description |\n| --- | --- |\n| **`reason`**<br>Type: **String** | **Optional.**<br><br>Freeform block reason. Will be used when another business account is being blocked. Must be less than 60 characters.<br><br> |\n| **`phone_number`** | **Required.**<br><br>The numbers can be in any standard telephone number format. The recommended format for contact phone numbers is with a plus sign (+) and the country code. For more information, see [Phone Number Formats](https://developers.facebook.com/docs/whatsapp/on-premises/reference/contacts#phone).<br><br> |"
							},
							"response": [
								{
									"name": "Block Contact",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reason\": \"Optional string(0;60). Freeform block reason. Will be used when another business account is being blocked\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/contacts/{{Recipient-WA-ID}}/block",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"contacts",
												"{{Recipient-WA-ID}}",
												"block"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n   \"meta\": {\n       \"api_status\": \"stable\",\n       \"version\": \"v2.45.1\"\n   }\n}"
								}
							]
						},
						{
							"name": "Unblock Contact",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/block",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts",
										"{{Recipient-WA-ID}}",
										"block"
									]
								},
								"description": "To unblock a contact, send a **POST** call to **`/v1/contacts/{phone_number}/unblock`**.\n\n## Response\n\n| Setting | Description |\n| --- | --- |\n| **`phone_number`** | **Required.**<br><br>The numbers can be in any standard telephone number format. The recommended format for contact phone numbers is with a plus sign (+) and the country code. For more information, see [Phone Number Formats](https://developers.facebook.com/docs/whatsapp/on-premises/reference/contacts#phone).<br><br> |"
							},
							"response": [
								{
									"name": "Unblock Contact",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/contacts/+16315551000/block",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"contacts",
												"+16315551000",
												"block"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n   \"meta\": {\n       \"api_status\": \"stable\",\n       \"version\": \"v2.45.1\"\n   }\n}"
								}
							]
						},
						{
							"name": "Report Contact",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/report",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts",
										"{{Recipient-WA-ID}}",
										"report"
									]
								},
								"description": "To report a contact, send a **POST** call to **`/v1/contacts/{phone_number}/report`** and include a **`reason`** if you are blocking another business account.\n\n> The contact must have sent you a message in the last 24 hours in order to report them.\n\n## Parameters\n\n| Parameter | Description |\n| --- | --- |\n| **`reason`** | **Optional.**<br><br>Freeform block reason. Will be used when another business account is being blocked. Must be less than 60 characters.<br><br> |\n| **`block`** | **Optional.**<br><br>Default is `False`.<br><br>Whether to also block the contact or only report them.<br><br> |\n| **`message_id`**| **Optional.**<br><br>Message ID to be reported. If not specified, the last 5 messages will be sent to WhatsApp.<br><br> |\n| **`phone_number`** | **Required.**<br><br>The numbers can be in any standard telephone number format. The recommended format for contact phone numbers is with a plus sign (+) and the country code. For more information, see [Phone Number Formats](https://www.internalfb.com/intern/support/cms/editor/146908689311895?cms_locale=en_US#phone).<br><br> |"
							},
							"response": [
								{
									"name": "Report Contact",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reason\": \"Optional string(0;60). Freeform block reason. Will be used when another business account is being blocked\",\n    \"block\": false,\n    \"message_id\": \"<MESSAGE_ID>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/contacts/+16315551000/report",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"contacts",
												"+16315551000",
												"report"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n   \"meta\": {\n       \"api_status\": \"stable\",\n       \"version\": \"v2.45.1\"\n   }\n}"
								}
							]
						},
						{
							"name": "Get Block List",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/contacts/blocklist?limit=10&offset=0",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts",
										"blocklist"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "**Optional.**<br/><br/>Accepted range is (0; 200]. Default: 100."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "**Optional.**<br/><br/> Default: 0."
										}
									]
								},
								"description": "To obtain a list of your blocked contacts, Send a **GET** call to **`/v1/contacts/blocklist`**."
							},
							"response": [
								{
									"name": "Get Block List",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/v1/contacts/blocklist?limit=10&offset=0",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"contacts",
												"blocklist"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "**Optional.**<br/><br/>Accepted range is (0; 200]. Default: 100."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "**Optional.**<br/><br/> Default: 0."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n   \"contacts\": [\n       {\n           \"wa_id\": \"16315551000@s.whatsapp.net\"\n       }\n   ],\n   \"pagination\": {\n       \"limit\": 10,\n       \"offset\": 0,\n       \"total\": 1\n   },\n   \"meta\": {\n       \"api_status\": \"stable\",\n       \"version\": \"v2.45.1\"\n   }\n}"
								}
							]
						},
						{
							"name": "Check Contact Async",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"contacts\": [\n      \"{{Recipient-WA-ID}}\"\n   ],\n   \"force_check\": \"<false (default) | true>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/contacts",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts"
									]
								}
							},
							"response": [
								{
									"name": "Check Contact Async",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \"contacts\": [\n      \"{{Recipient-WA-ID}}\"\n   ],\n   \"force_check\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/contacts",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{    \n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Contact Get Identity",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/identity",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts",
										"{{Recipient-WA-ID}}",
										"identity"
									]
								},
								"description": "It is possible to receive notifications from WhatsApp when a user you are communicating with has potentially changed. Use this /v1/contacts edge to manage users' identities. See [Understanding Identity Change for WhatsApp Business](https://developers.facebook.com/docs/whatsapp/best-practices/identity-change/) for more information.\n\nFor more information about the system notification sent from WhatsApp see [Inbound System Messages — Example: A User Potentially Changed](https://developers.facebook.com/docs/whatsapp/api/webhooks/inbound#receiving). The response to the system notification is managed by your business.\n\nA **GET** call to the `/v1/contacts/{{users-whatsapp-id}}/identity` endpoint retrieves the latest identity hash for a user.\n\n## Returned Fields\n\n| Name                                | Description                          |\n|-------------------------------------|--------------------------------------|\n| **`acknowledged`**<br/>Type: String | The state of acknowledgment for the latest **`user_identity_changed`** system notification. |\n| **`created_timestamp`**<br/>Type: Integer | The timestamp from when the WhatsApp Business API client detected the user potentially changed. |\n| **`hash`**<br/>Type: String | Identifier for the latest **`user_identity_changed system`** notification. |\n\n## Response\n\nIf successful, your request returns `200 OK` and a message body containing a contacts object."
							},
							"response": [
								{
									"name": "Contact Get Identity",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{WebApp URL, i.e 'https://localhost:9090'}}/v1/contacts/{{Recipient-WA-ID}}/identity",
											"host": [
												"{{WebApp URL, i.e 'https://localhost:9090'}}"
											],
											"path": [
												"v1",
												"contacts",
												"{{Recipient-WA-ID}}",
												"identity"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"contacts\": {\n        \"hash\": \"UKD6Y/5SqDU=\",\n        \"created_timestamp\": 1600132094000,\n        \"acknowledged\": true\n    },\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Contact Ack Identity",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hash\": \"<identity hash>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/contacts/{{Recipient-WA-ID}}/identity",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"contacts",
										"{{Recipient-WA-ID}}",
										"identity"
									]
								},
								"description": "A **PUT** call to the /v1/contacts/{{Recipient-WA-ID}}/identity endpoint sets the Ack Identity."
							},
							"response": []
						}
					],
					"description": "Use the **`contacts`** node to manage WhatsApp users in your database by validating them before sending messages and verify a user's identity with identity hashes.\n\nWith the **`contacts`** node you can:\n\n* Verify that a phone number in your database belongs to a valid WhatsApp account. You must ensure that the **`status`** is `valid` before you can message a user.\n* Get the WhatsApp ID for a phone number. WhatsApp IDs are needed to send messages and user notifications.\n\n> Starting with `v2.39.1` the **`messages`** node can be used directly with a phone number, without the need to first translate it to a WhatsApp ID using the **`contacts`** node.<br/><br/>We are repurposing the **`contacts`** node starting in `v2.43` to no longer provide status information about a phone number. Regardless of whether a user has WhatsApp, it will always return `valid` for **`status`** in the response and a **`wa_id`**."
				},
				{
					"name": "Messages",
					"item": [
						{
							"name": "Message Object",
							"item": [
								{
									"name": "Text Object",
									"item": [],
									"description": "A **`Text Object`** consists of the following fields and formatting options:\n\n#### Fields\n\n| Name           |  Description |\n|----------------|--------------|\n| **`body`**     | **Required**.<br/><br/>Contains the text of the message that may contain URLs that begin with http:// or https:// and supports formatting. To view available formatting options, see [Text Object Formatting Options](https://developers.facebook.com/docs/whatsapp/api/messages#formatting). <br/>Maximum length: 4096 characters. |"
								},
								{
									"name": "Media Object",
									"item": [],
									"description": "For the On-Premises API, the media object id is returned when the media is successfully uploaded to the WhatsApp Business API client via the [media endpoint](https://developers.facebook.com/docs/whatsapp/api/media).\n\nThe `Media Object` contains the following fields:\n\n#### Fields\n\n| Name            | Description         |\n|-----------------|---------------------|\n| **`id`**        | **Required when type is an image, audio, document, or video and you are not using a link**.<br/>The media object ID. For more information, see [Get Media ID](#3517b4c1-a8c6-420e-aab3-3176f8616fd8). |\n| **`link`**      | **Required when type is an image, audio, document, or video and you are not using a link.** <br/>The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. |\n| **`caption`** | **Optional**.<br/>Describes the specified image, video, or document media. Do not use it with audio media.|\n|**`filename`** | **Optional**. <br/> Describes the filename for the specific document. Use only with document media.|\n|**`provider`** | **Optional**. <br/>This path is optionally used with a **`link`** when the HTTP/HTTPS link is not directly accessible and requires additional configurations like a bearer token. For information on configuring providers, see [Media Providers](https://developers.facebook.com/docs/whatsapp/api/settings/media-providers).|"
								},
								{
									"name": "Contacts Object",
									"item": [],
									"description": "Inside **`contacts`**, you can nest the following objects: **`addresses`**, **`emails`**, **`name`**, **`org`**, **`phone`**, and **`urls`**.\n\nThe `Contacts Object` contains the following fields:\n\n#### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`addresses`** | **Optional**. <br/> Specifies an array of address objects. For more information, see [address object](https://developers.facebook.com/docs/whatsapp/api/messages#addresses-object).|\n| **`birthday`** | **Optional**. <br/> A **YYYY-MM-DD** formatted string.|\n| **`emails`** | **Optional**. <br/> Specifies an array of email objects. For more information, see [emails object](https://developers.facebook.com/docs/whatsapp/api/messages#emails-object).|\n| **`name`** | **Required**. <br/> Specifies the name object. For more information, see [name object](https://developers.facebook.com/docs/whatsapp/api/messages#name-object).|\n| **`org`** | **Optional**. <br/> Specifies the org object. For more information, see [org object](https://developers.facebook.com/docs/whatsapp/api/messages#org-object).|\n| **`phones`** | **Optional**. <br/> Specifies an array of phone objects. For more information, see [phone object](https://developers.facebook.com/docs/whatsapp/api/messages#phone-object).|\n| **`urls`** | **Optional**. <br/> Specifies an array of url objects. For more information, see [url object](https://developers.facebook.com/docs/whatsapp/api/messages#urls-object).|"
								},
								{
									"name": "Location Object",
									"item": [],
									"description": "The `Location Object` contains the following fields:\n\n<h5>Fields</h5>\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`longitude`** | **Required**. <br/> The longitude of the location.|\n| **`latitude`** | **Required**. <br/> The latitude of the location.|\n| **`name`** | **Optional**. <br/> The name of the location.|\n| **`address`** | **Optional**. <br/> The address of the location. This field is only displayed if **`name`** is present.|"
								},
								{
									"name": "Template Object",
									"item": [],
									"description": "Inside **`template`**, you can nest the **`components`** and the **`language`** objects.\n\nBeginning with `v2.27.8`, a template's **`namespace`** must be the namespace associated with the WhatsApp business account that owns the phone number associated with the current WhatsApp Business API client or the message fails to send.\n\nThe `Template Object` contains the following fields:\n\n#### Fields\n\n| Name             | Description              |\n|------------------|--------------------------|\n| **`namespace`**  |**Optional**. <br/> The namespace of the template. |\n| **`name`**  |**Required**. <br/> The name of the template. |\n| **`language`**  |**Required**. <br/> Contains a [language object](#5bf11e7b-5a2b-4ad8-a113-f96afe031281). Specifies the language the template may be rendered in.<br/><br/>Only the `deterministic` language policy works with media template messages. |\n| **`components`**  |**Optional**. <br/> An array of [component objects](#e4b4b912-9aaa-41ac-8335-48711ae32a1f) containing the parameters of the message. |"
								},
								{
									"name": "Language Object",
									"item": [],
									"description": "The **`language`** parameter sets the language policy for a message template. This field can be nested inside the **`hsm`** and template objects.\n\nThe On-Premises API used to have **`fallback`** as a language policy option. That was deprecated with `v2.27.8`.\n\nThe `Language Object` contains the following fields:\n\n#### Fields\n\n| Name             | Description              |\n|------------------|--------------------------|\n| **`policy`**  |**Required**.<br/> **Default (and only supported value):** **`deterministic`** <br/>For more information, see [Language Policy Options](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#language-policy-options). |\n| **`code`**  |**Required**. <br/>The code of the language or locale to use. This field accepts both language (for example, ‘en’) and language_locale (for example, `en` and `en_US`) formats. <br/> For more information regarding all codes, see [Supported Languages](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages). |"
								},
								{
									"name": "Components Object",
									"item": [],
									"description": "Inside the **`Components`** object, you can nest the [**`Parameters`** object](https://developers.facebook.com/docs/whatsapp/on-premises/reference/messages#parameters-object). Additionally, you can set `type` to `button`.\n\n#### Fields\n\n| Name             | Description              |\n|------------------|--------------------------|\n| **`type`**  |**Required**. <br/> Describes the component type. <br/> **Supported values**: header, body, button <br/> For text-based templates, only **`body`** is supported.<br/><br/>**Values**: **`header`**, **`body`**, or **`button`**. For text-based templates, we only support the `type = body`. |\n| **`subtype`**  |**Required when type is `button`. Not used for the other types.**<br/> The type of button to create. <br/> Supported values: <ul><li>**`quick_reply`**: Refers to a previously created quick reply button that allows for the customer to return a predefined message. See Callback from a Quick Reply Button Click for an example of a response from a quick reply button.</li><li>**`url`**: Refers to a previously created button that allows the customer to visit the URL generated by appending the **`text`** parameter to the predefined prefix URL in the template.</li></ul>|\n| **`parameters`**  |**Required when type is `button`**. <br/> The namespace of the template. |"
								},
								{
									"name": "Parameter Object",
									"item": [],
									"description": "The **`Parameter Object`** contains the following fields:\n\n#### Fields\n\n| Name             | Description              |\n|------------------|--------------------------|\n| **`type`**       |**Required**. <br/> Describes the **`parameter`** type. <br/><br/>**Supported Values:** **`text`**, **`currency`**, **`date_time`**, **`image`**, **`document`**, and **`video`**.<br/><br/>For text-based templates, the only supported parameter types are **`text`**, **`currency`**, and **`date_time`**.<br/><br/>For more information about **`currency`** and **`date_time`**, see the [Localizable Parameters](https://developers.facebook.com/docs/whatsapp/api/messages#local) section. The **`currency`** and **`date_time`** parameters for **`template`** messages uses **`fallback_value`** in place of default.|"
								},
								{
									"name": "Button Parameter Object",
									"item": [],
									"description": "The `Button Parameter Object` contains the following fields:\n\n#### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`type`** | **Required**. <br/> Specifies the type of parameter for the button. <br/> Supported values: **`payload`** or **`text`**.|\n| **`payload`** | **Required**. <br/> Developer-defined payload that will be returned when the button is clicked in addition to the display text on the button.<br/><br/>For more information on usage, see [Callback from a Quick Reply Button Click](#203b0c7a-9789-4622-9569-d07ff7a66e43).|\n| **`text`** | **Required for url buttons**. <br/> Developer provided suffix that is appended to the predefined prefix URL in the template.|"
								},
								{
									"name": "Currency Object",
									"item": [],
									"description": "The `Currency Object` contains the following fields:\n\n#### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`fallback_value`** |**Required**. <br/> The default text if localization fails. <br/> |\n| **`code`**           |**Required**. <br/> The currency code as defined in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). <br/> |\n| **`amount_1000`**           |**Required**. <br/> The amount multiplied by 1000. <br/> |"
								},
								{
									"name": "Date_Time Object",
									"item": [],
									"description": "The `Date_Time Object` contains the following fields:\n\n#### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`fallback_value`** | **Required**. <br/> The default text if localization fails. |\n| **`day_of_week`**    | **Optional**. <br/> If it is different from the value derived from the date (if specified), use the derived value. Both strings and numbers are accepted.<br/>Supported values: <ul><li>`\"MONDAY\"` or 1</li><li>`\"TUESDAY\"` or 2</li><li>`\"WEDNESDAY\"` or 3</li><li>`\"THURSDAY\"` or 4</li><li>`\"FRIDAY\"` or 5</li><li>`\"SATURDAY\"` or 6</li><li>`\"SUNDAY\"` or 7</li></ul> |\n| **`year`** | **Optional**. <br/> Specifies the year. |\n| **`month`** | **Optional**. <br/> Specifies the month. |\n| **`day_of_month`** | **Optional**. <br/> Specifies the day of the month. |\n| **`hour`** | **Optional**. <br/> Specifies the hour. |\n| **`minute`** | **Optional**. <br/> Specifies the minute. |\n| **`calendar`** | **Optional**. <br/> The type of calendar.<br/><br/>Supported options: `\"GREGORIAN\"` or `\"SOLAR_HIJRI\"`. |"
								},
								{
									"name": "Interactive Object",
									"item": [
										{
											"name": "header",
											"item": [],
											"description": "##### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`type`**      | **Required**.<br/>The header type you would like to use. Supported values are:<ul><li>`text`: Used for List Messages, Reply Buttons, and Multi-Product Messages.</li><li>`video`: Used for Reply Buttons and Multi-Product Messages.</li><li>`image`: Used for Reply Buttons and Multi-Product Messages.</li><li>`document`: Used for Reply Buttons and Multi-Product Messages.</li></ul>|\n| **`text`**      | **Required if `type` is set to `text`**.<br/>The text for the header. Formatting allows emojis, but not markdown.<br/><br/>Maximum length: 60 characters.|\n| **`video`**      | **Required if `type` is set to `video`**.<br/>Contains the **`media`** object for this video.|\n| **`image`**      | **Required if `type` is set to `image`**.<br/>Contains the **`media`** object for this image.|\n| **`document`**      | **Required if `type` is set to `document`**.<br/>Contains the **`media`** object for this document.|"
										},
										{
											"name": "body",
											"item": [],
											"description": "##### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`text`**      | **Required**.<br/>The body content of the message. Emojis and markdown are supported. Links are supported.<br/><br/>Maximum length: 1024 characters.|"
										},
										{
											"name": "footer",
											"item": [],
											"description": "##### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`text`**      | **Required if the `footer` object is present**.<br/>The footer content of the message. Emojis and markdown are supported. Links are supported.<br/><br/>Maximum length: 60 characters.|"
										},
										{
											"name": "action",
											"item": [],
											"description": "##### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`button`**      | **Required for all List Messages**.<br/>The Button content. It cannot be an empty string and must be unique within the message. Does not allow emojis or markdown.<br/><br/>Maximum length: 20 characters.|\n| **`buttons`**      | **Required for Reply Button Messages**.<br/>A button can contain the following parameters:<ul><li>**`type`**: only supported if **`type`**=**`reply`**(for Reply Button Messages)</li><li>**`title`**: The Button title. It cannot be an empty string and must be unique within the message. Does not allow emojis or markdown. Maximum length: 20 characters.</li><li>**`id`**: Unique identifier for your button. This ID is returned in the Webhook when the button is clicked by the user. Maximum length: 256 characters.</li></ul>|\n| **`sections`**      | **Required for all List Messages and Multi-Product Messages**.<br/>The array of **`section`** objects. There is a minimum of 1 and maximum of 10. For more information, see [Section object](https://developers.facebook.com/docs/whatsapp/on-premises/reference/messages#section-object).|\n| **`catalog_id`**      | **Required for Single-Product Messages and Multi-Product Messages**.<br/>The unique identifier of the Facebook catalog linked to your WhatsApp Business Account. This ID can be retrieved through [Commerce Manager](https://business.facebook.com/commerce_manager/).|\n| **`product_retailer_id`**      | **Required for Single-Product Messages and Multi-Product Messages**.<br/>The unique identifier of the product in a catalog. This value can be retrieved using [Commerce Manager](https://business.facebook.com/commerce_manager/). Maximum 100 characters for both Single-Product and Multi-Product messages.|"
										},
										{
											"name": "section",
											"item": [],
											"description": "##### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`title`**      | **Required if the message has more than one `section`**.<br/>The title of the section.<br/><br/>Maximum length: 24 characters.|\n| **`rows`**      | **Required for List Messages**.<br/>Contains a list of rows.<br/><br/>Each row must have a **`title`** (Maximum length: 24 characters) and an **`ID`** (Maximum length: 200 characters). You can add a **`description`** (Maximum length: 72 characters), but it is optional.|\n| **`product_items`**      | **Required for Multi-Product Messages**.<br/>The array of **`product`** objects. There is a minimum of 1 product per section. There is a maximum of 30 products across all sections.|"
										},
										{
											"name": "product",
											"item": [],
											"description": "##### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`product_retailer_id `**      | **Required for Multi-Product Messages**.<br/>The unique identifier of the product in a catalog. This can be retrieved using Commerce Manager.|"
										}
									],
									"description": "The **`Interactive Object`** contains four main components: **`header`**, **`body`**, **`footer`**, and **`action`**. Additionally, some of those components can contain one or more different objects:\n\n* Inside **`header`**, you can nest **`media`** objects.\n* Inside **`action`**, you can nest **`section`** and **`button`** objects.\n\n#### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`type`**      | **Required**.<br/>The type of interactive message you want to send. Supported values:<ul><li>`list`: Use it for List Messages.</li><li>`button`: Use it for Reply Buttons.</li><li>`product`: Use it for Single-Product Messages.</li><li>`product_list`: Use it for Multi-Product Messages.</li></ul>|\n| **`header`**      | **Required for type `product_list`. Optional for other types**.<br/>Header content displayed on top of a message. <br/><br/>You cannot set a **`header`** if your **`interactive`** object is of **`product`** type.|\n| **`body`**      | **Optional for type `product`. Required for other message types**.<br/>The body of the message. Emojis and markdown are supported.<br/><br/>Maximum length: 1024 characters.|\n| **`footer`**      | **Optional**.<br/>The footer of the message. Emojis and markdown are supported.<br/><br/>Maximum length: 60 characters.|\n| **`action`**      | **Required**.<br/>Action you want to perform after reading the message.|"
								},
								{
									"name": "HSM",
									"item": [],
									"description": "> **The HSM object is deprecated for the recent launch of WhatsApp Business API `v2.39`. We recommend you use the template object instead.**\n\nThe `HSM Parameter Object` contains the following fields:\n\n#### Fields\n\n| Name                 | Description              |\n|----------------------|--------------------------|\n| **`namespace`**      | **Required**.<br/>The namespace to be used. Beginning with `v2.2.7`, if the namespace does not match up to the **`element_name`**, the message fails to send.|\n| **`element_name`**      | **Required**.<br/>The element name that indicates which template to use within the namespace. Beginning with `v2.2.7`, if the element_name does not match up to the namespace, the message fails to send.|\n| **`language`**      | **Required**.<br/>Allows for the specification of a deterministic language. For more information, see the [Language object](#5bf11e7b-5a2b-4ad8-a113-f96afe031281).<br/>This field used to allow for a **`fallback`** option, but this has been deprecated with `v2.27.8.`|\n| **`localizable_params`**      | **Required**.<br/>This field is an array of values to apply to variables in the template. For more information, see the [Localizable Parameters](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#local) section.|"
								}
							],
							"description": "To send a message, you must first assemble a message object with the content you want to send. The **`Message Object`** contains the following fields used to create a message object:\n\n#### Fields\n\n| Name | Description |\n|------|----------|\n|**`recipient_type`** | **Optional**. <br/> Currently, you can only send messages to individuals. Set this value to `\"individual\"`. <br/>**Default**: individual |\n|**`to`** | **Required**. <br/> WhatsApp ID or phone number for the person you want to send a message to. Use the ID returned from the **`contacts`** endpoint. |\n|**`type`** | **Optional for text messages**. <br/>The type of message you want to send. <br/><br/> The supported options are: <ul><li>**audio**: Used for audio messages.</li><li>**contacts**: Used for contact messages.</li><li>**document**: Used for document messages.</li><li>**image**: Used for image messages.</li><li>**location**: Used for location messages.</li><li>**sticker**: Used for sticker messages.</li><li>**template**: Used for template messages. The following types of templates will be supported: `text`, `image`, and `document`.</li><li>**text**: for text messages.</li><li>**video**: Used for video messages.</li><li>**interactive**: Used for interactive messages.</li><li>**hsm**: This option has been deprecated with the launch of WhatsApp Business API `v2.39`. Use [**`template`**](#451fb492-b3f2-455b-ab06-961ec8b60d31) instead.</li></ul><br/>**Default**: `text`|\n|**`preview_url`**<br/>type: **Boolean**| **Only used with messages when `type` is set to `text`**.<br/> Allows for URL previews in text messages. For more information, see the Sending URLs in Text Messages. This field is optional if not including a URL in your message.<br/>**Values:** `false` (default), `true` |\n|**`audio`** | **Required when `type` is set to `audio`**.<br/> A [media object]() containing audio. |\n|**`contact`** | **Required when `type` is set to `contacts`**.<br/> A [contacts object]().|\n|**`document`** | **Required when `type` is set to `document`**.<br/> A [media object]() containing a document.  |\n|**`image`** | **Required when `type` is set to `image`**.<br/> A [media object]() containing an image.  |\n|**`location`** | **Required when type `type` is set to `location`**.<br/> A [location object]().  |\n|**`sticker`** | **Required when type `type` is set to `sticker`**.<br/> A [media object]() containing a sticker.  |\n|**`template`** | **Required when type is set to `template`**.<br/> A [template object]().  |\n|**`text`** | **Required for text messages**.<br/> A [text object](). |\n|**`video`** | **Required when `type` is set to `video`**.<br/> A [media object]() containing a video.  |\n|**`interactive`** | **Required when `type` is set to `video`**.<br/> An [interactive object]().  |\n|**`hsm`** | **Only used with message templates**. Contains an [hsm object](#ddaf7d89-2fae-4bde-903e-e35ecce4f99a). <br/>This option has been deprecated with the launch of WhatsApp Business API `v2.39`. Use [**`template`**](#451fb492-b3f2-455b-ab06-961ec8b60d31) instead. |",
							"auth": {
								"type": "noauth"
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Send Text Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"text\",\n    \"recipient_type\": \"individual\",\n    \"text\": {\n        \"body\": \"<Message Text>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a text message, make a POST call to `/messages` and attach a **`message`** object with **`type`** = text."
							},
							"response": [
								{
									"name": "Send Text Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"text\",\n    \"recipient_type\": \"individual\",\n    \"text\": {\n        \"body\": \"<Message Text>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{    \n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Text URL Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"text\",\n    \"text\": {\n        \"body\": \"<Message Text With URL>\"\n    },\n    \"preview_url\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a text message, make a POST call to `/messages` and attach a **`message`** object with **`type`** = text. In the message text, be sure to include the URL."
							},
							"response": [
								{
									"name": "Send Text URL Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"text\",\n    \"text\": {\n        \"body\": \"<Message Text With URL>\"\n    },\n    \"preview_url\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Image Message By ID",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"image\",\n    \"recipient_type\": \"individual\",\n    \"image\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send an image message, make a **POST** call to `/messages` and attach a message object with **`type`** = `image`. Then, add a corresponding **`media`** object."
							},
							"response": [
								{
									"name": "Send Image Message By ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"image\",\n    \"recipient_type\": \"individual\",\n    \"image\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Image Message By URL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"image\",\n    \"recipient_type\": \"individual\",\n    \"image\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Link to Image, https>\",\n        \"caption\": \"<Media Caption>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send an image message, make a **POST** call to `/messages` and attach a message object with **`type`** = `image`. Then, add a corresponding **`media`** object. Be sure to include the **`link`** to the image."
							},
							"response": [
								{
									"name": "Send Image Message By URL",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"image\",\n    \"recipient_type\": \"individual\",\n    \"image\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Link to Image, https>\",\n        \"caption\": \"<Media Caption>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Audio Message By ID",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\",\n    \"recipient_type\": \"individual\",\n    \"audio\": {\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send an audio message, make a **POST** call to `/messages` and attach a message object with **`type`** = `audio`. Then, add a corresponding **`media`** object."
							},
							"response": [
								{
									"name": "Send Audio Message By ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\",\n    \"recipient_type\": \"individual\",\n    \"audio\": {\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{ \n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Audio Message By URL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\",\n    \"recipient_type\": \"individual\",\n    \"audio\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Link to Audio, https>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send an audio message, make a **POST** call to `/messages` and attach a message object with **`type`** = `audio`. Then, add a corresponding **`media`** object. Be sure to include the **`link`** to the audio file."
							},
							"response": [
								{
									"name": "Send Audio Message By URL",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"audio\",\n    \"recipient_type\": \"individual\",\n    \"audio\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Link to Audio, https>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Video Message By ID",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"video\",\n    \"recipient_type\": \"individual\",\n    \"video\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a video message, make a **POST** call to `/messages` and attach a message object with **`type`** = `video`. Then, add a corresponding **`media`** object."
							},
							"response": [
								{
									"name": "Send Video Message By ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"video\",\n    \"recipient_type\": \"individual\",\n    \"video\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Video Message By URL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"video\",\n    \"recipient_type\": \"individual\",\n    \"video\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"caption\": \"<Message Caption>\",\n        \"link\": \"<Link to Video, https>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a video message, make a **POST** call to `/messages` and attach a message object with **`type`** = `video`. Then, add a corresponding **`media`** object. Be sure to include the **`link`** to the video file."
							},
							"response": [
								{
									"name": "Send Video Message By URL",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"to\": \"{{Recipient-WA-ID}}\",\n\t\"type\": \"video\",\n\t\"recipient_type\": \"individual\",\n\t\"video\": {\n\t\t\"provider\": {\n\t\t\t\"name\": \"<Provider Name from Media Provider API, optional\"\n\t\t},\n\t\t\"caption\": \"<Message Caption>\",\n\t\t\"link\": \"<Link to Video, https>\"\n\t}\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Doc Message By ID",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"document\",\n    \"recipient_type\": \"individual\",\n    \"document\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\",\n        \"filename\": \"<Filename>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a document message, make a **POST** call to `/messages` and attach a message object with **`type`** = `document`. Then, add a corresponding **`media`** object."
							},
							"response": [
								{
									"name": "Send Doc Message By ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"document\",\n    \"recipient_type\": \"individual\",\n    \"document\": {\n        \"caption\": \"<Message Caption>\",\n        \"id\": \"<Media Id, from Media API>\",\n        \"filename\": \"<Filename>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Doc Message By URL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"document\",\n    \"recipient_type\": \"individual\",\n    \"document\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"caption\": \"<Message Caption>\",\n        \"link\": \"<Link to PDF, https>\",\n        \"filename\": \"<Filename>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a document message, make a **POST** call to `/messages` and attach a message object with **`type`** = `document`. Then, add a corresponding **`media`** object. Be sure to add the **`link`** to the document file."
							},
							"response": [
								{
									"name": "Send Doc Message By URL",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"document\",\n    \"recipient_type\": \"individual\",\n    \"document\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"caption\": \"<Message Caption>\",\n        \"link\": \"<Link to PDF, https>\",\n        \"filename\": \"<Filename>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{  \n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send List Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"recipient_type\": \"individual\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"interactive\",\n    \"interactive\": {\n        \"type\": \"list\",\n        \"header\": {\n            \"type\": \"text\",\n            \"text\": \"<Header List Message>\"\n        },\n        \"body\": {\n            \"text\": \"<List Body Message>\"\n        },\n        \"footer\": {\n            \"text\": \"<Footer Message>\"\n        },\n        \"action\": {\n            \"button\": \"Send\",\n            \"sections\": [\n                {\n                    \"title\": \"<List Category Item>\",\n                    \"rows\": [\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        },\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        }\n                    ]\n                },\n                {\n                    \"title\": \"<List Item>\",\n                    \"rows\": [\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        },\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a list message, make a **POST** call to `/messages` and attach a message object with **`type`** = `interactive`. Then, set the **`type`** of the `interactive` object = **`list`**. Finally, include the corresponding **`interactive`** object."
							},
							"response": [
								{
									"name": "Send List Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"recipient_type\": \"individual\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"interactive\",\n    \"interactive\": {\n        \"type\": \"list\",\n        \"header\": {\n            \"type\": \"text\",\n            \"text\": \"<Header List Message>\"\n        },\n        \"body\": {\n            \"text\": \"<List Body Message>\"\n        },\n        \"footer\": {\n            \"text\": \"<Footer Message>\"\n        },\n        \"action\": {\n            \"button\": \"Send\",\n            \"sections\": [\n                {\n                    \"title\": \"<List Category Item>\",\n                    \"rows\": [\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        },\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        }\n                    ]\n                },\n                {\n                    \"title\": \"<List Item>\",\n                    \"rows\": [\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        },\n                        {\n                            \"id\": \"<Item ID>\",\n                            \"title\": \"<Item Title>\",\n                            \"description\": \"<Item Description>\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Buttons Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"to\": \"{{Recipient-WA-ID}}\",\n\t\"recipient_type\": \"individual\",\n\t\"type\": \"button\",\n\t\"button\": {\n\t\t\"header\": {\n            \"type\": \"text\", \n            \"text\": \"<Header Text>\"\n        },\n\t\t\"body\": {\n            \"text\": \"<Body Text>\"\n        },\n        \"footer\": {\n            \"text\": \"<Footer Text>\"\n        },\n        \"buttons\": [\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 1 Text>\",\n                    \"title\" : \"<Button 1 Description>\"\n                }\n            },\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 2 Text>\",\n                    \"title\" : \"<Button 2 Description>\"\n                }\n            },\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 3 Text>\",\n                    \"title\" : \"<Button 3 Description>\"\n                }\n            }\n        ]\n\t}\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a list message, make a **POST** call to `/messages` and attach a message object with **`type`** = `interactive`. Then, set the **`type`** of the `interactive` object = **`button`**. Finally, include the corresponding **`interactive`** object."
							},
							"response": [
								{
									"name": "Send Buttons Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"recipient_type\": \"individual\",\n    \"type\": \"button\",\n    \"button\": {\n        \"header\": {\n            \"type\": \"text\",\n            \"text\": \"<Header Text>\"\n        },\n        \"body\": {\n            \"text\": \"<Body Text>\"\n        },\n        \"footer\": {\n            \"text\": \"<Footer Text>\"\n        },\n        \"buttons\": [\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 1 Text>\",\n                    \"title\": \"<Button 1 Description>\"\n                }\n            },\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 2 Text>\",\n                    \"title\": \"<Button 2 Description>\"\n                }\n            },\n            {\n                \"type\": \"reply\",\n                \"reply\": {\n                    \"payload\": \"<Button 3 Text>\",\n                    \"title\": \"<Button 3 Description>\"\n                }\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Message Template Text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"<param type>\",\n                        \"text\": \"<param value>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "Before sending a text message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager). If your account is not verified yet, you can use one of our [pre-approved templates](https://www.facebook.com/business/help/722393685250070).\n\nTo send a text-based message template, make a **POST** call to `/v1/messages` and attach a message object with **`type`**=`template`. Then, add a **`template`** object."
							},
							"response": [
								{
									"name": "Send Message Template Text",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"to\": \"{{Recipient-WA-ID}}\",\n\t\"type\": \"template\",\n\t\"template\": {\n\t\t\"namespace\": \"<Message Template Namespace>\",\n    \t\"name\": \"<Message Template Element Name>\",\n        \"language\": {\n    \t\t\"policy\": \"<Message Template Language Policy>\",\n    \t\t\"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [{\n            \"type\": \"body\",\n            \"parameters\": [\n                {\n                    \"type\": \"<param type>\",\n                    \"text\": \"<param value>\"\n                }\n            ]\n        }]\n\t}\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Message Template Media",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"caption\": \"<Message Caption>\",\n                        \"link\": \"<Media HTTPS URL>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Message Text Param>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "Before sending a media message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager). If your account is not verified yet, you can use one of our [pre-approved templates](https://www.facebook.com/business/help/722393685250070).\n\nTo send a media-based message template, make a **POST** call to `/v1/messages` and attach a message object with **`type`**=`template`. Then, add a **`template`** object."
							},
							"response": [
								{
									"name": "Send Message Template Media",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": [\n                    {\n                        \"type\": \"image\",\n                        \"caption\": \"<Message Caption>\",\n                        \"link\": \"<Media HTTPS URL>\"\n                    }\n                ]\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Message Text Param>\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Message Template Call To Action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"url\",\n                \"index\": \"1\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Developer Defined Dynamic URL suffix>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "Before sending a message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager). If your account is not verified yet, you can use one of our [pre-approved templates](https://www.facebook.com/business/help/722393685250070).\n\nInteractive message templates expand the content you can send recipients beyond the standard message template and media messages template types to include interactive buttons using the components object. \n\nA `Call-to-Action` interactive message allows your customer to call a phone number and visit a website.\n\nThese buttons can be attached to text messages or media messages. Once your interactive message templates have been created and approved, you can use them in notification messages as well as customer service/care messages.\n\nTo send an interactive message template, make a **POST** call to `/v1/messages` and attach a message object with **`type`**=`template`. Then, add a **`template`** object with your chosen **`button`**."
							},
							"response": [
								{
									"name": "Send Message Template Call To Action",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"url\",\n                \"index\": \"1\",\n                \"parameters\": [\n                    {\n                        \"type\": \"text\",\n                        \"text\": \"<Developer Defined Dynamic URL suffix>\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Message Template Quick Reply",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"quick_reply\",\n                \"index\": \"1\",\n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        \"payload\": \"<Developer Defined payload for quick reply>\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "Before sending a message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager). If your account is not verified yet, you can use one of our [pre-approved templates](https://www.facebook.com/business/help/722393685250070).\n\nInteractive message templates expand the content you can send recipients beyond the standard message template and media messages template types to include interactive buttons using the components object. \n\nA `Quick Reply` interactive message allows your customer to return a simple text message.\n\nThese buttons can be attached to text messages or media messages. Once your interactive message templates have been created and approved, you can use them in notification messages as well as customer service/care messages.\n\nTo send an interactive message template, make a **POST** call to `/v1/messages` and attach a message object with **`type`**=`template`. Then, add a **`template`** object with your chosen **`button`**."
							},
							"response": [
								{
									"name": "Send Message Template Quick Reply",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"namespace\": \"<Message Template Namespace>\",\n        \"name\": \"<Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Message Template Language Policy>\",\n            \"code\": \"<Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"header\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"body\",\n                \"parameters\": {\n                    \"type\": \"text\",\n                    \"text\": \"<Param Text>\"\n                }\n            },\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"quick_reply\",\n                \"index\": \"1\",\n                \"parameters\": [\n                    {\n                        \"type\": \"payload\",\n                        \"payload\": \"<Developer Defined payload for quick reply>\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Message Template Catalog",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"name\": \"<Catalog Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Catalog Message Template Language Policy>\",\n            \"code\": \"<Catalog Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"catalog\",\n                \"index\": 0,\n                \"parameters\": [\n                    {\n                        \"type\": \"action\",\n                        \"action\": {\n                            \"thumbnail_product_retailer_id\": \"<PRODUCT-SKU>\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "Before sending a message template, you need to create one. For more information, see [Create Template Using the WhatsApp Manager](https://developers.facebook.com/docs/whatsapp/message-templates/creation#step-1--create-template-using-the-whatsapp-manager). If your account is not verified yet, you can use one of our [pre-approved templates](https://www.facebook.com/business/help/722393685250070).\n\nInteractive message templates expand the content you can send recipients beyond the standard message template and media messages template types to include interactive buttons using the components object.\n\n  \nCatalog messages are free-form messages that allow you to showcase your product catalog entirely within WhatsApp.  \n\nCatalog messages display a product thumbnail header image of your choice, custom body text, a fixed text header, a fixed text sub-header, and a **View catalog** button.  \n\nTo send an interactive message template, make a **POST** call to `/v1/messages` and attach a message object with **`type`**\\=`template`. Then, add a **`template`** object with your chosen **`button`**."
							},
							"response": [
								{
									"name": "Send Message Template Quick Reply",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"name\": \"<Catalog Message Template Element Name>\",\n        \"language\": {\n            \"policy\": \"<Catalog Message Template Language Policy>\",\n            \"code\": \"<Catalog Message Template Language Code>\"\n        },\n        \"components\": [\n            {\n                \"type\": \"button\",\n                \"sub_type\": \"catalog\",\n                \"index\": 0,\n                \"parameters\": [\n                    {\n                        \"type\": \"action\",\n                        \"action\": {\n                            \"thumbnail_product_retailer_id\": \"<PRODUCT-SKU>\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.51.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Contact Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"contacts\",\n    \"recipient_type\": \"individual\",\n    \"contacts\": [\n        {\n            \"addresses\": [\n                {\n                    \"city\": \"<Contact's City>\",\n                    \"country\": \"<Contact's Country>\",\n                    \"country_code\": \"<Contact's Country Code>\",\n                    \"state\": \"<Contact's State>\",\n                    \"street\": \"<Contact's Street>\",\n                    \"type\": \"<Contact's Address Type>\",\n                    \"zip\": \"<Contact's Zip Code>\"\n                }\n            ],\n            \"birthday\": \"<Contact's Birthday>\",\n            \"emails\": [\n                {\n                    \"email\": \"<Contact's Email>\",\n                    \"type\": \"<Contact's Email Type>\"\n                }\n            ],\n            \"ims\": [],\n            \"name\": {\n                \"first_name\": \"<Contact's First Name>\",\n                \"formatted_name\": \"<Contact's Formatted Name>\",\n                \"last_name\": \"<Contact's Last Name>\"\n            },\n            \"org\": {\n                \"company\": \"<Contact's Company>\"\n            },\n            \"phones\": [\n                {\n                    \"phone\": \"<Contact's Phone Number>\",\n                    \"type\": \"<Contact's Phone Number Type>\"\n                }\n            ],\n            \"urls\": []\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a contacts message, make a **POST** call to `/messages` and attach a message object with **`type`** = `contacts`."
							},
							"response": [
								{
									"name": "Send Contact Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"contacts\",\n    \"recipient_type\": \"individual\",\n    \"contacts\": [\n        {\n            \"addresses\": [\n                {\n                    \"city\": \"<Contact's City>\",\n                    \"country\": \"<Contact's Country>\",\n                    \"country_code\": \"<Contact's Country Code>\",\n                    \"state\": \"<Contact's State>\",\n                    \"street\": \"<Contact's Street>\",\n                    \"type\": \"<Contact's Address Type>\",\n                    \"zip\": \"<Contact's Zip Code>\"\n                }\n            ],\n            \"birthday\": \"<Contact's Birthday>\",\n            \"emails\": [\n                {\n                    \"email\": \"<Contact's Email>\",\n                    \"type\": \"<Contact's Email Type>\"\n                }\n            ],\n            \"ims\": [],\n            \"name\": {\n                \"first_name\": \"<Contact's First Name>\",\n                \"formatted_name\": \"<Contact's Formatted Name>\",\n                \"last_name\": \"<Contact's Last Name>\"\n            },\n            \"org\": {\n                \"company\": \"<Contact's Company>\"\n            },\n            \"phones\": [\n                {\n                    \"phone\": \"<Contact's Phone Number>\",\n                    \"type\": \"<Contact's Phone Number Type>\"\n                }\n            ],\n            \"urls\": []\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Location Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"location\",\n    \"recipient_type\": \"individual\",\n    \"location\": {\n        \"longitude\": \"<Longitude>\",\n        \"latitude\": \"<Latitude>\",\n        \"name\": \"<Location Name>\",\n        \"address\": \"<Location's Address>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a location message, make a **POST** call to `/messages` and attach a message object with **`type`** = `location`."
							},
							"response": [
								{
									"name": "Send Location Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"location\",\n    \"recipient_type\": \"individual\",\n    \"location\": {\n        \"longitude\": \"<Longitude>\",\n        \"latitude\": \"<Latitude>\",\n        \"name\": \"<Location Name>\",\n        \"address\": \"<Location's Address>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Catalog Message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"recipient_type\": \"individual\",\n    \"type\": \"interactive\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"interactive\": {\n        \"type\": \"catalog_message\",\n        \"body\": {\n            \"type\": \"text\",\n            \"text\": \"<Catalog Message Body>\"\n        },\n        \"action\": {\n            \"name\": \"catalog_message\",\n            \"parameters\": {\n                \"thumbnail_product_retailer_id\": \"<Product-SKU>\"\n            }\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a catalog message, make a **POST** call to `/messages` and attach a message object with **`type`** = `catalog_message`."
							},
							"response": [
								{
									"name": "Send Catalog Message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"recipient_type\": \"individual\",\n    \"type\": \"interactive\",\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"interactive\": {\n        \"type\": \"catalog_message\",\n        \"body\": {\n            \"type\": \"text\",\n            \"text\": \"<Catalog Message Body>\"\n        },\n        \"action\": {\n            \"name\": \"catalog_message\",\n            \"parameters\": {\n                \"thumbnail_product_retailer_id\": \"<Product-SKU>\"\n            }\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.51.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Sticker Message By ID",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"sticker\",\n    \"recipient_type\": \"individual\",\n    \"sticker\": {\n        \"id\": \"{{Test-Sticker-Media-ID}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a sticker message, make a **POST** call to `/messages` and attach a message object with **`type`** = `sticker`. Then, add a corresponding **`media`** object."
							},
							"response": [
								{
									"name": "Send Sticker Message By ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"sticker\",\n    \"recipient_type\": \"individual\",\n    \"sticker\": {\n        \"id\": \"{{Test-Sticker-Media-ID}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Send Sticker Message By URL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"sticker\",\n    \"recipient_type\": \"individual\",\n    \"sticker\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Image Link>\"\n    }\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "To send a sticker message, make a **POST** call to `/messages` and attach a message object with **`type`** = `sticker`. Then, add a corresponding **`media`** object. Then, add a corresponding **`media`** object. Be sure to include the link to the sticker file."
							},
							"response": [
								{
									"name": "Send Sticker Message By URL",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"to\": \"{{Recipient-WA-ID}}\",\n    \"type\": \"sticker\",\n    \"recipient_type\": \"individual\",\n    \"sticker\": {\n        \"provider\": {\n            \"name\": \"<Provider Name from Media Provider API, optional\"\n        },\n        \"link\": \"<Image Link>\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"messages\": [\n        {\n            \"id\": \"gBGGFlBxZ0M_AgkSjW7mD4HxMUw\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Mark Message As Read",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"read\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/messages/<Message ID from Webhook>",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"messages",
										"<Message ID from Webhook>"
									]
								},
								"description": "You can use the `/v1/messages/` endpoint to change the status of incoming messages to read.\n\nYou must set **`pass_through`** to `false` in the application settings.\n\nWhen **`pass_through`** is set to `true`, messages are removed from the local database after they are delivered to, or read, by the recipient. But, when it is set to `false`, incoming messages are saved in local database for 7 days, after which they are deleted if **`db_garbagecollector_enable`** is set to `true`.\n\nWe recommend marking incoming messages as read within 7 days of receipt.\n\nThe **`message_id`** used in this API call is the **`id`** provided in the inbound notification.\n\n#### Response\nA successful response returns `null` or `{}`"
							},
							"response": [
								{
									"name": "Mark Message As Read",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"read\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/messages/ABGGFlBxZ0M_Ago6RlX6UcAOS-3Y",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"messages",
												"ABGGFlBxZ0M_Ago6RlX6UcAOS-3Y"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						}
					],
					"description": "Use the `messages` node to send text messages, media/documents, and message templates to your customers.\n\nSee the following guides for information regarding the specific types of messages you can send: [Text Messages](https://developers.facebook.com/docs/whatsapp/api/messages/text), [Media Messages](https://developers.facebook.com/docs/whatsapp/api/messages/media), [Message Templates](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates), and [Other Message Types](https://developers.facebook.com/docs/whatsapp/api/messages/others).\n\n## Before You Start\n\nYou need:\n\n* Authenticate yourself and receive an authentication token that enables you to access the service. See the [Login and Authentication documentation](https://developers.facebook.com/docs/whatsapp/api/users/login) for more information on how to do this.\n* To verify the WhatApp account you wish to message and get its WhatsApp user ID.\nSee the [Contacts documentation](https://developers.facebook.com/docs/whatsapp/api/contacts) for more information on how to do this.\n* Meet the cut-off control service requirements for messages.\n\nBefore sending a message, you should also send an API call to the [contacts node](https://developers.facebook.com/docs/whatsapp/api/contacts). The information from checking contacts is cached in the container and not doing this might result in an Unknown Contact error.\n\n## Constraints\n\n* The following types of message are supported: text, message templates, images, stickers, documents, and audio.\n* A text message can be a max of 4096 characters long."
				},
				{
					"name": "Media",
					"item": [
						{
							"name": "Upload Media",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "image/jpeg"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{URL}}/v1/media",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"media"
									]
								},
								"description": "Make a **POST** request to `/v1/media` to upload your media. The body of the API request must contain the binary media data and the `Content-Type` header must be set to the type of the media being uploaded. For more information, see the [Supported Content-Types](https://developers.facebook.com/docs/whatsapp/api/media#supported-files) for supported options.\n\nSending binary data in a `POST HTTP` request is a standard way of uploading binary data. If you want to upload an image, for example, you issue a **POST** request with the actual image bytes in the payload."
							},
							"response": [
								{
									"name": "Upload Media",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "image/jpeg"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{URL}}/v1/media",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"media"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"media\": [\n        {\n            \"id\": \"f043afd0-f0ae-4b9c-ab3d-696fb4c8cd68\"\n        }\n    ],\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Download Media",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/media/{{Test-Media-ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"media",
										"{{Test-Media-ID}}"
									]
								},
								"description": "Given a specific ID, use the `v1/media/{{media-id}}` endpoint to retrieve or delete your media.\n\nAfter you have successfully uploaded your media, you receive a response containing a media ID. Use that ID in any requests to retrieve the media stored in the WhatsApp Business API client.\n\nThis process to retrieve media is also used when a user sends an image to you that is received by your Webhook. When a message with media is received, the WhatsApp Business API client will download the media. Once the media is downloaded, you will receive a notification through your Webhook; use the media ID found in that notification to retrieve the media.\n\nYou can enable the WhatsApp Business API client to auto-download media with the [Auto-download Media Settings](https://developers.facebook.com/docs/whatsapp/api/settings/app#auto).\n\n## Response\nIf the media is not found, a `404 Not Found` response code is returned with no body.\n\nIf you receive a different error message, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors) for more information."
							},
							"response": [
								{
									"name": "Download Media",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/media/{{Test-Media-ID}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"media",
												"{{Test-Media-ID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [],
									"cookie": [],
									"body": "<binary-media-data>"
								}
							]
						},
						{
							"name": "Retry download Media",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/media/download/{{Test-Media-ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"media",
										"download",
										"{{Test-Media-ID}}"
									]
								},
								"description": "Given a specific ID, use the `v1/media/{{media-id}}` endpoint to retrieve or delete your media.\n\nAfter you have successfully uploaded your media, you receive a response containing a media ID. Use that ID in any requests to retrieve the media stored in the WhatsApp Business API client.\n\nThis process to retrieve media is also used when a user sends an image to you that is received by your Webhook. When a message with media is received, the WhatsApp Business API client will download the media. Once the media is downloaded, you will receive a notification through your Webhook; use the media ID found in that notification to retrieve the media.\n\nYou can enable the WhatsApp Business API client to auto-download media with the [Auto-download Media Settings](https://developers.facebook.com/docs/whatsapp/api/settings/app#auto).\n\n## Response\nIf the media is not found, a `404 Not Found` response code is returned with no body.\n\nIf you receive a different error message, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors) for more information."
							},
							"response": [
								{
									"name": "Download Media",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/media/{{Test-Media-ID}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"media",
												"{{Test-Media-ID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "<binary-media-data>"
								}
							]
						},
						{
							"name": "Delete Media",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{URL}}/v1/media/{{Test-Media-ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"media",
										"{{Test-Media-ID}}"
									]
								},
								"description": "To delete media in the WhatsApp Business API client, send a **DELETE** request to the `v1/media` endpoint along with the ID of the media that you want to delete. Use the ID from the response to uploading the media or the [media message from a Webhook](https://developers.facebook.com/docs/whatsapp/api/Webhooks/Webhooks/#mediawebhook).\n\n## Response\nA successful response returns a `200 OK `and either `null` or `{}`. If the media is not found, the response returns `404 Not Found` and contains no body. If you receive a different error message, see [Error and Status Messages](https://developers.facebook.com/docs/whatsapp/api/errors) for more information."
							},
							"response": [
								{
									"name": "Delete Media",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{URL}}/v1/media/{{Test-Media-ID}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"media",
												"{{Test-Media-ID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						}
					],
					"description": "Use the `v1/media` endpoint to upload, retrieve, or delete media.\n\n## Before You Start\nWhen a media message is sent, the media is stored on the WhatsApp servers for 14 days. If a user makes a request to download the media after 14 days, the WhatsApp servers will request the same media file from the WhatsApp Business API client. If the media has been removed, the user will be notified that the media is unavailable.\n\nIt is not safe to assume the media was downloaded simply based on the delivered and read receipts. Outgoing media is generally safe to be removed past 30 days, but you should employ a strategy that best suits your business.\n\n### Constraints\n\nMedia operations have the following constraints:\n\n* If you use the media upload process rather than linking to a media URL, the file must be uploaded to the media volume. Once the upload is complete, you can send a message using the media ID.\n* The application processes the media that is uploaded before it's sent to the server. While the maximum file size for media that can be uploaded to the media node is 64MB, there are post-processing limits for the various media types outlined in the Post-Processing Media Size table below.\n* Media storage needs to be handled by the business. If the media volume gets full, message sending will start to fail.\n\nThere is no support for:\n   * Sending media by byte streams.\n   * Sending messages with animated stickers."
				},
				{
					"name": "Stickers",
					"item": [
						{
							"name": "Get First Party Stickerpacks",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/v1/stickerpacks?namespace=whatsapp",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks"
									],
									"query": [
										{
											"key": "namespace",
											"value": "whatsapp"
										}
									]
								},
								"description": "Use a **GET** request to the `/v1/stickerpacks/` endpoint to retrieve a first-party stickerpack. To get WhatsApp stickerpacks, be sure to set `namespace`=`whatsapp`."
							},
							"response": [
								{
									"name": "Get First Party Stickerpacks",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks?namespace=whatsapp",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks"
											],
											"query": [
												{
													"key": "namespace",
													"value": "whatsapp"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stickerpacks\": [\n        {\n            \"id\": \"sticker-pack-id1\"\n        },\n        {\n            \"id\": \"sticker-pack-id2\"\n        }\n    ],\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get First Party Stickerpack Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}?namespace=whatsapp",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-1P-Stickerpack-ID}}"
									],
									"query": [
										{
											"key": "namespace",
											"value": "whatsapp"
										}
									]
								},
								"description": "Use a **GET** request to the `/v1/stickerpacks/{{stickerpack-id}}` endpoint using `namespace` = `whatsapp` to retrieve information about a given first-party stickerpack."
							},
							"response": [
								{
									"name": "Get First Party Stickerpack Info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}?namespace=whatsapp",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-1P-Stickerpack-ID}}"
											],
											"query": [
												{
													"key": "namespace",
													"value": "whatsapp"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get First Party Stickers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}/stickers?namespace=whatsapp",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-1P-Stickerpack-ID}}",
										"stickers"
									],
									"query": [
										{
											"key": "namespace",
											"value": "whatsapp"
										}
									]
								},
								"description": "Use a **GET** request to the `v1/stickerpacks/{{stickerpack-id}}/stickers` to retrieve stickers from a given first-party stickerpack:"
							},
							"response": [
								{
									"name": "Get First Party Stickers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}/stickers?namespace=whatsapp",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-1P-Stickerpack-ID}}",
												"stickers"
											],
											"query": [
												{
													"key": "namespace",
													"value": "whatsapp"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stickers\": [\n        {\n            \"index\": \"sticker-index1\"\n        },\n        {\n            \"index\": \"sticker-index2\"\n        }\n    ],\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get First Party Sticker Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}?namespace=whatsapp",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-1P-Stickerpack-ID}}",
										"stickers",
										"{{Test-Sticker-Index}}"
									],
									"query": [
										{
											"key": "namespace",
											"value": "whatsapp"
										}
									]
								},
								"description": "Send a **GET** request to `/v1/stickerpacks/{{stickerpack-id}}/stickers/{{sticker-index}}` endpoint with `namespace` = `whatsapp` to get first party sticker info about a given sticker.\n\n## Response Parameters\n\n| Name                              | Description                                |\n|-----------------------------------|--------------------------------------------|\n| **`id`**                          | The ID for the sticker media.  |\n| **`emojis`**                      | An array of the emojis included with the stickerpack |"
							},
							"response": [
								{
									"name": "Get First Party Sticker Info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-1P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}?namespace=whatsapp",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-1P-Stickerpack-ID}}",
												"stickers",
												"{{Test-Sticker-Index}}"
											],
											"query": [
												{
													"key": "namespace",
													"value": "whatsapp"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create Third Party Stickerpacks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"publisher\": \"<Your Publisher Name>\",\n\t\"name\": \"<Your Sticker Pack Name>\",\n\t\"ios_app_store_link\": \"<Valid iOS App Store Link>\",\n\t\"android_app_store_link\": \"<Valid Android App Store Link>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/stickerpacks",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks"
									]
								},
								"description": "Send a **POST** API request to the `v1/stickerpacks` endpoint to create a third-party stickerpack using the following parameters:\n\n## Parameters\n\n| Name                        | Description                                 |\n|-----------------------------|---------------------------------------------|\n| **`publisher`**             | **Required**.<br/>The name of the publisher of the third-party stickerpack.<br/>Type: String  |\n| **`name`**<br/>Type: String              | **Required**.<br/>The name of the stickerpack. |\n| **`ios_app_store_link`**<br/>Type: String              | **Optional**.<br/>The link to the stickerpack in the Apple iOS App Store. The link follows the format `https://itunes.apple.com/app/idXXXXXXXXX`. To get your App Store link, refer to the instructions at https://stackoverflow.com/questions/4137426/get-itunes-link-for-app-before-submitting. |\n| **`android_app_store_link`**<br/>Type: String              | **Optional**.<br/>The link to the stickerpack in the Google Play store. The link follows the format `https://play.google.com/store/apps/details?id=com.example` where `com.example` is your app's package name. |\n\n## Response\nA successful response returns `200 OK` and either `null` or `{}`."
							},
							"response": [
								{
									"name": "Create Third Party Stickerpacks",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"publisher\": \"<Your Publisher Name>\",\n    \"name\": \"<Your Sticker Pack Name>\",\n    \"ios_app_store_link\": \"<Valid iOS App Store Link>\",\n    \"android_app_store_link\": \"<Valid Android App Store Link>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/stickerpacks",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stickerpacks\": [\n        {\n            \"id\": \"sticker-pack-id\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Third Party Stickerpacks",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks"
									]
								},
								"description": "Use a **GET** request to the `/v1/stickerpacks/` endpoint to retrieve a third-party stickerpack."
							},
							"response": [
								{
									"name": "Get Third Party Stickerpacks",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stickerpacks\": [\n        {\n            \"id\": \"sticker-pack-id1\"\n        },\n        {\n            \"id\": \"sticker-pack-id2\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Third Party Stickerpack",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"publisher\": \"<Your Publisher Name>\",\n    \"name\": \"<Your Sticker Pack Name>\",\n    \"ios_app_store_link\": \"<Valid iOS App Store Link>\",\n    \"android_app_store_link\": \"<Valid Android App Store Link>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}"
									]
								},
								"description": "Send an **PATCH** API request to the `v1/stickerpacks/{{stickerpack-id}}` endpoint to update a third-party stickerpack using the following parameters:\n\n## Parameters\n\n| Name                        | Description                                 |\n|-----------------------------|---------------------------------------------|\n| **`publisher`**<br/>Type: String             | **Required**.<br/>The name of the publisher of the third-party stickerpack. |\n| **`name`**<br/>Type: String              | **Required**.<br/>The name of the stickerpack. |\n| **`ios_app_store_link`**<br/>Type: String              | **Optional**.<br/>The link to the stickerpack in the Apple iOS App Store. The link follows the format `https://itunes.apple.com/app/idXXXXXXXXX`. To get your App Store link, refer to the instructions at https://stackoverflow.com/questions/4137426/get-itunes-link-for-app-before-submitting. |\n| **`android_app_store_link`**<br/>Type: String              | **Optional**.<br/>The link to the stickerpack in the Google Play store. The link follows the format `https://play.google.com/store/apps/details?id=com.example` where `com.example` is your app's package name. |\n\n## Response\nA successful response returns `200 OK` and either `null` or `{}`."
							},
							"response": [
								{
									"name": "Update Third Party Stickerpack",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"publisher\": \"<Your Publisher Name>\",\n    \"name\": \"<Your Sticker Pack Name>\",\n    \"ios_app_store_link\": \"<Valid iOS App Store Link>\",\n    \"android_app_store_link\": \"<Valid Android App Store Link>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Third Party Stickerpack",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}"
									]
								},
								"description": "Send a **DELETE** request to the `v1/stickerpacks/{{stickerpack-id}}` endpoint to delete a stickerpack.\n\n## Response\nA successful response returns `200 OK` and either `null` or `{}`."
							},
							"response": [
								{
									"name": "Delete Third Party Stickerpack",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Third Party Stickerpack Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}"
									]
								},
								"description": "Send a **GET** request to `/v1/stickerpacks/{{stickerpack-id}}/stickers/{{sticker-index}}` endpoint to get third-party sticker info about a given sticker.\n\n## Response Parameters\n\n| Name                              | Description                                |\n|-----------------------------------|--------------------------------------------|\n| **`id`**                          | The ID for the sticker media.  |\n| **`emojis`**                      | An array of the emojis included with the stickerpack |\n| **`image_data_id`**               | The image data ID of the given third-party sticker. |"
							},
							"response": [
								{
									"name": "Get Third Party Stickerpack Info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": \n    {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create Third Party Stickers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image_data_id\" : \"<Sticker Image Media Id>\",\n\t\"emojis\": [\"🐥\", \"😃\"]\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}",
										"stickers"
									]
								}
							},
							"response": [
								{
									"name": "Create Third Party Stickers",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"image_data_id\": \"<Sticker Image Media Id>\",\n    \"emojis\": [\n        \"🐥\",\n        \"😃\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}",
												"stickers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stickers\": [\n        {\n            \"id\": \"b942a4d1-4e1d-4c56-8cfa-a848b8222061\",\n            \"emojis\": [\n                \"🐥\",\n                \"😃\"\n            ],\n            \"image_data_id\": \"sticker-image-media-id\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Third Party Stickers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}",
										"stickers"
									]
								},
								"description": "Use a **GET** request to the `v1/stickerpacks/{{stickerpack-id}}/stickers` to retrieve stickers from a given third-party stickerpack:"
							},
							"response": [
								{
									"name": "Get Third Party Stickers",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}",
												"stickers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stickers\": [\n        {\n            \"index\": \"sticker-index1\"\n        },\n        {\n            \"index\": \"sticker-index2\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Third Party Sticker",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image_data_id\": \"<Valid Image Media Id>\",\n    \"emojis\": [\n        \"🐥\",\n        \"😃\"\n    ]\n}"
								},
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}",
										"stickers",
										"{{Test-Sticker-Index}}"
									]
								}
							},
							"response": [
								{
									"name": "Update Third Party Sticker",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"image_data_id\": \"<Valid Image Media Id>\",\n    \"emojis\": [\n        \"🐥\",\n        \"😃\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}",
												"stickers",
												"{{Test-Sticker-Index}}"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stickers\": [\n        {\n            \"id\": \"cad2a4d1-4e1d-4c56-8cfa-a848b8222666\",\n            \"emojis\": [\n                \"🐥\",\n                \"😃\"\n            ],\n            \"image_data_id\": \"sticker-image-media-id\"\n        }\n    ],\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Third Party Sticker",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}",
										"stickers",
										"{{Test-Sticker-Index}}"
									]
								}
							},
							"response": [
								{
									"name": "Delete Third Party Sticker",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}",
												"stickers",
												"{{Test-Sticker-Index}}"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Third Party Sticker Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/{{Test-Sticker-Index}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stickerpacks",
										"{{Test-3P-Stickerpack-ID}}",
										"stickers",
										"{{Test-Sticker-Index}}"
									]
								},
								"description": "Use a **GET** request to the `/v1/stickerpacks/{{stickerpack-id}}` endpoint to retrieve information about a given third-party stickerpack."
							},
							"response": [
								{
									"name": "Get Third Party Sticker Info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stickerpacks/{{Test-3P-Stickerpack-ID}}/stickers/<your-sticker-index>",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stickerpacks",
												"{{Test-3P-Stickerpack-ID}}",
												"stickers",
												"<your-sticker-index>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						}
					],
					"description": "Use the `v1/stickerpacks` endpoint to manage both first-party and third-party stickerpacks and stickers.\n\nThe `stickerpack` endpoint has the following edges:\n\n| Name                                   | Description                        |\n|----------------------------------------|------------------------------------|\n| **`stickerpack-id`**                   | Use to retrieve, upload, or delete a specific stickerpack. |\n| **`sticker-pack-id/sticker`**                   | Use this endpoint to retrieve stickers and sticker information. Additionally, use this edge to create, update, and delete third-party stickers. |"
				},
				{
					"name": "Health",
					"item": [
						{
							"name": "Check Health",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/health",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"health"
									]
								},
								"description": "Send a **GET** call to the `/v1/health` endpoint to retrieve the health status of your WhatsApp Business API client.\n\n## Parameters\n\n| Name                               | Description                             |\n|------------------------------------|-----------------------------------------|\n| **`health`**<br/>Type: Object      | Contains the fields that describe the health of the WhatsApp Business API client.|\n| **`gateway_status`**<br/>Type: String | Status of the connection between the Coreapp and WhatsApp servers.<br/><br/>**Supported values:**<ul><li>`connected`, `connecting` — The health is good.</li><li>`uninitialized` — The application could be in the process of upgrading or initializing the database schema. Try again in a few minutes and contact [WhatsApp Support](https://developers.facebook.com/docs/whatsapp/support) if you continue to see this status.</li><li>`unregistered` — You need to register your WhatsApp Business API client. See the [Registration documentation](https://developers.facebook.com/docs/whatsapp/api/account) for more information.</li><li>`disconnected` — The Coreapp is not connected to the WhatsApp servers.</li></ul>|\n| **`role`**<br/>Type: String | Th role of the container in High Availability/Multiconnect setups. See the [Availability and Scaling documentation](https://developers.facebook.com/docs/whatsapp/availability-scaling) for more information on these setups.<br/><br/>**Supported values:** `primary_master`, `secondary_master`, `coreapp` |\n\n## Response\n\n### Single Instance\nThe response provides the status of the health of the gateway to the WhatsApp server. If the `Authorization` header is not present or invalid, a `401` error code is returned.\n\n### High Availability/Multiconnect\nIn High Availability mode, only one Coreapp is connected to the WhatsApp server, all other nodes including the primary Master have a **`gateway_status`** of `disconnected`. In Multiconnect mode with `X` shards, `X` Coreapps are connected to the WhatsApp server, and the primary Master connects to the WhatsApp server. To learn more about High Availability/Multiconnect mode, see [Availability and Scaling guide](https://developers.facebook.com/docs/whatsapp/availability-scaling)."
							},
							"response": [
								{
									"name": "Check Health Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/health",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"health\": {\n       \"gateway_status\": \"connected | connecting | disconnected | uninitialized | unregistered\"\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}\n"
								},
								{
									"name": "Check Health Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/health",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"health\": {\n      \"your-hostname1:your-container-id1\": {\n          \"gateway_status\": \"connected | connecting | disconnected | uninitialized | unregistered\",\n          \"role\": \"primary_master | secondary_master | coreapp\"\n      },\n      \"your-hostname2:your-container-id2\": {\n          \"gateway_status\": \"connected | connecting | disconnected | uninitialized | unregistered\",\n          \"role\": \"primary_master | secondary_master | coreapp\"\n      }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get App Stats",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stats/app",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"app"
									]
								},
								"description": "Send a **GET** call the `/v1/stats/app` endpoint to retrieve Coreapp stats in JSON format. Coreapp stats live in memory and can be queried at regular intervals if needed.\n\n## Response\nIf successful, your request returns `200 OK` and a message body containing an app object."
							},
							"response": [
								{
									"name": "Get App Stats Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/app",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n        \"app\": {\n            \"callback_queue_size\": {\n                \"data\": [\n                    {\n                        \"value\": 450\n                    }\n                ],\n                \"help\": \"Current callback queue size\",\n                \"type\": \"gauge\"\n            },\n            \"callback_requests_duration_ms_count\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"result\": \"success\",\n                            \"type\": \"inbound_message\"\n                        },\n                        \"value\": 2\n                    },\n                    {\n                        \"labels\": {\n                            \"result\": \"1\",\n                            \"type\": \"status_change\"\n                        },\n                        \"value\": 28\n                    }\n                ],\n                \"help\": \"Total number of callback requests\",\n                \"type\": \"counter\"\n            },\n            \"callback_requests_duration_ms_sum\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"result\": \"success\",\n                            \"type\": \"inbound_message\"\n                        },\n                        \"value\": 32\n                    },\n                    {\n                        \"labels\": {\n                            \"result\": \"1\",\n                            \"type\": \"status_change\"\n                        },\n                        \"value\": 451\n                    }\n                ],\n                \"help\": \"Total duration(ms) of callback requests\",\n                \"type\": \"counter\"\n            },\n            \"db_request_duration_us_count\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"db\": \"messageStore\",\n                            \"request\": \"commit\"\n                        },\n                        \"value\": 5\n                    },\n                    {\n                        \"labels\": {\n                            \"db\": \"_jobqueue-WhatsApp\",\n                            \"request\": \"prepare\"\n                        },\n                        \"value\": 10\n                    }\n                ],\n                \"help\": \"Total number of successful SQL queries\",\n                \"type\": \"counter\"\n            },\n            \"db_request_duration_us_sum\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"db\": \"messageStore\",\n                            \"request\": \"commit\"\n                        },\n                        \"value\": 14967\n                    },\n                    {\n                        \"labels\": {\n                            \"db\": \"_jobqueue-WhatsApp\",\n                            \"request\": \"prepare\"\n                        },\n                        \"value\": 4236\n                    }\n                ],\n                \"help\": \"Total duration(microseconds) of successful SQL queries\",\n                \"type\": \"counter\"\n            },\n            \"endpoint_requests\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"method\": \"contacts\",\n                            \"result\": \"ok\"\n                        },\n                        \"value\": 3864\n                    },\n                    {\n                        \"labels\": {\n                            \"method\": \"messaging\",\n                            \"result\": \"ok\"\n                        },\n                        \"value\": 3576\n                    },\n                    {\n                        \"labels\": {\n                            \"method\": \"messaging\",\n                            \"result\": \"1020\"\n                        },\n                        \"value\": 15\n                    },\n                    {\n                        \"labels\": {\n                            \"method\": \"control\",\n                            \"result\": \"ok\"\n                        },\n                        \"value\": 4169\n                    }\n                ],\n                \"help\": \"Total number of endpoint requests made\",\n                \"type\": \"counter\"\n            },\n            \"endpoint_requests_duration_ms_count\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"method\": \"app_stats\",\n                            \"result\": \"ok\"\n                        },\n                        \"value\": 1\n                    },\n                ],\n                \"help\": \"Total number of endpoint requests\",\n                \"type\": \"counter\"\n            },\n            \"endpoint_requests_duration_ms_sum\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"method\": \"app_stats\",\n                            \"result\": \"ok\"\n                        },\n                        \"value\": 2\n                    },\n                ],\n                \"help\": \"Total duration(ms) of endpoint requests\",\n                \"type\": \"counter\"\n            },\n            \"in_message_decoded\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"image\"\n                        },\n                        \"value\": 1\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"undefined\"\n                        },\n                        \"value\": 8\n                    }\n                ],\n                \"help\": \"Total number of incoming messages\",\n                \"type\": \"counter\"\n            },\n            \"in_message_from_server\": {\n                \"data\": [\n                    {\n                        \"value\": 9\n                    }\n                ],\n                \"help\": \"Total number of incoming encrypted messages from server\",\n                \"type\": \"counter\"\n            },\n            \"in_message_persisted\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"image\"\n                        },\n                        \"value\": 1\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"system\"\n                        },\n                        \"value\": 3350\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"undefined\"\n                        },\n                        \"value\": 8\n                    }\n                ],\n                \"help\": \"Total number of incoming messages cached in DB\",\n                \"type\": \"counter\"\n            },\n            \"in_messages_pending_processing\": {\n                \"data\": [\n                    {\n                        \"value\": 0\n                    }\n                ],\n                \"help\": \"Number of encrypted messages received yet to be processed\",\n                \"type\": \"gauge\"\n            },\n            \"internal_server_conn_duration_ms_count\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"result\": \"Connected\"\n                        },\n                        \"value\": 1\n                    }\n                ],\n                \"help\": \"Total number of internal server connection requests made\",\n                \"type\": \"counter\"\n            },\n            \"internal_server_conn_duration_ms_sum\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"result\": \"Connected\"\n                        },\n                        \"value\": 584\n                    }\n                ],\n                \"help\": \"Total time spent in connecting to internal server in ms\",\n                \"type\": \"counter\"\n            },\n            \"internal_server_requests_duration_ms_count\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"operation\": \"FieldStatsResult\",\n                            \"result\": \"ok\"\n                        },\n                        \"value\": 2\n                    },\n                    {\n                        \"labels\": {\n                            \"operation\": \"GetPrivacyListResult\",\n                            \"result\": \"404\"\n                        },\n                        \"value\": 1\n                    }\n                ],\n                \"help\": \"Number of internal server requests\",\n                \"type\": \"counter\"\n            },\n            \"internal_server_requests_duration_ms_sum\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"operation\": \"FieldStatsResult\",\n                            \"result\": \"ok\"\n                        },\n                        \"value\": 158\n                    },\n                    {\n                        \"labels\": {\n                            \"operation\": \"GetPrivacyListResult\",\n                            \"result\": \"404\"\n                        },\n                        \"value\": 347\n                    }\n                ],\n                \"help\": \"Duration of internal server requests\",\n                \"type\": \"counter\"\n            },\n            \"media_downloads\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"result\": \"unknown\",\n                            \"type\": \"image\"\n                        },\n                        \"value\": 1\n                    }\n                ],\n                \"help\": \"Total number of media messages downloaded from server\",\n                \"type\": \"counter\"\n            },\n            \"media_uploads\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"result\": \"ok\",\n                            \"type\": \"audio\"\n                        },\n                        \"value\": 95\n                    },\n                    {\n                        \"labels\": {\n                            \"result\": \"ok\",\n                            \"type\": \"document\"\n                        },\n                        \"value\": 145\n                    },\n                    {\n                        \"labels\": {\n                            \"result\": \"ok\",\n                            \"type\": \"image\"\n                        },\n                        \"value\": 81\n                    }\n                ],\n                \"help\": \"Total number of media messages uploaded to server\",\n                \"type\": \"counter\"\n            },\n            \"out_message_persisted\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"document\"\n                        },\n                        \"value\": 145\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"audio\"\n                        },\n                        \"value\": 95\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"image\"\n                        },\n                        \"value\": 81\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"undefined\"\n                        },\n                        \"value\": 79\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"hsm\"\n                        },\n                        \"value\": 3176\n                    }\n                ],\n                \"help\": \"Total number of outgoing messages cached in DB\",\n                \"type\": \"counter\"\n            },\n            \"out_message_sent_duration_ms_count\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"retry\": \"0\",\n                            \"type\": \"hsm\"\n                        },\n                        \"value\": 3576\n                    }\n                ],\n                \"help\": \"Total number of messages sent to server successfully\",\n                \"type\": \"counter\"\n            },\n            \"out_message_sent_duration_ms_sum\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"retry\": \"0\",\n                            \"type\": \"hsm\"\n                        },\n                        \"value\": 536433\n                    }\n                ],\n                \"help\": \"Total number of durations used to send messages to server\",\n                \"type\": \"counter\"\n            },\n            \"out_message_status\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"status\": \"delivered\"\n                        },\n                        \"value\": 1034\n                    },\n                    {\n                        \"labels\": {\n                            \"status\": \"sent\"\n                        },\n                        \"value\": 3576\n                    },\n                    {\n                        \"labels\": {\n                            \"status\": \"read\"\n                        },\n                        \"value\": 1034\n                    }\n                ],\n                \"help\": \"Total number of outgoing messages of a particular status\",\n                \"type\": \"counter\"\n            },\n            \"pending_callbacks\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"inbound_message\"\n                        },\n                        \"value\": 8\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"status_change\"\n                        },\n                        \"value\": 442\n                    }\n                ],\n                \"help\": \"Current number of pending callbacks in the queue\",\n                \"type\": \"gauge\"\n            },\n            \"pending_messages\": {\n                \"data\": [\n                    {\n                        \"value\": 0\n                    }\n                ],\n                \"help\": \"Current number of pending messages in the queue\",\n                \"type\": \"gauge\"\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								},
								{
									"name": "Get App Stats High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/app",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n        \"app\": {\n            \"your-hostname1:your-container-id1\": {\n                \"callback_queue_size\": {\n                    \"data\": [\n                        {\n                            \"value\": 450\n                        }\n                    ],\n                    \"help\": \"Current callback queue size\",\n                    \"type\": \"gauge\"\n                }\n            },\n            \"your-hostname2:your-container-id2\": {\n                \"callback_queue_size\": {\n                    \"data\": [\n                        {\n                            \"value\": 10\n                        }\n                    ],\n                    \"help\": \"Current callback queue size\",\n                    \"type\": \"gauge\"\n                }\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get App Internal Stats",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stats/app/internal",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"app",
										"internal"
									]
								}
							},
							"response": [
								{
									"name": "Get App Internal Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/app/internal",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"app",
												"internal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n        \"app\": {\n            \"internal\": {\n                \"jobmanager_job_run\": {\n                    \"data\": [\n                        {\n                            \"labels\": {\n                                \"result\": \"Blocked\",\n                                \"type\": \"send_message\"\n                            },\n                            \"value\": 2\n                        },\n                        {\n                            \"labels\": {\n                                \"result\": \"Success\",\n                                \"type\": \"send_message\"\n                            },\n                            \"value\": 2\n                        }\n                    ],\n                    \"help\": \"Total number of jobs ran in the job manager\",\n                    \"type\": \"counter\"\n                },\n                \"jobmanager_unblocked_job_queue_size\": {\n                    \"data\": [\n                        {\n                            \"value\": 0\n                        }\n                    ],\n                    \"help\": \"Current number of waiting jobs in the unblocked job queue\",\n                    \"type\": \"gauge\"\n                },\n                \"jobmanager_waiting_jobs\": {\n                    \"data\": [\n                        {\n                            \"labels\": {\n                                \"type\": \"send_message\"\n                            },\n                            \"value\": 0\n                        }\n                    ],\n                    \"help\": \"Current number of waiting jobs in the job queue\",\n                    \"type\": \"gauge\"\n                },\n                \"jobmanger_job_queue_size\": {\n                    \"data\": [\n                        {\n                            \"value\": 0\n                        }\n                    ],\n                    \"help\": \"Current total number of waiting jobs in the job queue\",\n                    \"type\": \"gauge\"\n                }\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get DB Stats",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stats/db",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"db"
									]
								},
								"description": "Send a **GET** call to the `/v1/stats/db` endpoint to retrieve database stats in JSON format.\n\nChecking the database stats can take a long time and affect app performance if your database is large. It is recommended polling this information only when needed.\n\n## Response\n### Single Instance\nIf successful, your request returns `200 OK` and a message body containing an **`db`** object.\n\n### High Availability and Multiconnect\nFor high availability/multiconnect, only the primary Master returns **`stats`**, others return `{}`:"
							},
							"response": [
								{
									"name": "Get DB Stats Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n        \"db\": {\n            \"db_contacts\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"non_whatsapp_user\"\n                        },\n                        \"value\": 2\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"whatsapp_user\"\n                        },\n                        \"value\": 5\n                    }\n                ],\n                \"help\": \"Current number of contacts in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_message_receipts\": {\n                \"data\": [\n                    {\n                        \"value\": 6\n                    }\n                ],\n                \"help\": \"Current number of message receipts in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_messages\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"undefined\"\n                        },\n                        \"value\": 2\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"system\"\n                        },\n                        \"value\": 1\n                    }\n                ],\n                \"help\": \"Current number of messages in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_pending_callbacks\": {\n                \"data\": [\n                    {\n                        \"value\": 0\n                    }\n                ],\n                \"help\": \"Current number of pending callbacks in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_pending_messages\": {\n                \"data\": [\n                    {\n                        \"value\": 0\n                    }\n                ],\n                \"help\": \"Current number of pending messages in DB\",\n                \"type\": \"gauge\"\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n} "
								},
								{
									"name": "Get DB Stats High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n       \"db\": {\n          \"your-hostname1:your-container-id1\": {},\n          \"your-primary-master:your-container-id2\": {\n             \"db_contacts\": {\n               \"data\": [ {\n                 \"labels\": {\n                   \"type\": \"whatsapp_user\"\n                 },\n                 \"value\": 4\n               } ],\n               \"help\": \"Current number of contacts in DB\",\n               \"type\": \"gauge\"\n             },\n\n             \"db_message_receipts\": { ... },\n\n             \"db_messages\": { ... },\n           \n             \"db_pending_callbacks\": { ... },\n           \n             \"db_pending_messages\": { ... }\n          },\n         \"your-hostname3:your-container-id3\": {},\n         ...\n       }   \n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get DB Stats Prometheus",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/stats/db?format=prometheus",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"db"
									],
									"query": [
										{
											"key": "format",
											"value": "prometheus"
										}
									]
								},
								"description": "Send a **GET** call to the `/v1/stats/db` endpoint with **`format`** = `prometheus` to retrieve database stats in Prometheus format.\n\nChecking the database stats can take a long time and affect app performance if your database is large. It is recommended polling this information only when needed.\n\n## Returned Fields\n\n| Name                                      | Description                        |\n|-------------------------------------------|------------------------------------|\n| **`db_contacts`**<br/>Type: Object | Current number of contacts in the database. |\n| **`db_message_receipts`**<br/>Type: Object | Current number of message receipts in the database.|\n| **`db_messages`**<br/>Type: Object | Current number of messages in the database.|\n| **`db_pending_callbacks`**<br/>Type: Object | Current number of pending callbacks in the database. |\n| **`db_pending_messages`**<br/>Type: Object | Current number of pending messages in the database. |"
							},
							"response": [
								{
									"name": "Get DB Stats Prometheus Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db?format=prometheus",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											],
											"query": [
												{
													"key": "format",
													"value": "prometheus"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "# HELP db_contacts Current number of contacts in DB\n# TYPE db_contacts gauge\ndb_contacts{type=\"whatsapp_user\"} 3\n# HELP db_message_receipts Current number of message receipts in DB\n# TYPE db_message_receipts gauge\ndb_message_receipts 0"
								},
								{
									"name": "Get DB Stats Prometheus High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db?format=prometheus",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											],
											"query": [
												{
													"key": "format",
													"value": "prometheus"
												}
											]
										}
									},
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "# HELP db_contacts Current number of contacts in DB\n# TYPE db_contacts gauge\ndb_contacts{node=\"your-primary-master:your-container-id\", type=\"whatsapp_user\"} 3\n# HELP db_message_receipts Current number of message receipts in DB\n# TYPE db_message_receipts gauge\ndb_message_receipts{node=\"your-primary-master:your-container-id\"} 0"
								}
							]
						},
						{
							"name": "Get DB Internal Stats",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stats/db/internal",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"db",
										"internal"
									]
								}
							},
							"response": [
								{
									"name": "Get DB Internal Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db/internal",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db",
												"internal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n        \"db\": {\n            \"internal\": {\n                \"db_table_rows\": {\n                    \"data\": [\n                        {\n                            \"labels\": {\n                                \"database\": \"contactStore\",\n                                \"table\": \"pim_contacts\"\n                            },\n                            \"value\": 22\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"sender_keys\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"configs\"\n                            },\n                            \"value\": 1\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"messages_pending_actions\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"backup_messages_1603317561076\"\n                            },\n                            \"value\": 15\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"call_log\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"messages\"\n                            },\n                            \"value\": 2\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"identities\"\n                            },\n                            \"value\": 37\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"locks\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"_jobqueue-WhatsApp\",\n                                \"table\": \"queue\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"group_participants_history\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"messages_receipt_log\"\n                            },\n                            \"value\": 8\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"message_base_key\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"stickers\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"contactStore\",\n                                \"table\": \"wa_phones\"\n                            },\n                            \"value\": 39\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"backup_media_items_1603731458374\"\n                            },\n                            \"value\": 34\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"prekeys\"\n                            },\n                            \"value\": 783\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"contactStore\",\n                                \"table\": \"configs\"\n                            },\n                            \"value\": 1\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"filename_offsets\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"sticker_packs\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"callbackStore\",\n                                \"table\": \"configs\"\n                            },\n                            \"value\": 1\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"chats\"\n                            },\n                            \"value\": 36\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"group_participants\"\n                            },\n                            \"value\": 4\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"sessions\"\n                            },\n                            \"value\": 36\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"contactStore\",\n                                \"table\": \"wa_contacts\"\n                            },\n                            \"value\": 59\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"sender_key_distribution_status\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"media_items\"\n                            },\n                            \"value\": 59\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"messageStore\",\n                                \"table\": \"configs\"\n                            },\n                            \"value\": 1\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"callbackStore\",\n                                \"table\": \"queue\"\n                            },\n                            \"value\": 0\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"axolotlStore::0x5633afb55c30\",\n                                \"table\": \"signed_prekeys\"\n                            },\n                            \"value\": 5\n                        },\n                        {\n                            \"labels\": {\n                                \"database\": \"_jobqueue-WhatsApp\",\n                                \"table\": \"configs\"\n                            },\n                            \"value\": 1\n                        }\n                    ],\n                    \"help\": \"Current number of rows in the database tables\",\n                    \"type\": \"gauge\"\n                }\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get Support Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/support",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"support"
									]
								},
								"description": "Make a **GET** request to the `/v1/support` endpoint to retrieve information that the Support team can use to help with your issue.\n\n## Parameters\n\n### socket_conn\n\nThe **`socket_conn`** field provides the current state of the connection to the WhatsApp server.\n\n| Name\t                           | Description                       |\n|----------------------------------|-----------------------------------|\n| **`DN`**    | Disconnected from WhatsApp server. |\n| **`UP`**    | Connected to WhatsApp server.|\n| **`SC`**    | In the process of connecting to WhatsApp server. |\n| **`UP receiving offline`**    | In the process of connecting to WhatsApp server and receiving offline messages from server. |\n| **`UNK`**    | Connection state is unknown.|\n\n### shards\n* For High Availability, only one Coreapp owns both the control shard (`-1`) and the normal shard (`0`). Its shards field is `[[-1, -1], [0, 0]]`, while other nodes have a shards field of `[]`.\n* For Multiconnect, the primary Master owns the control shard (`-1`), and its shards field are `[[-1, -1]]`. Coreapps that own shards have a shards field of `[[owned-shard-id, owned shard id]]`. Currently, one Coreapp can only own 1 shard at the same time.\n\n### role\n| Name\t                           | Description                       |\n|----------------------------------|-----------------------------------|\n| **`role`**   | The role of the container in High Availability/Multiconnect setups.<br/><br/>**Values:** primary_master, secondary_master, coreapp |\n\n## Response\nA successful response includes data about your WhatsApp Business API client. The fields in the response may vary based on your specific installation."
							},
							"response": [
								{
									"name": "Get Support Info Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/support",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"support"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"support\": {\n        \"context\": \"healthcheck\", # context of the API\n        \"db_engine\": \"MYSQL\"\n        \"db_info\": [ database-driver-version\n        ],\n        \"debug_info\": \"business-phone-number\", #phone number if registered, otherwise, unregistered\n        \"description\": \"whatsapp-build-version\",\n        \"device_iso8601\": \"current-timestamp\",\n        \"e2e\": { # encryption debug info\n            \"identity_timestamp\": \"id-timestamp\",\n            \"registration_id\": registration-id\n        },\n        \"env\": [ client-env-variables\n        ],\n        \"expire_timestamp\": \"2018-09-27T14:26:07\", # app build version expires timestamp \n        \"free_space_data\": 9223372036853727000, # bytes available on the data directory  \n        \"free_space_logs\": 14269902848, # bytes available on the log directory\n        \"free_space_media_incoming\": 9223372036853727000, # bytes available on the media incoming directory\n        \"free_space_media_outgoing\": 9223372036853727000, # bytes available on the media outgoing directory\n        \"lc\": \"en\", # lowercase, two-letter ISO 639 language code, ZZ if code is unknown\n        \"lg\": \"US\", # uppercase, two or three-letter ISO 3166 country code, ZZ if code is unknown\n        \"multi_connect\": false, # specifies whether current client is multiconnect enabled \n        \"os_name\": \"ubuntu-x86_64\", # operating system name \n        \"os_version\": \"16.04\", # operating system version\n\n        \"schema\": { # database schema versions\n            \"axolotl\": 1,\n            \"callback\": 2,\n            \"cluster\": 3,\n            \"config\": 4,\n            \"contact\": 5,\n            \"jobqueue\": 6,\n            \"message\": 7\n        },\n        \"socket_conn\": \"UP | DN\" | \"SC\" | \"UP receiving offline\" | \"UNK\", # see options below\n        \"version\": \"build-version\"\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								},
								{
									"name": "Get Support Info High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/support",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"support"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"support\": {\n        \"your-hostname1:your-container-id1\": {\n          \"multi_connect\" : true,\n          \"role\": \"primary_master | secondary_master | coreapp\",\n          \"shards\": [ [your-owned-shard-id, your-owned-shard-id], ...],\n          \"context\": \"healthcheck\",\n          \"db_engine\": \"MYSQL | PGSQL\",\n          \"db_info\": [ ... ],\n          \"debug_info\": \"enterprise phone number\",\n          \"description\": \"build information\",\n          ...\n        },\n        \"your-hostname2:your-container-id2\": {\n          \"multi_connect\" : true,\n          \"role\": \"primary_master | secondary_master | coreapp\",\n          \"shards\": [ [your-owned-shard-id, your-owned-shard-id], ...],\n          \"context\": \"healthcheck\",\n          \"db_engine\": \"MYSQL | PGSQL\",\n          \"db_info\": [ ... ],\n          \"debug_info\": \"enterprise phone number\",\n          \"description\": \"build information\",\n          ...\n        }\n    }\n    {\n    \"support\": {\n        \"context\": \"healthcheck\", # context of the API\n        \"db_engine\": \"MYSQL\"\n        \"db_info\": [ database-driver-version\n        ],\n        \"debug_info\": \"business-phone-number\", #phone number if registered, otherwise, unregistered\n        \"description\": \"whatsapp-build-version\",\n        \"device_iso8601\": \"current-timestamp\",\n        \"e2e\": { # encryption debug info\n            \"identity_timestamp\": \"id-timestamp\",\n            \"registration_id\": registration-id\n        },\n        \"env\": [ client-env-variables\n        ],\n        \"expire_timestamp\": \"2018-09-27T14:26:07\", # app build version expires timestamp \n        \"free_space_data\": 9223372036853727000, # bytes available on the data directory  \n        \"free_space_logs\": 14269902848, # bytes available on the log directory\n        \"free_space_media_incoming\": 9223372036853727000, # bytes available on the media incoming directory\n        \"free_space_media_outgoing\": 9223372036853727000, # bytes available on the media outgoing directory\n        \"lc\": \"en\", # lowercase, two-letter ISO 639 language code, ZZ if code is unknown\n        \"lg\": \"US\", # uppercase, two or three-letter ISO 3166 country code, ZZ if code is unknown\n        \"multi_connect\": false, # specifies whether current client is multiconnect enabled \n        \"os_name\": \"ubuntu-x86_64\", # operating system name \n        \"os_version\": \"16.04\", # operating system version\n\n        \"schema\": { # database schema versions\n            \"axolotl\": 1,\n            \"callback\": 2,\n            \"cluster\": 3,\n            \"config\": 4,\n            \"contact\": 5,\n            \"jobqueue\": 6,\n            \"message\": 7\n        },\n        \"socket_conn\": \"UP | DN\" | \"SC\" | \"UP receiving offline\" | \"UNK\", # see options below\n        \"version\": \"build-version\"\n    }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						}
					],
					"description": "Use the `/v1/health` endpoint to check the health status of your WhatsApp Business API client. The health endpoint supports Bearer token and API keys authentication.\n\n## API Keys\nIf you wish to monitor the `health`, `metrics`, and `stats` endpoints from an orchestrator, Bearer tokens are not the best option for ongoing checks as they expire every 7 days. To mediate this, you can use an API key, which can be set using the `WA_API_KEY` environment variable in the `waweb` environment section in the `.yml` file of your installation setup.\n\n```\nservices:\n...\n  waweb:\n  ...\n    environment:\n    ...\n    WA_API_KEY: your-api-key-token\n```\n\nThe API key you set must have a minimum of 12 characters and a maximum of 128 characters. The Webapp must be restarted whenever you change the API key.\n\n### Contraints\n\nThe API key you set must have a minimum of 12 characters and a maximum of 128 characters."
				},
				{
					"name": "Certificates",
					"item": [
						{
							"name": "Upload Certificate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									},
									{
										"key": "Content-Type",
										"value": "text/plain"
									},
									{
										"key": "Content-Length",
										"value": "<content-size>"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{URL}}/v1/certificates/external",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"certificates",
										"external"
									]
								},
								"description": "Make **POST** calls to upload a CA certificate. Make sure that the uploaded certificate contains the following sections in one file and in the same order as displayed here:\n\n* Private key\n* Certificate\n* One or more intermediate CA certificates — The WhatsApp Business API client needs at least one intermediate CA certificate, otherwise the upload fails.\n\nIf a certificate already exists, it is overwritten. You must restart the web server, that is, all Webapp container instances, once the certificate is uploaded.\n\nYou should be extremely cautious to only update the certificate with a valid (i.e., proper & correct) certificate. Otherwise, the web server fails to restart (as the API endpoint is down) and requires manual intervention to recover from the situation.\n\n## Response\nIf successful the request returns `null`."
							},
							"response": [
								{
									"name": "Upload Certificate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											},
											{
												"key": "Content-Type",
												"value": "text/plain"
											},
											{
												"key": "Content-Length",
												"value": "<content-size>"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{URL}}/v1/certificates/external",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"certificates",
												"external"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Download CA Certificate",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/certificates/external/ca",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"certificates",
										"external",
										"ca"
									]
								},
								"description": "Make a **GET** request to the `/v1/certificates/external/ca` endpoint to retrieve a CA certificate stored in the WhatsApp Business API client.\n\n## Response \nIf the CA certificate is found, then a `200 OK` response code is returned with either a `{}` or `null` in the body. If a CA certificate is not found, then a `404` response code is returned with no body."
							},
							"response": [
								{
									"name": "Download CA Certificate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/certificates/external/ca",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"certificates",
												"external",
												"ca"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "Content-Type: text/plain\nContent-Length: content-size\n\ncertificate"
								}
							]
						},
						{
							"name": "Upload Webhook CA Certificate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									},
									{
										"key": "Content-Type",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{URL}}/v1/certificates/webhooks/ca",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"certificates",
										"webhooks",
										"ca"
									]
								},
								"description": "If the Webhook URL as configured in the application settings uses an internal CA cert, you need to upload it to the WhatsApp Business API client so that it can be supported by the WhatsApp Business API. If you are using an externally known CA cert, you can safely skip this section.\n\nYou can generate a self-signed certificate in the PEM format by running:\n\n```\nopenssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem\n\n```\n\nThe certificate file needs to be in the PEM format. If you have more than one certificate to upload, those certs should first be combined into a single file by concatenating them:\n```\ncat cert1.pem cert2.pem > bundle.pem\n```\n\nIf a certificate already exists, it is overwritten. All Coreapp nodes must be restarted after uploading the certificate for the changes to take effect.\n\n## Response\nIf the request is successful, it returns `null` or `{}`."
							},
							"response": [
								{
									"name": "Upload Webhook CA Certificate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											},
											{
												"key": "Content-Type",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{URL}}/v1/certificates/webhooks/ca",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"certificates",
												"webhooks",
												"ca"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Download Webhook CA Certificate",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/certificates/webhooks/ca",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"certificates",
										"webhooks",
										"ca"
									]
								},
								"description": "Use the `/v1/certificates/webhooks/ca` endpoint to manage your certificates if the Webhook URL as configured in the application settings uses an internal CA certificate."
							},
							"response": [
								{
									"name": "Download Webhook CA Certificate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/certificates/webhooks/ca",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"certificates",
												"webhooks",
												"ca"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "Content-Type: text/plain\nContent-Length: content-size\n\ncertificate"
								}
							]
						},
						{
							"name": "Delete Webhook CA Certificate",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{URL}}/v1/certificates/webhooks/ca",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"certificates",
										"webhooks",
										"ca"
									]
								},
								"description": "Send a **DELETE** request to the `/v1/certificates/webhooks/ca` endpoint to delete your CA certificate.\n\n## Response \nIf the request is successful, it returns `null` or `{}`."
							},
							"response": [
								{
									"name": "Delete Webhook CA Certificate",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{URL}}/v1/certificates/webhooks/ca",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"certificates",
												"webhooks",
												"ca"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						}
					],
					"description": "Use the `certificates` endpoint to maintain your Certification Authority (CA) certificates for [SSL configuration](https://developers.facebook.com/docs/whatsapp/guides/security#ssl-configuration) of both the WhatsApp Business API client and Webhooks.\n\nBy default, the WhatsApp Business API uses a self-signed SSL certificate for HTTPS traffic. If you wish to use a CA cert, you need to [upload the certificate](https://developers.facebook.com/docs/whatsapp/api/certificates/external#uploading) to the WhatsApp Business API client.\n\n> **Do not make calls directly to the `/v1/certificates` endpoint. Check which edge is better for you and follow the procedures of that edge.**\n\n> **You must use the `admin` account to upload and delete all certificates or to retrieve a Webhook certificate.**\n\n## Edges\n\nThe following edges are connected to this endpoint:\n\n| Edge\t             | Description                                   |\n|--------------------|-----------------------------------------------|\n| **`/external`**    | Use this edge to manage CA certificates.      |\n| **`/webhooks`**    | Use if your configured Webhook URL uses an internal CA certificate.|"
				},
				{
					"name": "Services",
					"item": [
						{
							"name": "Delete Messages From Database",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/v1/services/message/gc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"services",
										"message",
										"gc"
									]
								},
								"description": "Use the **PUT** request to the `/v1/services/message/gc` endpoint to delete messages from the database associated with your WhatsApp Business API client.\n\n## Response\n\n### Webhook notifications\nSince the API request works asynchronously, once the garbage collection on the **`messages`** table is complete, the WhatsApp Business API client will post a notification to the callback server in the following format.\n\n**Note:**\n\n* For Multiconnect deployments, there will one notification posted per Coreapp.\n* The node field in the notification is optional and omitted for single instances.\n\n#### Single instance\n```\nAccount ID:  None\nRequest ID:  f1b61336390f46d8965888eaa6e8800b\n10.254.254.254 - - [14/Jul/2020 13:01:15] \"POST / HTTP/1.1\" 200 -\n{\n    \"services\": [{\n        \"message\": {\n            \"gc\": {\n                \"messages_deleted\": 5,\n                \"status\": \"complete\"\n            }\n        }\n    }]\n}\n```\n\n#### Multiconnect\n```\nAccount ID:  None\nRequest ID:  857d9be5438a4eb6ad795cf58ac7a3d2\n10.254.254.254 - - [14/Jul/2020 10:26:34] \"POST / HTTP/1.1\" 200 -\n{\n    \"services\": [{\n        \"message\": {\n            \"gc\": {\n                \"messages_deleted\": 11,\n                \"node\": \"wacore2:9dfe77618dba\",\n                \"status\": \"complete\"\n            }\n        }\n    }]\n}\n\nAccount ID:  None\nRequest ID:  857d9be5438a4eb6ad795cf58ac7a3d2\n10.254.254.254 - - [14/Jul/2020 10:26:34] \"POST / HTTP/1.1\" 200 -\n{\n    \"services\": [{\n        \"message\": {\n            \"gc\": {\n                \"messages_deleted\": 5,\n                \"node\": \"wacore3:a9dcc716fd6e\",\n                \"status\": \"complete\"\n            }\n        }\n    }]\n}\n```\n\n### Errors\n#### Errors Returned in Response\nIf the API request fails to initiate garbage collection, an error will be returned in the HTTP response.\n\n##### Single Instance\n```\n{\n    \"meta\": {\n        \"version\": \"v2.29.1\",\n        \"api_status\": \"stable\"\n    },\n    \"errors\": [{\n        \"code\": 1014,\n        \"title\": \"Internal error\",\n        \"details\": \"Connection timed out. Please check if wacore is running: wacore:6252\"\n    }]\n}\n```\n\n##### Multiconnect\n```\n{\n    \"services\": {\n        \"message\": {\n            \"gc\": {\n                \"wacore1\": {\n                    \"status\": \"processing\"\n                },\n                \"wacore2\": {\n                    \"errors\": [{\n                        \"code\": 1014,\n                        \"title\": \"Internal error\",\n                        \"details\": \"php_network_getaddresses: getaddrinfo failed: Name or service not known. Please check if wacore is running: wacore2:6252\"\n                    }]\n                }\n            }\n        }\n    },\n    \"meta\": {\n        \"version\": \"v2.29.1\",\n        \"api_status\": \"stable\"\n    }\n}\n```\n\n### Completion Failure\n\nIf the garbage collection fails to complete, an error will be returned in the Webhook notification.\n\n```\nAccount ID:  None\nRequest ID:  192953cb41a547d0ab19bfde59bff010\n10.254.254.254 - - [13/Jul/2020 10:07:51] \"POST / HTTP/1.1\" 200 -\n{\n    \"services\": [{\n        \"message\": {\n            \"gc\": {\n                \"messages_deleted\": 0,\n                \"errors\": [{\n                    \"code\" : 1014,\n                    \"details\" : \"Failed to fetch processed messages to delete\",\n                }],\n            \"status\": \"failed\"\n            }\n        }\n    }]\n}\n```"
							},
							"response": [
								{
									"name": "Delete Messages From Database Single Instance",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/services/message/gc",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"services",
												"message",
												"gc"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"services\": {\n        \"message\": {\n            \"gc\": {\n                \"status\": \"processing\"\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								},
								{
									"name": "Delete Messages From Multiconnect",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/services/message/gc",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"services",
												"message",
												"gc"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"services\": {\n        \"message\": {\n            \"gc\": {\n                \"wacore2:9dfe77618dba\": {\n                    \"status\": \"processing\"\n                },\n                \"wacore3:a9dcc716fd6e\": {\n                    \"status\": \"processing\"\n                }\n            }\n        }\n    },\n    \"meta\": {\n        \"version\": \"v2.45.1\",\n        \"api_status\": \"stable\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Media",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/v1/services/media/gc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"services",
										"media",
										"gc"
									]
								},
								"description": "Use the **PUT** request to the `/v1/services/media/gc` endpoint to delete media from the database and media storage associated with your WhatsApp Business API client.\n## Response\n### Webhook notifications\nSince the API request works asynchronously, once the garbage collection on the **`media`** table is complete, the WhatsApp Business API client will post a notification to the callback server in the following format.\n```\nAccount ID:  None\nRequest ID:  f1b61336390f46d8965888eaa6e8800b\n10.254.254.254 - - [14/Jul/2020 13:01:15] \"POST / HTTP/1.1\" 200 -\n{\n    \"services\": [{\n        \"media\": {\n            \"gc\": {\n                \"items_deleted\": 5,\n                \"status\": \"complete\"\n            }\n        }\n    }]\n}\n ```\n### Errors\nIf the API request fails to initiate garbage collection, an error will be returned in the HTTP response.\n```\n{\n    \"meta\": {\n        \"version\": \"v2.49.1\",\n        \"api_status\": \"stable\"\n    },\n    \"errors\": [{\n        \"code\": 1014,\n        \"title\": \"Internal error\",\n        \"details\": \"Connection timed out. Please check if wacore is running: wacore:6252\"\n    }]\n}\n ```\n### Completion Failure\nIf the garbage collection fails to complete, an error will be returned in the Webhook notification.\n```\nAccount ID:  None\nRequest ID:  192953cb41a547d0ab19bfde59bff010\n10.254.254.254 - - [13/Jul/2020 10:07:51] \"POST / HTTP/1.1\" 200 -\n{\n    \"services\": [{\n        \"media\": {\n            \"gc\": {\n                \"items_deleted\": 0,\n                \"errors\": [{\n                    \"code\" : 1014,\n                    \"details\" : \"Failed to fetch media to delete\",\n                }],\n            \"status\": \"failed\"\n            }\n        }\n    }]\n}\n ```"
							},
							"response": [
								{
									"name": "Delete Media",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{URL}}/v1/services/message/gc",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"services",
												"message",
												"gc"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"services\": {\n        \"media\": {\n            \"gc\": {\n                \"status\": \"processing\"\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.49.1\"\n    }\n}"
								}
							]
						}
					],
					"description": "The `/v1/services/message/gc` endpoint provides a way for businesses to delete messages from the database associated with their WhatsApp Business API client.\n\nIt is recommended you run this API request multiple times on larger databases (i.e., databases with a messages table containing more than 10 million rows) to ensure the callbacks returns a `complete` status and no errors."
				},
				{
					"name": "Metrics And Statistics",
					"item": [
						{
							"name": "Metrics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/metrics",
									"host": [
										"{{URL}}"
									],
									"path": [
										"metrics"
									]
								},
								"description": "Returns metrics for the Webapp"
							},
							"response": [
								{
									"name": "Get Metrics JSON",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/metrics",
											"host": [
												"{{URL}}"
											],
											"path": [
												"metrics"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"metrics\": {\n        \"web_uptime\": {\n            \"type\": \"gauge\",\n            \"help\": \"Number of seconds since web server has started\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 348842\n                }\n            ]\n        },\n        \"web_connections\": {\n            \"type\": \"counter\",\n            \"help\": \"Total number of connections accepted\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 23781\n                }\n            ]\n        },\n        \"web_pending_connections\": {\n            \"type\": \"gauge\",\n            \"help\": \"Current number of pending connections in the queue\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 0\n                }\n            ]\n        },\n        \"web_max_pending_connections\": {\n            \"type\": \"gauge\",\n            \"help\": \"Maximum number of pending connections in the queue\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 10\n                }\n            ]\n        },\n        \"web_queue_len\": {\n            \"type\": \"gauge\",\n            \"help\": \"Size of queue for pending connections\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 128\n                }\n            ]\n        },\n        \"web_idle_processes\": {\n            \"type\": \"gauge\",\n            \"help\": \"Current number of idle processes\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 10\n                }\n            ]\n        },\n        \"web_total_processes\": {\n            \"type\": \"gauge\",\n            \"help\": \"Total process limit\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 12\n                }\n            ]\n        },\n        \"web_process_limit_hit\": {\n            \"type\": \"counter\",\n            \"help\": \"Total number of times reached process limit\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 0\n                }\n            ]\n        },\n        \"web_handled_requests\": {\n            \"type\": \"counter\",\n            \"help\": \"Total number of requests handled\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 29841\n                }\n            ]\n        },\n        \"web_out_kbytes\": {\n            \"type\": \"counter\",\n            \"help\": \"Total outgoing traffic in kbytes\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\"\n                    },\n                    \"value\": 115529\n                }\n            ]\n        },\n        \"web_requests\": {\n            \"type\": \"gauge\",\n            \"help\": \"Number of ongoing requests\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"state\": \"read\"\n                    },\n                    \"value\": 1\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"state\": \"handle-request\"\n                    },\n                    \"value\": 2\n                },\n            ]\n        },\n        \"api_requests_duration_ms_sum\": {\n            \"type\": \"counter\",\n            \"help\": \"Total number of durations of API requests\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"result\": \"200\",\n                        \"method\": \"GET_v1_groups\"\n                    },\n                    \"value\": 753\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"result\": \"200\",\n                        \"method\": \"POST_v1_settings_backup\"\n                    },\n                    \"value\": 1255\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"result\": \"200\",\n                        \"method\": \"PATCH_v1_settings_application\"\n                    },\n                    \"value\": 491\n                },\n                ...\n            ]\n        },\n        \"api_requests_duration_ms_count\": {\n            \"type\": \"counter\",\n            \"help\": \"Total number of API requests\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"result\": \"401\",\n                        \"method\": \"GET_v1_settings_application\"\n                    },\n                    \"value\": 30\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"result\": \"200\",\n                        \"method\": \"GET_metrics\"\n                    },\n                    \"value\": 5937\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"result\": \"404\",\n                        \"method\": \"POST_v1_users_login\"\n                    },\n                    \"value\": 1\n                },\n            ]\n        },\n        \"api_requests_db_duration_ms_sum\": {\n            \"type\": \"counter\",\n            \"help\": \"Total time spent in making DB calls\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"query\": \"connect\",\n                        \"result\": \"ok\",\n                        \"method\": \"POST_v1_users_login\"\n                    },\n                    \"value\": 0\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"query\": \"executeQuery\",\n                        \"result\": \"ok\",\n                        \"method\": \"GET_v1_groups\"\n                    },\n                    \"value\": 16\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"query\": \"connect\",\n                        \"result\": \"ok\",\n                        \"method\": \"POST_v1_media\"\n                    },\n                    \"value\": 3\n                },\n                ...\n            ]\n        },\n        \"api_requests_db_duration_ms_count\": {\n            \"type\": \"counter\",\n            \"help\": \"Total number of calls to the DB\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"query\": \"connect\",\n                        \"result\": \"ok\",\n                        \"method\": \"GET_v1_stats_db\"\n                    },\n                    \"value\": 548\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"query\": \"executeUpdate\",\n                        \"result\": \"ok\",\n                        \"method\": \"POST_v1_users_login\"\n                    },\n                    \"value\": 51\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"query\": \"connect\",\n                        \"result\": \"ok\",\n                        \"method\": \"PATCH_v1_settings_application\"\n                    },\n                    \"value\": 38\n                },\n                ...\n            ]\n        },\n        \"api_requests_coreapp_duration_ms_sum\": {\n            \"type\": \"counter\",\n            \"help\": \"Total time spent in making CoreApp calls\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"coreapp\": \"wacore:6252\",\n                        \"result\": \"ok\",\n                        \"method\": \"GET_v1_stats_db\"\n                    },\n                    \"value\": 2934\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"coreapp\": \"wacore:6252\",\n                        \"result\": \"ok\",\n                        \"method\": \"GET_v1_health\"\n                    },\n                    \"value\": 2083\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"coreapp\": \"wacore:6252\",\n                        \"result\": \"ok\",\n                        \"method\": \"PATCH_v1_settings_application\"\n                    },\n                    \"value\": 328\n                },\n                ...\n            ]\n        },\n        \"api_requests_coreapp_duration_ms_count\": {\n            \"type\": \"counter\",\n            \"help\": \"Total number of calls to the CoreApp\",\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"coreapp\": \"wacore:6252\",\n                        \"result\": \"ok\",\n                        \"method\": \"GET_v1_stats_db\"\n                    },\n                    \"value\": 274\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"coreapp\": \"wacore:6252\",\n                        \"result\": \"ok\",\n                        \"method\": \"POST_v1_settings_backup\"\n                    },\n                    \"value\": 14\n                },\n                {\n                    \"labels\": {\n                        \"node\": \"06475793be9d\",\n                        \"coreapp\": \"wacore:6252\",\n                        \"result\": \"ok\",\n                        \"method\": \"GET_v1_settings_application\"\n                    },\n                    \"value\": 4\n                },\n                ...\n            ]\n        }\n    },\n    \"meta\": {\n        \"version\": \"v2.45.1\",\n        \"api_status\": \"stable\"\n    }\n}\n"
								},
								{
									"name": "Get Metrics Prometheus",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/metrics?format=prometheus",
											"host": [
												"{{URL}}"
											],
											"path": [
												"metrics"
											],
											"query": [
												{
													"key": "format",
													"value": "prometheus"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "# HELP web_uptime Number of seconds since web server has started\n# TYPE web_uptime gauge\nweb_uptime{node=\"06475793be9d\"} 349141\n# HELP web_connections Total number of connections accepted\n# TYPE web_connections counter\nweb_connections{node=\"06475793be9d\"} 23933\n# HELP web_pending_connections Current number of pending connections in the queue\n# TYPE web_pending_connections gauge\nweb_pending_connections{node=\"06475793be9d\"} 0\n# HELP web_max_pending_connections Maximum number of pending connections in the queue\n# TYPE web_max_pending_connections gauge\nweb_max_pending_connections{node=\"06475793be9d\"} 10\n# HELP web_queue_len Size of queue for pending connections\n# TYPE web_queue_len gauge\nweb_queue_len{node=\"06475793be9d\"} 128\n# HELP web_idle_processes Current number of idle processes\n# TYPE web_idle_processes gauge\nweb_idle_processes{node=\"06475793be9d\"} 10\n# HELP web_total_processes Total process limit\n# TYPE web_total_processes gauge\nweb_total_processes{node=\"06475793be9d\"} 12\n# HELP web_process_limit_hit Total number of times reached process limit\n# TYPE web_process_limit_hit counter\nweb_process_limit_hit{node=\"06475793be9d\"} 0\n# HELP web_handled_requests Total number of requests handled\n# TYPE web_handled_requests counter\nweb_handled_requests{node=\"06475793be9d\"} 30054\n# HELP web_out_kbytes Total outgoing traffic in kbytes\n# TYPE web_out_kbytes counter\nweb_out_kbytes{node=\"06475793be9d\"} 116726\n# HELP web_requests Number of ongoing requests\n# TYPE web_requests gauge\nweb_requests{node=\"06475793be9d\",state=\"read\"} 1\nweb_requests{node=\"06475793be9d\",state=\"handle-request\"} 2\nweb_requests{node=\"06475793be9d\",state=\"idle\"} 125\n# HELP api_requests_duration_ms_sum Total number of durations of API requests\n# TYPE api_requests_duration_ms_sum counter\napi_requests_duration_ms_sum{node=\"06475793be9d\",result=\"200\",method=\"GET_v1_groups\"} 753\napi_requests_duration_ms_sum{node=\"06475793be9d\",result=\"200\",method=\"POST_v1_settings_backup\"} 1255\napi_requests_duration_ms_sum{node=\"06475793be9d\",result=\"200\",method=\"GET_metrics\"} 249121\n...\n# HELP api_requests_duration_ms_count Total number of API requests\n# TYPE api_requests_duration_ms_count counter\napi_requests_duration_ms_count{node=\"06475793be9d\",result=\"401\",method=\"GET_v1_settings_application\"} 30\napi_requests_duration_ms_count{node=\"06475793be9d\",result=\"200\",method=\"GET_metrics\"} 5998\napi_requests_duration_ms_count{node=\"06475793be9d\",result=\"404\",method=\"POST_v1_users_login\"} 1\n...\n# HELP api_requests_db_duration_ms_sum Total time spent in making DB calls\n# TYPE api_requests_db_duration_ms_sum counter\napi_requests_db_duration_ms_sum{node=\"06475793be9d\",query=\"connect\",result=\"ok\",method=\"POST_v1_users_login\"} 0\napi_requests_db_duration_ms_sum{node=\"06475793be9d\",query=\"executeQuery\",result=\"ok\",method=\"GET_v1_groups\"} 16\napi_requests_db_duration_ms_sum{node=\"06475793be9d\",query=\"connect\",result=\"ok\",method=\"POST_v1_media\"} 3\n...\n# HELP api_requests_db_duration_ms_count Total number of calls to the DB\n# TYPE api_requests_db_duration_ms_count counter\napi_requests_db_duration_ms_count{node=\"06475793be9d\",query=\"connect\",result=\"ok\",method=\"GET_v1_stats_db\"} 548\napi_requests_db_duration_ms_count{node=\"06475793be9d\",query=\"executeUpdate\",result=\"ok\",method=\"POST_v1_users_login\"} 51\napi_requests_db_duration_ms_count{node=\"06475793be9d\",query=\"connect\",result=\"ok\",method=\"PATCH_v1_settings_application\"} 38\n...\n# HELP api_requests_coreapp_duration_ms_sum Total time spent in making CoreApp calls\n# TYPE api_requests_coreapp_duration_ms_sum counter\napi_requests_coreapp_duration_ms_sum{node=\"06475793be9d\",coreapp=\"wacore:6252\",result=\"ok\",method=\"GET_v1_stats_db\"} 2934\napi_requests_coreapp_duration_ms_sum{node=\"06475793be9d\",coreapp=\"wacore:6252\",result=\"ok\",method=\"GET_v1_health\"} 2090\napi_requests_coreapp_duration_ms_sum{node=\"06475793be9d\",coreapp=\"wacore:6252\",result=\"ok\",method=\"PATCH_v1_settings_application\"} 328\n...\n# HELP api_requests_coreapp_duration_ms_count Total number of calls to the CoreApp\n# TYPE api_requests_coreapp_duration_ms_count counter\napi_requests_coreapp_duration_ms_count{node=\"06475793be9d\",coreapp=\"wacore:6252\",result=\"ok\",method=\"GET_v1_stats_db\"} 274\napi_requests_coreapp_duration_ms_count{node=\"06475793be9d\",coreapp=\"wacore:6252\",result=\"ok\",method=\"POST_v1_settings_backup\"} 14\napi_requests_coreapp_duration_ms_count{node=\"06475793be9d\",coreapp=\"wacore:6252\",result=\"ok\",method=\"GET_v1_settings_application\"} 4\n..."
								}
							]
						},
						{
							"name": "Get App Stats",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stats/app",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"app"
									]
								},
								"description": "Send a **GET** call the `/v1/stats/app` endpoint to retrieve Coreapp stats in JSON format. Coreapp stats live in memory and can be queried at regular intervals if needed.\n\n## Response\nIf successful, your request returns `200 OK` and a message body containing an app object."
							},
							"response": [
								{
									"name": "Get App Stats Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/app",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n    \"app\": {\n        \"callback_queue_size\": {\n            \"data\": [\n                {\n                    \"value\": 450\n                }\n            ],\n            \"help\": \"Current callback queue size\",\n            \"type\": \"gauge\"\n        },\n        \"callback_requests_duration_ms_count\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"result\": \"success\",\n                        \"type\": \"inbound_message\"\n                    },\n                    \"value\": 2\n                },\n                {\n                    \"labels\": {\n                        \"result\": \"1\",\n                        \"type\": \"status_change\"\n                    },\n                    \"value\": 28\n                }\n            ],\n            \"help\": \"Total number of callback requests\",\n            \"type\": \"counter\"\n        },\n        \"callback_requests_duration_ms_sum\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"result\": \"success\",\n                        \"type\": \"inbound_message\"\n                    },\n                    \"value\": 32\n                },\n                {\n                    \"labels\": {\n                        \"result\": \"1\",\n                        \"type\": \"status_change\"\n                    },\n                    \"value\": 451\n                }\n            ],\n            \"help\": \"Total duration(ms) of callback requests\",\n            \"type\": \"counter\"\n        },\n        \"db_request_duration_us_count\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"db\": \"messageStore\",\n                        \"request\": \"commit\"\n                    },\n                    \"value\": 5\n                },\n                {\n                    \"labels\": {\n                        \"db\": \"_jobqueue-WhatsApp\",\n                        \"request\": \"prepare\"\n                    },\n                    \"value\": 10\n                }, ...\n            \"help\": \"Total number of successful SQL queries\",\n            \"type\": \"counter\"\n        },\n        \"db_request_duration_us_sum\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"db\": \"messageStore\",\n                        \"request\": \"commit\"\n                    },\n                    \"value\": 14967\n                },\n                {\n                    \"labels\": {\n                        \"db\": \"_jobqueue-WhatsApp\",\n                        \"request\": \"prepare\"\n                    },\n                    \"value\": 4236\n                },...\n            \"help\": \"Total duration(microseconds) of successful SQL queries\",\n            \"type\": \"counter\"\n        },\n        \"endpoint_requests\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"method\": \"contacts\",\n                        \"result\": \"ok\"\n                    },\n                    \"value\": 3864\n                },\n                {\n                    \"labels\": {\n                        \"method\": \"messaging\",\n                        \"result\": \"ok\"\n                    },\n                    \"value\": 3576\n                },\n                {\n                    \"labels\": {\n                        \"method\": \"messaging\",\n                        \"result\": \"1020\"\n                    },\n                    \"value\": 15\n                },\n                {\n                    \"labels\": {\n                        \"method\": \"control\",\n                        \"result\": \"ok\"\n                    },\n                    \"value\": 4169\n                }\n            ],\n            \"help\": \"Total number of endpoint requests made\",\n            \"type\": \"counter\"\n        },\n        \"endpoint_requests_duration_ms_count\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"method\": \"app_stats\",\n                        \"result\": \"ok\"\n                    },\n                    \"value\": 1\n                },\n                ...\n            ],\n            \"help\": \"Total number of endpoint requests\",\n            \"type\": \"counter\"\n        },\n        \"endpoint_requests_duration_ms_sum\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"method\": \"app_stats\",\n                        \"result\": \"ok\"\n                    },\n                    \"value\": 2\n                },\n                ...\n            ],\n            \"help\": \"Total duration(ms) of endpoint requests\",\n            \"type\": \"counter\"\n        },\n        \"in_message_decoded\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"type\": \"image\"\n                    },\n                    \"value\": 1\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"undefined\"\n                    },\n                    \"value\": 8\n                }\n            ],\n            \"help\": \"Total number of incoming messages\",\n            \"type\": \"counter\"\n        },\n        \"in_message_from_server\": {\n            \"data\": [\n                {\n                    \"value\": 9\n                }\n            ],\n            \"help\": \"Total number of incoming encrypted messages from server\",\n            \"type\": \"counter\"\n        },\n        \"in_message_persisted\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"type\": \"image\"\n                    },\n                    \"value\": 1\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"system\"\n                    },\n                    \"value\": 3350\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"undefined\"\n                    },\n                    \"value\": 8\n                }\n            ],\n            \"help\": \"Total number of incoming messages cached in DB\",\n            \"type\": \"counter\"\n        },\n        \"in_messages_pending_processing\": {\n            \"data\": [\n                {\n                    \"value\": 0\n                }\n            ],\n            \"help\": \"Number of encrypted messages received yet to be processed\",\n            \"type\": \"gauge\"\n        },\n        \"internal_server_conn_duration_ms_count\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"result\": \"Connected\"\n                    },\n                    \"value\": 1\n                }\n            ],\n            \"help\": \"Total number of internal server connection requests made\",\n            \"type\": \"counter\"\n        },\n        \"internal_server_conn_duration_ms_sum\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"result\": \"Connected\"\n                    },\n                    \"value\": 584\n                }\n            ],\n            \"help\": \"Total time spent in connecting to internal server in ms\",\n            \"type\": \"counter\"\n        },\n        \"internal_server_requests_duration_ms_count\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"operation\": \"FieldStatsResult\",\n                        \"result\": \"ok\"\n                    },\n                    \"value\": 2\n                },\n                {\n                    \"labels\": {\n                        \"operation\": \"GetPrivacyListResult\",\n                        \"result\": \"404\"\n                    },\n                    \"value\": 1\n                },...\n            \"help\": \"Number of internal server requests\",\n            \"type\": \"counter\"\n        },\n        \"internal_server_requests_duration_ms_sum\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"operation\": \"FieldStatsResult\",\n                        \"result\": \"ok\"\n                    },\n                    \"value\": 158\n                },\n                {\n                    \"labels\": {\n                        \"operation\": \"GetPrivacyListResult\",\n                        \"result\": \"404\"\n                    },\n                    \"value\": 347\n                },...\n            \"help\": \"Duration of internal server requests\",\n            \"type\": \"counter\"\n        },\n        \"media_downloads\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"result\": \"unknown\",\n                        \"type\": \"image\"\n                    },\n                    \"value\": 1\n                }\n            ],\n            \"help\": \"Total number of media messages downloaded from server\",\n            \"type\": \"counter\"\n        },\n        \"media_uploads\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"result\": \"ok\",\n                        \"type\": \"audio\"\n                    },\n                    \"value\": 95\n                },\n                {\n                    \"labels\": {\n                        \"result\": \"ok\",\n                        \"type\": \"document\"\n                    },\n                    \"value\": 145\n                },\n                {\n                    \"labels\": {\n                        \"result\": \"ok\",\n                        \"type\": \"image\"\n                    },\n                    \"value\": 81\n                }\n            ],\n            \"help\": \"Total number of media messages uploaded to server\",\n            \"type\": \"counter\"\n        },\n        \"out_message_persisted\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"type\": \"document\"\n                    },\n                    \"value\": 145\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"audio\"\n                    },\n                    \"value\": 95\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"image\"\n                    },\n                    \"value\": 81\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"undefined\"\n                    },\n                    \"value\": 79\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"hsm\"\n                    },\n                    \"value\": 3176\n                }\n            ],\n            \"help\": \"Total number of outgoing messages cached in DB\",\n            \"type\": \"counter\"\n        },\n        \"out_message_sent_duration_ms_count\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"retry\": \"0\",\n                        \"type\": \"hsm\"\n                    },\n                    \"value\": 3576\n                }, ...\n            ],\n            \"help\": \"Total number of messages sent to server successfully\",\n            \"type\": \"counter\"\n        },\n        \"out_message_sent_duration_ms_sum\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"retry\": \"0\",\n                        \"type\": \"hsm\"\n                    },\n                    \"value\": 536433\n                }, ...\n            ],\n            \"help\": \"Total number of durations used to send messages to server\",\n            \"type\": \"counter\"\n        },\n        \"out_message_status\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"status\": \"delivered\"\n                    },\n                    \"value\": 1034\n                },\n                {\n                    \"labels\": {\n                        \"status\": \"sent\"\n                    },\n                    \"value\": 3576\n                },\n                {\n                    \"labels\": {\n                        \"status\": \"read\"\n                    },\n                    \"value\": 1034\n                }\n            ],\n            \"help\": \"Total number of outgoing messages of a particular status\",\n            \"type\": \"counter\"\n        },\n        \"pending_callbacks\": {\n            \"data\": [\n                {\n                    \"labels\": {\n                        \"type\": \"inbound_message\"\n                    },\n                    \"value\": 8\n                },\n                {\n                    \"labels\": {\n                        \"type\": \"status_change\"\n                    },\n                    \"value\": 442\n                }\n            ],\n            \"help\": \"Current number of pending callbacks in the queue\",\n            \"type\": \"gauge\"\n        },\n        \"pending_messages\": {\n            \"data\": [\n                {\n                    \"value\": 0\n                }\n            ],\n            \"help\": \"Current number of pending messages in the queue\",\n            \"type\": \"gauge\"\n        }\n    },\n    \"meta\": {\n        \"version\": \"v2.45.1\",\n        \"api_status\": \"stable\"\n    }\n}\n}"
								},
								{
									"name": "Get App Stats High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/app",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n       \"app\": {\n           \"your-hostname1:your-container-id1\":{\n             \"callback_queue_size\": {\n               \"data\": [\n                 {\"value\": 450}\n               ],\n               \"help\": \"Current callback queue size\",\n               \"type\": \"gauge\"\n             }             \n           },\n           \"your-hostname2:your-container-id2\":{\n             \"callback_queue_size\": {\n               \"data\": [\n                 {\"value\": 10}\n               ],\n               \"help\": \"Current callback queue size\",\n               \"type\": \"gauge\"\n             }\n           }\n        }\n    },\n    \"meta\": {\n        \"version\": \"v2.45.1\",\n        \"api_status\": \"stable\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get App Stats Prometheus Format",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/stats/app?format=prometheus",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"app"
									],
									"query": [
										{
											"key": "format",
											"value": "prometheus"
										}
									]
								},
								"description": "Send a GET call the `/v1/stats/app` endpoint with **`format`** = `prometheus` to retrieve Coreapp stats in Prometheus format. Coreapp stats live in memory and can be queried at regular intervals if needed.\n\n## Returned Fields\n\n| Name                                      | Description                        |\n|-------------------------------------------|------------------------------------|\n| **`callback_queue_size`**<br/>Type: Object | Current callback queue size.|\n| **`callback_requests_duration_ms_count`**<br/>Type: Object | Total number of callback requests made and result.|\n| **`callback_requests_duration_ms_sum`**<br/>Type: Object | Total duration (ms) of callback requests.|\n| **`concurrent_rate_limit_triggered`**<br/>Type: Object | Current number of concurrent rate limit triggers.|\n| **`db_request_duration_us_count`**<br/>Type: Object | Total number of successful SQL queries.|\n| **`db_request_duration_us_sum`**<br/>Type: Object | Total duration (microseconds) of successful SQL queries.|\n| **`db_request_error_duration_us_count`**<br/>Type: Object | Total number of failed SQL queries.|\n| **`db_request_error_duration_us_sum`**<br/>Type: Object | Total duration(microseconds) of failed SQL queries.|\n| **`endpoint_requests`**<br/>Type: Object | Total number of endpoint requests made for a given endpoint and result (either ok or an error code). |\n| **`endpoint_requests_duration_ms_count`**<br/>Type: Object | Total number of endpoint requests. |\n| **`endpoint_requests_duration_ms_sum`**<br/>Type: Object | Total duration (ms) of endpoint requests. |\n| **`in_message_decoded`**<br/>Type: Object | Total number of incoming messages decrypted successfully.|\n| **`in_message_from_server`**<br/>Type: Object |Total number of incoming encrypted messages from server.|\n| **`in_message_persisted`**<br/>Type: Object | Total number of incoming messages cached in the database. |\n| **`in_messages_pending_processing`**<br/>Type: Object | Number of encrypted messages received yet to be processed.|\n| **`internal_server_conn_duration_ms_count`**<br/>Type: Object | Total number of internal server connection requests made. |\n| **`internal_server_conn_duration_ms_sum`**<br/>Type: Object | Total duration (ms) spent in connecting to internal server in ms. |\n| **`internal_server_requests_duration_ms_count`**<br/>Type: Object | Total number of internal server requests. |\n| **`internal_server_requests_duration_ms_sum`**<br/>Type: Object | Total duration(ms) of internal server requests. |\n| **`media_downloads`**<br/>Type: Object | Total number of media files downloaded from server.|\n| **`media_uploads`**<br/>Type: Object | Total number of media files uploaded to server.|\n| **`out_message_persisted`**<br/>Type: Object | Total number of outgoing messages cached in the database.|\n| **`out_message_status`**<br/>Type: Object | Total number of outgoing messages of a particular status.|\n| **`out_message_sent_duration_ms_count`**<br/>Type: Object | Total number of messages sent to server successfully.|\n| **`out_message_sent_duration_ms_sum`**<br/>Type: Object | Total duration (ms) used to send messages to server. |\n| **`pending_callbacks`**<br/>Type: Object | Current number of pending callbacks in the queue for each callback type.|\n| **`pending_messages`**<br/>Type: Object | Current number of pending messages in the queue.|\n| **`per_sec_request_rate_limit_triggered`**<br/>Type: Object | Current number of per second request rate limit triggers.|\n| **`per_hour_request_rate_limit_triggered`**<br/>Type: Object | Current number of per hour request rate limit triggers.|\n| **`per_day_request_rate_limit_triggered`**<br/>Type: Object | Current number of per day request rate limit triggers.|\n| **`per_day_contacts_scrape_limit_triggered`**<br/>Type: Object | Current number of per day contact scrape limit triggers.|"
							},
							"response": [
								{
									"name": "Get App Stats Prometheus Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/app?format=prometheus",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"app"
											],
											"query": [
												{
													"key": "format",
													"value": "prometheus"
												}
											]
										}
									},
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "# HELP callback_queue_size Current callback queue size\n# TYPE callback_queue_size gauge\ncallback_queue_size 450\n# HELP callback_requests_duration_ms_count Total number of callback requests\n# TYPE callback_requests_duration_ms_count counter\ncallback_requests_duration_ms_count{result=\"success\",type=\"inbound_message\"} 2\ncallback_requests_duration_ms_count{result=\"1\",type=\"status_change\"} 28\n# HELP callback_requests_duration_ms_sum Total duration(ms) of callback requests\n# TYPE callback_requests_duration_ms_sum counter\ncallback_requests_duration_ms_sum{result=\"success\",type=\"inbound_message\"} 32\ncallback_requests_duration_ms_sum{result=\"1\",type=\"status_change\"} 451\n# HELP db_request_duration_us_count Total number of successful SQL queries\n# TYPE db_request_duration_us_count counter\ndb_request_duration_us_count{db=\"messageStore\",request=\"commit\"} 5\ndb_request_duration_us_count{db=\"_jobqueue-WhatsApp\",request=\"prepare\"} 10\n...\n# HELP db_request_duration_us_sum Total duration(microseconds) of successful SQL queries\n# TYPE db_request_duration_us_sum counter\ndb_request_duration_us_sum{db=\"messageStore\",request=\"commit\"} 14967\ndb_request_duration_us_sum{db=\"_jobqueue-WhatsApp\",request=\"prepare\"} 4236\n...\n# HELP endpoint_requests Total number of endpoint requests made\n# TYPE endpoint_requests counter\nendpoint_requests{method=\"contacts\",result=\"ok\"} 3864\nendpoint_requests{method=\"messaging\",result=\"ok\"} 3576\nendpoint_requests{method=\"messaging\",result=\"1020\"} 15\nendpoint_requests{method=\"control\",result=\"ok\"} 4262\n# HELP endpoint_requests_duration_ms_count Total number of endpoint requests\n# TYPE endpoint_requests_duration_ms_count counter\nendpoint_requests_duration_ms_count{method=\"app_stats\",result=\"ok\"} 1\n...\n# HELP endpoint_requests_duration_ms_sum Total duration(ms) of endpoint requests\n# TYPE endpoint_requests_duration_ms_sum counter\nendpoint_requests_duration_ms_sum{method=\"app_stats\",result=\"ok\"} 2\n...\n# HELP in_message_decoded Total number of incoming messages\n# TYPE in_message_decoded counter\nin_message_decoded{type=\"image\"} 1\nin_message_decoded{type=\"undefined\"} 8\n# HELP in_message_from_server Total number of incoming encrypted messages from server\n# TYPE in_message_from_server counter\nin_message_from_server 9\n# HELP in_message_persisted Total number of incoming messages cached in DB\n# TYPE in_message_persisted counter\nin_message_persisted{type=\"image\"} 1\nin_message_persisted{type=\"system\"} 3350\nin_message_persisted{type=\"undefined\"} 8\n# HELP in_messages_pending_processing Number of encrypted messages received yet to be processed\n# TYPE in_messages_pending_processing gauge\nin_messages_pending_processing 0\n# HELP internal_server_conn_duration_ms_count Total number of internal server connection requests made\n# TYPE internal_server_conn_duration_ms_count counter\ninternal_server_conn_duration_ms_count{result=\"Connected\"} 1\n# HELP internal_server_conn_duration_ms_sum Total time spent in connecting to internal server in ms\n# TYPE internal_server_conn_duration_ms_sum counter\ninternal_server_conn_duration_ms_sum{result=\"Connected\"} 584\n# HELP internal_server_requests_duration_ms_count Number of internal server requests\n# TYPE internal_server_requests_duration_ms_count counter\ninternal_server_requests_duration_ms_count{operation=\"FieldStatsResult\",result=\"ok\"} 2\ninternal_server_requests_duration_ms_count{operation=\"GetPrivacyListResult\",result=\"404\"} 1\n...\n# HELP internal_server_requests_duration_ms_sum Duration of internal server requests\n# TYPE internal_server_requests_duration_ms_sum counter\ninternal_server_requests_duration_ms_sum{operation=\"FieldStatsResult\",result=\"ok\"} 158\ninternal_server_requests_duration_ms_sum{operation=\"GetPrivacyListResult\",result=\"404\"} 347\n...\n# HELP media_downloads Total number of media messages downloaded from server\n# TYPE media_downloads counter\nmedia_downloads{result=\"unknown\",type=\"image\"} 1\n# HELP media_uploads Total number of media messages uploaded to server\n# TYPE media_uploads counter\nmedia_uploads{result=\"ok\",type=\"audio\"} 95\nmedia_uploads{result=\"ok\",type=\"document\"} 145\nmedia_uploads{result=\"ok\",type=\"image\"} 81\n# HELP out_message_persisted Total number of outgoing messages cached in DB\n# TYPE out_message_persisted counter\nout_message_persisted{type=\"document\"} 145\nout_message_persisted{type=\"audio\"} 95\nout_message_persisted{type=\"image\"} 81\nout_message_persisted{type=\"undefined\"} 79\nout_message_persisted{type=\"hsm\"} 3176\n# HELP out_message_sent_duration_ms_count Total number of messages sent to server successfully\n# TYPE out_message_sent_duration_ms_count counter\nout_message_sent_duration_ms_count{retry=\"0\",type=\"hsm\"} 3576\n...\n# HELP out_message_sent_duration_ms_sum Total number of durations used to send messages to server\n# TYPE out_message_sent_duration_ms_sum counter\nout_message_sent_duration_ms_sum{retry=\"0\",type=\"hsm\"} 536433\n...\n# HELP out_message_status Total number of outgoing messages of a particular status\n# TYPE out_message_status counter\nout_message_status{status=\"delivered\"} 1034\nout_message_status{status=\"sent\"} 3576\nout_message_status{status=\"read\"} 1034\n# HELP pending_callbacks Current number of pending callbacks in the queue\n# TYPE pending_callbacks gauge\npending_callbacks{type=\"inbound_message\"} 8\npending_callbacks{type=\"status_change\"} 442\n# HELP pending_messages Current number of pending messages in the queue\n# TYPE pending_messages gauge\npending_messages 0"
								},
								{
									"name": "Get App Stats Prometheus High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/app?format=prometheus",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"app"
											],
											"query": [
												{
													"key": "format",
													"value": "prometheus"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "# HELP callback_queue_size Current callback queue size\n# TYPE callback_queue_size gauge\ncallback_queue_size{node=\"your-hostname1:your-container-id1\"} 0\ncallback_queue_size{node=\"your-hostname2:your-container-id2\"} 0\n..."
								}
							]
						},
						{
							"name": "Get DB Stats",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{AdminAuthToken}}"
									}
								],
								"url": {
									"raw": "{{URL}}/v1/stats/db",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"db"
									]
								},
								"description": "Send a **GET** call to the `/v1/stats/db` endpoint to retrieve database stats in JSON format.\n\nChecking the database stats can take a long time and affect app performance if your database is large. It is recommended polling this information only when needed.\n\n## Response\n### Single Instance\nIf successful, your request returns `200 OK` and a message body containing an **`db`** object.\n\n### High Availability and Multiconnect\nFor high availability/multiconnect, only the primary Master returns **`stats`**, others return `{}`:"
							},
							"response": [
								{
									"name": "Get DB Stats Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n        \"db\": {\n            \"db_contacts\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"non_whatsapp_user\"\n                        },\n                        \"value\": 2\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"whatsapp_user\"\n                        },\n                        \"value\": 5\n                    }\n                ],\n                \"help\": \"Current number of contacts in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_message_receipts\": {\n                \"data\": [\n                    {\n                        \"value\": 6\n                    }\n                ],\n                \"help\": \"Current number of message receipts in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_messages\": {\n                \"data\": [\n                    {\n                        \"labels\": {\n                            \"type\": \"undefined\"\n                        },\n                        \"value\": 2\n                    },\n                    {\n                        \"labels\": {\n                            \"type\": \"system\"\n                        },\n                        \"value\": 1\n                    }\n                ],\n                \"help\": \"Current number of messages in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_pending_callbacks\": {\n                \"data\": [\n                    {\n                        \"value\": 0\n                    }\n                ],\n                \"help\": \"Current number of pending callbacks in DB\",\n                \"type\": \"gauge\"\n            },\n            \"db_pending_messages\": {\n                \"data\": [\n                    {\n                        \"value\": 0\n                    }\n                ],\n                \"help\": \"Current number of pending messages in DB\",\n                \"type\": \"gauge\"\n            }\n        }\n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								},
								{
									"name": "Get DB Stats High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{AdminAuthToken}}"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"stats\": {\n       \"db\": {\n          \"your-hostname1:your-container-id1\": {},\n          \"your-primary-master:your-container-id2\": {\n             \"db_contacts\": {\n               \"data\": [ {\n                 \"labels\": {\n                   \"type\": \"whatsapp_user\"\n                 },\n                 \"value\": 4\n               } ],\n               \"help\": \"Current number of contacts in DB\",\n               \"type\": \"gauge\"\n             },\n\n             \"db_message_receipts\": { ... },\n\n             \"db_messages\": { ... },\n           \n             \"db_pending_callbacks\": { ... },\n           \n             \"db_pending_messages\": { ... }\n          },\n         \"your-hostname3:your-container-id3\": {},\n         ...\n       }   \n    },\n    \"meta\": {\n        \"api_status\": \"stable\",\n        \"version\": \"v2.45.1\"\n    }\n}"
								}
							]
						},
						{
							"name": "Get DB Stats Prometheus",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/v1/stats/db?format=prometheus",
									"host": [
										"{{URL}}"
									],
									"path": [
										"v1",
										"stats",
										"db"
									],
									"query": [
										{
											"key": "format",
											"value": "prometheus"
										}
									]
								},
								"description": "Send a **GET** call to the `/v1/stats/db` endpoint with **`format`** = `prometheus` to retrieve database stats in Prometheus format.\n\nChecking the database stats can take a long time and affect app performance if your database is large. It is recommended polling this information only when needed.\n\n## Returned Fields\n\n| Name                                      | Description                        |\n|-------------------------------------------|------------------------------------|\n| **`db_contacts`**<br/>Type: Object | Current number of contacts in the database. |\n| **`db_message_receipts`**<br/>Type: Object | Current number of message receipts in the database.|\n| **`db_messages`**<br/>Type: Object | Current number of messages in the database.|\n| **`db_pending_callbacks`**<br/>Type: Object | Current number of pending callbacks in the database. |\n| **`db_pending_messages`**<br/>Type: Object | Current number of pending messages in the database. |"
							},
							"response": [
								{
									"name": "Get DB Stats Prometheus Single Instance",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db?format=prometheus",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											],
											"query": [
												{
													"key": "format",
													"value": "prometheus"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "# HELP db_contacts Current number of contacts in DB\n# TYPE db_contacts gauge\ndb_contacts{type=\"whatsapp_user\"} 3\n# HELP db_message_receipts Current number of message receipts in DB\n# TYPE db_message_receipts gauge\ndb_message_receipts 0"
								},
								{
									"name": "Get DB Stats Prometheus High Availability and Multiconnect",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/v1/stats/db?format=prometheus",
											"host": [
												"{{URL}}"
											],
											"path": [
												"v1",
												"stats",
												"db"
											],
											"query": [
												{
													"key": "format",
													"value": "prometheus"
												}
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "# HELP db_contacts Current number of contacts in DB\n# TYPE db_contacts gauge\ndb_contacts{node=\"your-primary-master:your-container-id\", type=\"whatsapp_user\"} 3\n# HELP db_message_receipts Current number of message receipts in DB\n# TYPE db_message_receipts gauge\ndb_message_receipts{node=\"your-primary-master:your-container-id\"} 0"
								}
							]
						}
					],
					"description": "Use the metrics endpoint to collect important data about your Webapp such as number of processes and outgoing traffic.\n\nThe metrics enpoint supports Bearer token and API key authentication.\n\n## API Keys\nIf you wish to monitor the **`health`**, **`metrics`**, and **`stats`** nodes from an orchestrator, Bearer tokens are not the best option for ongoing checks as they expire every 7 days. To mediate this, you can use an API key, which can be set using the `WA_API_KEY` environment variable in the `waweb` environment section in the `.yml` file of your installation setup.\n```\nservices:\n...\n  waweb:\n  ...\n    environment:\n    ...\n    WA_API_KEY: your-api-key-token\n```\n\nThe API key you set must have a minimum of 12 characters and a maximum of 128 characters. The Webapp must be restarted whenever you change the API key."
				}
			],
			"description": "The WhatsApp Business API uses a REST API Architecture with JSON data formats. The API follows the standard HTTP request-response exchange. WhatsApp Business API Postman collection includes the following API."
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Understanding Webhooks",
					"item": [],
					"description": "You can use these webhooks in two ways:\n\n* Inbound Notifications: Use it to get a notification you when you have received a message.\n* Message Status Notifications: Monitor the status of sent messages.\n\nIf a webhook event isn't delivered for any reason (e.g., the client is offline) or if the webhook request returns a HTTP status code other than `200`, we retry the webhook delivery. We continue retrying delivery with increasing delays up to a certain timeout (typically 24 hours, though this may vary), or until the delivery succeeds."
				},
				{
					"name": "Generate Endpoint for Webhooks Testing",
					"item": [],
					"description": "The instructions for generating an endpoint for Webhooks testing are located at [Generate Endpoint for Webhooks Testing](https://developers.facebook.com/docs/whatsapp/api/webhooks/generate-endpoint)."
				},
				{
					"name": "Components",
					"item": [
						{
							"name": "Message Object",
							"item": [
								{
									"name": "contacts",
									"item": [],
									"description": "The **`contacts`** object provides all the information about the contact.\n\n>This object only applies to text, contacts, and location messages. It is not currently supported for media messages and is not applicable for system messages.\n\n| Name\t                                 | Description                         |\n|----------------------------------------|-------------------------------------|\n|**`profile`**<br/>type: Profile object  | Contains the sender's profile information.|\n|**`wa_id`**<br/>type: String | The WhatsApp ID of the contact. |"
								},
								{
									"name": "profile",
									"item": [],
									"description": "This object contains the sender's profile information.\n\n| Name\t                        | Description                          |\n|-------------------------------|--------------------------------------|\n| **`name`**<br/>type: String   | **Optional.**<br/>Contains the sender's profile name.|"
								},
								{
									"name": "messages",
									"item": [],
									"description": "The messages object provides all of the information about the incoming message.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`context`**<br/>type: String     | **Optional.**<br/>This object will only be included when someone replies to one of your messages. Contains information about the content of the original message, such as the ID of the sender and the ID of the message. See [context object](#d4d23c6a-3e66-4a68-9cc4-a8834de1c84a) for more information.|\n| **`from`**<br/>type: String        | The WhatsApp ID of the sender.|\n| **`id`**<br/>type: String      | The message ID.<br/><br/>This ID can be used to mark a message as read.|\n| **`identity`**<br/>type: Identity Object |**Optional.**<br/>Contains information about the user identity used to decrypt the incoming message. See [identity object](#7abdae6e-1950-4349-8442-2274cfc2c15f).<br/><br/>This object is only included when the **`show_security_notifications`** parameter is set to `true` in the application settings.|\n| **`timestamp`**<br/>type: String  | The message received timestamp. |\n| **`type`**<br/>type: String | The message type.<br/>**Supported values are:** `audio`, `contacts`, `document`, `image`, `location`, `text`, `unknown`, `video`, and `voice` |\n| **`message_objects`**<br/>Array of `audio`, `contacts`, `document`, `image`, `location`, `system`, `text`, `video`, and `voice` objects<br/>type: Message type objects that provide more information about the received message. | Message contents. See the [media object fields](#f06b1ca9-fe2e-48b4-81d0-de65c04139d4) for more information. |\n| **`referral`**<br/>type: Referral Object | **Optional.**<br/>This object is present when the user clicks on an ad that Clicks to WhatsApp and sends a message to the business. For more information, see [referral object](#05cafa2f-e332-4425-bcb4-2df145573aa4).|\n| **`system`**<br/>type: System Object | Notifications of changes to the system. |\n| **`interactive`**<br/>type: Interactive Object | This object is present for notifications related to interactive messages. For more information, see [interactive object](#cb301b46-e72b-43f5-a8d2-d9e05459b39a).|"
								},
								{
									"name": "context",
									"item": [],
									"description": "A `context` object is found in messages where someone has replied to one of your messages. Its purpose is to provide you with a context for the reply.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`from`**<br/>type: String  | The WhatsApp ID of the sender of the original message.|\n| **`id`**<br/>type: String | The message ID of original message.|\n| **`referred_product`**<br/>type: object | Used for enquiries coming from a Product Detail Page, Single Product Messages, and Multi-Product Message.|"
								},
								{
									"name": "referred_product",
									"item": [],
									"description": "A `referred_product` is used for Single Product Messages. This object contains the item mentioned in the message.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`catalog_id`**   | ID for the catalog the item belongs to.|\n| **`product_retailer_id`** | The unique identifier (in the catalog) of the product.|"
								},
								{
									"name": "identity",
									"item": [],
									"description": "The `identity` object provides all the information about the user's identity.\n\n> Applies to all incoming messages only when the **`show_security_notifications`** parameter is set to `true` in the [application settings](https://developers.facebook.com/docs/whatsapp/api/settings/app).\n\n| Name\t                                | Description                          |\n|---------------------------------------|--------------------------------------|\n| **`acknowledged`**<br/>type: String   | The state of acknowledgment for latest **`user_identity_changed`** system notification.|\n| **`created_timestamp`**<br/>type: Int | The timestamp of when the WhatsApp Business API client detected the user potentially changed.|\n| **`hash`**<br/>type: String | The identifier of the latest **`user_identity_changed`** system notification.|"
								},
								{
									"name": "text",
									"item": [],
									"description": "The `text` object provides the body of the text message when the notification describes a text message.\n\n| Name\t                                | Description                          |\n|---------------------------------------|--------------------------------------|\n| **`body`**<br/>type: String           | The message text.|"
								},
								{
									"name": "location",
									"item": [],
									"description": "The `location` object provides the details of the location when you receive a notification of a user's static location.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`latitude`**<br/>type: Number    | The latitude of location being sent.|\n| **`longitude`**<br/>type: Number   | The longitude of location being sent.|\n| **`address`**<br/>type: String     | The address of the location.|\n| **`name`**<br/>type: String        | The name of the location.|\n| **`url`**<br/>type: String        | The URL for the website where the user downloaded the location information.|"
								},
								{
									"name": "contacts",
									"item": [],
									"description": "The `contacts` object provides the contact information details when you receive a notification of a user's contact information.\n\n> This field is different from the `contacts` object listed above.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`addresses`**<br/>type: Array    | Full contact address(es). This field can contain **`street`**, **`city`**, **`state`**, **`zip`**, **`country`**, **`country_code`**, and **`type`** fields.|\n| **`birthday`**<br/>type: String formatted by `YYYY-MM-DD` | The contact's birthday. |\n| **`emails`**<br/>type: Array | The email address(es) of the contact. The field can contain the **`email`** and **`type`** parameters.|\n| **`ims`**<br/>type: Array | Messaging contact information. This field contains the **`service`** and **`user_id`** parameters.|\n| **`name`**<br/>type: Array | The full contact name. This field can contain the **`first_name`**, **`middle_name`**, **`last_name`**, **`formatted_name`**, **`name-prefix`**, and **`name_suffix parameters`**. |\n| **`org`**<br/>type: Array | The contact organization information. This field can contain the **`company`**, **`department`**, and **`title`** parameters. |\n| **`phones`**<br/>type: Array | The contact phone number(s). This field can contain the **`phone`**, **`wa_id`**, and **`type`** parameters.|\n| **`urls`**<br/>type: Array | The contact URL(s). This field can contain the **`url`** and **`type`** parameters.|"
								},
								{
									"name": "media",
									"item": [],
									"description": "When a message with media (`image` | `document` | `audio` | `video` | `voice` | `sticker`) is received, the WhatsApp Business API client will download the media. Once the media is downloaded, a notification is sent to your Webhook. This message contains information that identifies the media object and enables you to find and download the object.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`caption`**<br/>type: String     | **Optional. Only present if specified.**<br/> The provided caption for the media.|\n| **`file`**<br/>type: String     | **The parameter is deprecated.**<br/> Absolute filename and location on the media volume.|\n| **`filename`**<br/>type: String     | **The parameter is deprecated.**<br/> The filename on the sender's device. This will only be present in document media messages.|\n| **`id`**<br/>type: String     | The ID of the media. Can be used to delete the media if stored locally on the client. |\n| **`metadata`**<br/>type: Metadata Object     | The Metadata pertaining to `sticker` media. |\n| **`mime_type`**<br/>type: String     | Mime type of the media. |\n| **`sha256`**<br/>type: String     | Checksum. |"
								},
								{
									"name": "system",
									"item": [],
									"description": "Notifications of changes to the system are sent in the `system` object.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`body`**<br/>type: String        | System event message.|"
								},
								{
									"name": "referral",
									"item": [],
									"description": "Included in notifications when a user clicks on an ad that clicks to WhatsApp and sends a message to the business. This object has the ad's information.\n\n| Name\t                             | Description                          |\n|------------------------------------|--------------------------------------|\n| **`headline`**<br/>type: String    | The headline used in the ad that generated the message.|\n| **`body`**<br/>type: String | The Body from the ad that generated the message.|\n| **`source_type`**<br/>type: String | The type of the ad’s source. Currently, supported values are `ad` and `post`.|\n| **`source_id`**<br/>type: String | The Facebook ID for an ad or a post. |\n| **`source_url`**<br/>type: String | The url that leads to the ad. Opening this url takes you to the ad viewed by your user.|\n| **`image`** and **`video`**<br/>type: Media object | **Optional**.<br/>The image or video that the user saw and clicked. This object is missing if the skip_referral_media_download application setting is set to **`true`**. For more information, see [application settings](https://developers.facebook.com/docs/whatsapp/api/settings/app)."
								},
								{
									"name": "referral media(video|image)",
									"item": [],
									"description": "Media that was used in the ad. Note that **`sha256`** and **`mime_type`** are not present — **`mime_type`** can be discovered when the media is downloaded.\n\n| Name\t                       | Description                          |\n|------------------------------|--------------------------------------|\n| **`id`**<br/>type: String    | The ID of the media. This field can be used to delete the media, if stored locally on the client. |"
								},
								{
									"name": "interactive",
									"item": [],
									"description": "An `interactive` object is found in Webhooks related to interactive messages, including List Messages and Reply Button. This object contains the following components:\n\n\n| Name\t               | Description                          |\n|----------------------|--------------------------------------|\n| **`type`**      | **Required for `list_reply`.**<br/>Supported values:<ul><li>**`list_reply`** for List Messages</li><li>**`button_reply`** for Reply Button Messages</li></ul>|\n| **`list_reply`**  | Used to notify you when customers are replying to List Messages.<br/><br/>Contains the following information about the rows selected by the customer: **`id`**, **`title`**, and **`description`**. |     \n| **`button_reply`**  | Used to notify you when customers are replying to Quick Reply Messages.<br/><br/>Contains the following information about the button clicked by the customer: **`id`** and **`title`**. |"
								},
								{
									"name": "order",
									"item": [],
									"description": "An order object is found in Webhooks related to Multi and Single Product Messages. This object contains the following components:\n\n\n| Name\t               | Description                          |\n|----------------------|--------------------------------------|\n| **`catalog_id`**      | The ID of the catalog that contains the products listed under **`product_items`** sections.|\n| **`product_items`**     | An array of product items.|\n| **`text`**     | The text message sent along with the order.|"
								},
								{
									"name": "product_items",
									"item": [],
									"description": "A product_item object is found in Webhooks related to Multi-Product Messages. This object contains the following components:\n\n| Name\t                         | Description                          |\n|--------------------------------|--------------------------------------|\n| **`product_retailer_id`**      | The unique identifier (in the catalog) of the product. |\n| **`quantity`**                 | The number of items purchased. |\n| **`item_price`**               | The unitary price of the items. |\n| **`currency`**                 | The currency of the product. |"
								}
							],
							"description": "The `messages` object contains the following components:\n\n| Name\t                        | Description\n|-------------------------------|---------------------------------------|\n| **`contacts`**<br/>type: Array of contact profile information | Provides all the information about the contact. For more information, see [contacts object](#a8428e66-12bb-48e7-9224-f5ebc33af331). This object only applies to text, contacts, and location messages. It is not currently supported for media messages and is not applicable for system messages.<br/><br/>Inside **`contacts`**, the **`profile`** object is nested.|\n| **`messages`**<br/>type: Array of any type of message objects | Provides all of the information about the incoming message. For more information, see [messages object](#5545a699-045d-4d16-bb62-7de9f8d5d641).<br/><br/>Inside **`messages`**, the following objects are nested: **`context`**, **`identity`**, **`media`**, **`referral`**, **`text`**, **`location`**, **`contacts`**, **`system`**, and **`interactive`**.|"
						},
						{
							"name": "Statuses Object",
							"item": [
								{
									"name": "statuses",
									"item": [],
									"description": "The `statuses` object keeps you apprised of the status of messages between you and users or groups.\n\n| Name\t                                 | Description                          |\n|----------------------------------------|--------------------------------------|\n| **`id`**<br/>type: String              | The message ID.|\n| **`recipient_id`**<br/>type: String    | The WhatsApp ID of recipient.|\n| **`status`**<br/>type: String          | The status of a message.<br/>**Values:** `read`, `delivered`, `sent`, `failed`, `deleted`<br/>To view a list of all possible message statuses, see [All Possible Message Statuses](https://developers.facebook.com/docs/whatsapp/api/webhooks/components/?locale=en_US#possiblestatus).|\n| **`timestamp`**<br/>type: String        | The timestamp of the status message.|\n| **`type`**<br/>type: String          | The type of entity this status object is about. Currently, the only available option is `\"message\"`.|\n| **`conversation`**<br/>type: Object     | **This object will be provided by default when [Conversation-Based Pricing](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing) is released in a future update.**<br/>Object containing conversation attributes, including id. See [conversation object](https://developers.facebook.com/docs/whatsapp/api/webhooks/components/?locale=en_US#conversation-object) for more information.<br/><br/>WhatsApp defines a conversation as a 24-hour session of messaging between a person and a business. There is no limit on the number of messages that can be exchanged in the fixed 24-hour window. The 24-hour conversation session begins when:<ul><li>A business-initiated message is delivered to a user</li><li>A business’ reply to a user message is delivered</li></ul><br/><br/>The 24-hour conversation session is different from the 24-hour customer support window. The customer support window is a rolling window that is refreshed when a user-initiated message is delivered to a business. Within the customer support window businesses can send free-form messages. Any business-initiated message sent more than 24 hours after the last customer message must be a template message.|\n| **`pricing`**<br/>type: Object     | **This object will be provided by default when [Conversation-Based Pricing](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing) is released in a future update.**<br/>Object containing billing attributes, including **`pricing_model`**, **`billable flag`**, and **`category`**. See [pricing object](https://developers.facebook.com/docs/whatsapp/api/webhooks/components/?locale=en_US#pricing-object) for more information."
								},
								{
									"name": "conversation",
									"item": [],
									"description": "The conversation object tracks the attributes of your current conversation. The following fields are specified within the conversation object:\n\n| Name\t                                 | Description                          |\n|----------------------------------------|--------------------------------------|\n| **`id`**<br/>type: String              | Represents the ID of the conversation the given status notification belongs to.|\n| **`origin`**<br/>type: String          | Describes where the conversation originated from. See **`origin`** object for more information.|\n| **`expiration_timestamp`**<br/>type: [UNIX timestamp](https://en.wikipedia.org/wiki/Unix_time?fbclid=IwAR1jX0ExUvMlXrwSS1sy7eEq-RY2fqHIV32tUmjwY3erYmNsVS3dkcl-TT0)          | The timestamp when the current ongoing conversation expires. This field is not present in all Webhook types.|"
								},
								{
									"name": "origin",
									"item": [],
									"description": "The `origin` object describes where a conversation has originated from. **Object will be available when [Conversation-Based Pricing](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing) is released in a future update**. The following fields are specified within the `origin` object:\n\n| Name\t                                 | Description                          |\n|----------------------------------------|--------------------------------------|\n| **`type`**<br/>type: String            | Indicates where a conversation has started. This can also be referred to as a conversation entry point. Currently, the available options are:<ul><li>**`business_initiated`**: indicates that the conversation started by a business sending the first message to a user. This applies any time it has been more than 24 hours since the last user message.</li><li>**`user_initiated`**: indicates that the conversation started by a business replying to a user message. This applies only when the business reply is within 24 hours of the last user message.</li><li>**`referral_conversion`**: indicates that the conversation originated from a free entry point. These conversations are always user-initiated.</li></ul>|"
								},
								{
									"name": "pricing",
									"item": [],
									"description": "The pricing object includes your billing attributes. The following fields are specified within the pricing object:\n\n| Name\t                                 | Description                          |\n|----------------------------------------|--------------------------------------|\n| **`pricing_model`**<br/>type: String. \"CBP\" or \"NBP\".| Type of pricing model being used. Current supported values are:<ul><li>`\"CBP\"` (conversation-based pricing): See [Conversation-Based Pricing](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing) for rates based on recipient country.</li><li>`\"NBP\"` (notification-based pricing): Notifications are also known as Template Messages (more details on pricing here). This pricing model will be deprecated starting February 1st, 2022.</li></ul>|\n| **`billing`**<br/>type: boolean | **This field was added for a pricing test and is scheduled to be deprecated as early as six months from the [`v2.37` release](https://developers.facebook.com/docs/whatsapp/changelog). We recommend that you stop using this field before upgrading to the next version. More information on deprecation plans will be provided in the future.**<br/>Indicates if the given message or conversation is billable. Value varies according to **`pricing_model`**.<br/><br/>If you are using CBP (conversation-based pricing):<ul/><li>This flag is set to **`false`** if the conversation was initiated from [free entry points](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#free-entry-points). Conversations initiated from [free entry points](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#free-entry-points) are not billable.</li><li>For all other conversations, it’s set to **`true`**.</li><li>This is also set to **`true`** for conversations inside your free tier limit. You will not be charged for these conversations, but they are considered billable and are reflected on your invoice.</li></ul><br/><br/>If you are using NBP (notification-based pricing):<ul><li>This flag is **`false`** for user-initiated conversations.</li><li>This flag is set to **`true`** for notification messages (template messages)</li></ul> |\n| **`category`**<br/>type: String | Indicates the conversation pricing category. Currently, available options are:<ul><li>**`business_initiated`**: indicates that the conversation started by a business sending the first message to a user. This applies any time it has been more than 24 hours since the last user message.</li><li>**`user_initiated`**: indicates that the conversation started by a business replying to a user message. This applies only when the business reply is within 24 hours of the last user message.</li><li>**`referral_conversion`**: indicates that the conversation originated from a [free entry points](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#free-entry-points). These conversations are always user-initiated.</li></ul>|\n\n> Until February 1, 2022 businesses or BSPs can use the field **`webhook_payload_conversation_pricingmodel_disabled`** to turn off the conversations and pricing payloads from your message status notifications. After the launch, this option will be deprecated and conversation and pricing payloads will be provided by default. See [Application Settings](https://developers.facebook.com/docs/whatsapp/api/settings/app) for implementation details."
								}
							],
							"description": "The **`Statuses`** Object contains the following components:"
						},
						{
							"name": "errors Object",
							"item": [],
							"description": "The `errors` object contains the following parameters:\n\n| Name\t                       | Description                          |\n|------------------------------|--------------------------------------|\n| **`code`**<br/>type: Numeric | The error code.|\n| **`title`**<br/>type: String | The error title.|\n| **`details`**<br/>type: String | **Optional**.<br/>The error details provided, if available or applicable.|\n| **`href`**<br/>type: String | **Optional**.<br/>The location for error detail.|"
						}
					],
					"description": "WhatsApp Business API Client Webhooks have a top level array field indicating what is being communicated. The members of the array are JSON objects with detailed fields relevant to the Webhook:\n\n| Name\t                          |Object Description                       |\n|---------------------------------|-----------------------------------------|\n| **`messages`**                  | Used to notify you when you get a new message and what is in the new message. |\n| **`statuses`**                  |Used to notify you when there's a status change in a message you sent. |\n| **`errors`**                    |When there are any out-of-band errors that occur in the normal operation of the application, the errors array provides a description of the error. This type of error can be caused by transient network connectivity errors, invalid credentials, management controllers in unavailable status, etc. See Errors and Status Messages for more information. |"
				},
				{
					"name": "Inbound Webhook Notifications",
					"item": [],
					"description": "This section describes the several types of inbound notifications that may be delivered to the Webhook URL you set in the application settings.\n\n## Inbound Message Fields\nWebhook notifications of received messages are contained within a **`messages`** object. Your inbound notifications can also contain the following objects:\n\n* contacts - Nested inside **`contacts`**: **`profile`**\n* messages - Nested inside **`messages`**: **`context`**, **`identity`**, **`text`**, **`location`**, **`contacts`**, **`media`**, **`system`**, **`referral`**, **`referral media`**, **`interactive`**, and **`order`**.\n\n### `referral` Property\nStarting with version [2.33 of the WhatsApp Business API](https://developers.facebook.com/docs/whatsapp/changelog), inbound message notifications may contain an additional property called **`referral`**. This section is included in notifications when a user clicks on an ad that clicks to WhatsApp and sends a message to the business.\n\nThis is how the **`referral`** property works:\n\n1. A user clicks on an ad with the Click to WhatsApp call-to-action.\n2. User is redirected to WhatsApp and sends a message to the advertising business.\n3. User sends a message to the business.\n4. The advertising business gets an inbound message notification including the **`referral`** property, which provides additional context on the ad that triggered the message. Knowing all this information, the business can appropriately reply to the user message.\n\nThe **`referral`** property can contain the following types of message:\n\n* Text\n* Location\n* Contact\n* Image\n* Video\n* Document\n* Voice\n* Sticker\n\nThe following is an example of an inbound image message notification containing referral. In the example, the user clicked on an ad that contained a video:\n\n```\n{\n   \"messages\":[{\n      \"from\":\"12345678\",\n      \"id\":\"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n      \"image\":{\n         \"id\":\"b1c68f38-8734-4ad3-b4a1-ef0c10d683\",\n         \"mime_type\":\"image/jpeg\",\n         \"sha256\":\"29ed500fa64eb55fc19dc4124acb300e5dcca0f822a301ae99944db\"\n         \"caption\": \"Check out my product!\",\n      },\n      \"timestamp\":\"1521497954\",\n      \"type\":\"image\",\n      \"referral\" : {\n        \"headline\": \"Our new product\",\n        \"body\" : \"This is a great product\",\n        \"source_type\": \"<SOURCE_TYPE>\",\n        \"source_id\": \"<SOURCE_ID>\",\n        \"source_url\": \"<SOURCE_URL>\", //for the moment, this will always be a Facebook owned domain\n        \"video\": {\n          \"id\": \"e144be57-12b1-4035-a520-703fcc87ef45\",\n      }     \n    }\n  }]\n}\n```\nFor more information relating to the **`referral`** and **`referral media(video|image)`** Object, see [Components:referral](https://developers.facebook.com/docs/whatsapp/api/webhooks/components#referral).\n\n## Inbound Media Message Notifications\n\nWhen you receive a message with media, the WhatsApp Business API client will download the media. A notification is sent to your Webhook once the media is downloaded. This notification contains information that identifies the media object and enables you to find and retrieve the object. Use the [Media endpoint](https://developers.facebook.com/docs/whatsapp/api/media) with the media's **`id`** to retrieve the media.\n\nThe following examples show inbound media message examples:\n\n* [Received Message with Image]()\n* [Received Message with Document]()\n* [Received Message with Voice Message]()\n* [Received Message with Sticker]()\n\n## Inbound Replies to Sent Messages\nUsers can respond to a specific message in WhatsApp. For the business to understand the context of a message reply, we include the **`context`** object. This **`context`** object provides the **`id`** of the message to which the customer replied, the WhatsApp ID of the sender of the original message and IDs for any products the customer may be referring to.\n\nThe following examples show inbound reply examples:\n\n* [Customer Replied to a Message]()\n* [Customer Replied to a List Message]()\n* [Customer Replied to a Reply Button Message]()\n* [Customer Request for Information about a Product]()\n* [Customer Places an Order After Receiving a Multi or Single Product Message]()\n\n## Inbound System Messages\nSystem messages are generated by the system when some event happens. There are the following two types of system messages:\n\n* **`user_changed_number`** - User's phone number changed\n* **`user_identity_changed`** - User has potentially changed on WhatsApp\n\nThe following examples show inbound system message Webhooks:\n\n* [User Changed Number Notification]()\n* [User Potentially Changed Notification]()\n\n## Mentioning Users in Messages\n\nWhen you send a message that mentions a particular WhatsApp ID directly and someone replies to that message, you will see the mentioned ID in the **`context`** object and in the **`mentions`** array. Because more than one phone number can be mentioned, the **`mentions`** field is an array of phone numbers, even if only one phone number is mentioned.\n\nSee [Customer Replied to Message with Mentions]() example for more information."
				},
				{
					"name": "Status and Pricing Notifications",
					"item": [],
					"description": "The WhatsApp Business API client sends notifications about the [**`status`** of the message](https://developers.facebook.com/docs/whatsapp/api/webhooks/outbound#notification-types) between you and your users. These notifications are sent through the **`statuses`** object.\n\nStarting February 1st 2022, [WhatsApp will switch from a notification-based pricing model to a conversation-based pricing model](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing). On that date, the **`statuses`** object will include information about conversation and pricing.\n\n## Status Updates\nFor each message, you receive a notification when the message is sent, delivered, read, and/or deleted. If the message fails to send or isn’t delivered, you get a failed status notification. The following table describes status updates:\n\n| Name                           | Description                             |\n|--------------------------------|-----------------------------------------|\n| **`sent`**       | Message sent by your business was received by the server. To receive notifications for **`sent`** messages, set the **`sent_status`** setting to **`true`** in the application settings. The **`sent`** status notification is disabled by default.|\n| **`delivered`** | Message sent by your business was delivered to the user's device.|\n| **`read`** | Message sent by your business was read by the user. **`read`** notifications are available only for those users that have read receipts enabled. For users that do not have it enabled, they will only receive the delivered notification. |\n| **`failed`** | Message sent by your business failed to send. A reason for the failure is included in the callback. For more information about the failure, see the [Error Messages documentation](https://developers.facebook.com/docs/whatsapp/api/errors).|\n| **`deleted`** | Message the user sent to your business was deleted by the user. <br/><br/>Upon receiving a **`status`**:**`deleted`** notification, you should, in good faith, ensure that the message is deleted from your system if it was downloaded from the server.|\n\nThe order of these notifications in your app may not reflect the actual timing of the message status. View the timestamp to determine the timing, if necessary.\n\n> For a status to be **`read`**, it must have been **`delivered`**. In some scenarios, such as when a user is in the chat screen and a message arrives, the message is **`delivered`** and **`read`** almost simultaneously. In this or other similar scenarios, the **`delivered`** notification is not sent back, as it is implied that a message has been delivered if it has been read. The reason for this behavior is internal optimization.\n\n## Pricing Updates\nStarting February 1, 2022, the [**`statuses`** object]() in your outbound notifications will include two new nested objects: **`conversation`** and **`pricing`**. The **`conversation`** and **`pricing`** object components will vary depending on where the conversation initiated. Conversations can be user-initiated, business-initiated, or they can start from a free entry point.\n\n## All Possible Message Statuses\nThis table lists all possible options for the status of a message.\n\n| Status\t| Description\t| WhatsApp Mobile Equivalent |\n|---------------|---------------|----------------------------|\n| **`sent`** | Message received by WhatsApp server | One checkmark |\n| **`delivered`** | Message delivered to recipient |Two checkmarks |\n| **`read`** | Message read by recipient | Two blue checkmarks |\n| **`failed`** | Message failed to send | Red error triangle |\n| **`deleted`** | Message deleted by the user | The message is replaced in WhatsApp mobile with a note reading \"This message was deleted.\" |"
				},
				{
					"name": "Using Webhooks To Track Conversations In Real-Time",
					"item": [],
					"description": "Starting February 1st, 2022, the WhatsApp Business API will switch from a notification-based pricing model to a [conversation-based pricing (CBP) model](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing). To support that, we’re introducing new tools to understand and track conversation usage:\n\n* **Conversation Webhooks**: We’ve added new conversation-related objects to our webhooks, allowing you to track conversations in real-time. **New payloads will be available on Feb 1, 2022. This is the main focus of this guide.**\n* **New Account Metrics:**\n\n    * **WhatsApp Business Management API**: The **`metrics`** field for the `/{whatsapp-business-account-ID}` endpoint will return cost and conversation metrics for a given time period. When we launch the cost metrics, all information included on WhatsApp invoices will also be available via API.\n    * **WhatsApp Manager:** New cost and conversation metrics will also be available in your [WhatsApp Business Account Insights](https://www.facebook.com/business/help/338500813332755).\n* **Invoice Updates**: Invoices will include breakdowns of conversation charges by type for each WhatsApp Business Account.\n\nNew conversation Webhooks are available with API version `2.37` and are the best tool for tracking conversation usage in real-time. This guide goes over how Webhooks can be used to mirror our conversation metering, and estimate total conversations by type for a given billing period. You can find additional detail on these Webhooks in the following documents:\n\n* Webhooks Components: **`conversation`**, **`origin`**, **`pricing`**.\n* [Status and Pricing Notifications]()\n\n## Tracking Conversations With IDs\nA new conversation ID is generated whenever a business sends a message to a user outside of an existing conversation session (including “pre-opened” sessions and charged sessions). A conversation charge is triggered when the first message associated with this conversation ID is delivered, which opens a 24 hour conversation session.\n\nThere can be a lag between message send and delivery when, for example, the user phone is turned off at time of send. If there is a lag, this is how the conversation is processed:\n\n1. There isn’t an open conversation with that user. The business initiates a conversation by sending a message.\n2. A conversation session is “pre-opened” when the message is sent. A corresponding conversation ID is associated with that conversation.\n3. Once the message is delivered, the start time of the conversation session is refreshed as outlined below:\n\n![Business Message Converstation](https://scontent-sea1-1.xx.fbcdn.net/v/t39.8562-6/243732124_187770043481675_5153849280960354097_n.png?_nc_cat=100&ccb=1-5&_nc_sid=6825c5&_nc_ohc=1VxkAzuvVEoAX9E7L-D&_nc_ht=scontent-sea1-1.xx&_nc_rmd=260&oh=c4ac5e211b216923a965c8bcbe16fa3e&oe=617CF0B1)\n\nSent messages that are not delivered for 30 days are dropped. If a conversation ID is generated from one or several sent messages, but none of those messages are ever delivered, there is no conversation charge associated with that conversation ID.\n\n## Estimating Conversations Per Billing Period\nTo estimate costs, you first need to identify the type of conversation and end recipient phone number for each conversation (Rates by conversation type and country/region can be found in our rate card). Then, for a given billing period, the total conversations can be estimated by counting the unique conversation IDs in the billing period associated with a delivered message status Webhook notification:\n\n```\nTotal conversations per = Number of unique conversation IDs associated with a webhook\nbilling period            with status=\"delivered\" and status=\"read\" in that billing \n                          period.\n```\n\nConversation IDs that only have sent message status Webhook notifications in a given billing period should not result in a charge for that billing period. As a reminder, the category field inside the **`pricing`** object can be used to determine if a conversation was user-initiated, business-initiated, or initiated from a free entry point.\n\nStarting Feb 1, 2022 you will be able to retrieve historical conversation charges using Business Manager Insights or account metrics in Graph API."
				},
				{
					"name": "Received Text Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contacts\": [ {\n    \"profile\": {\n        \"name\": \"Kerry Fisher\"\n    },\n    \"wa_id\": \"16315551234\"\n  } ],\n  \"messages\":[{\n    \"from\": \"16315551234\",\n    \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n    \"timestamp\": \"1518694235\",\n    \"text\": {\n      \"body\": \"Hello this is an answer\"\n    },\n    \"type\": \"text\"\n  }]\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of a text message you received from a customer:"
					},
					"response": []
				},
				{
					"name": "Received Message with Image",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"16315551234\",\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"image\": {\n                \"file\": \"/usr/local/wamedia/shared/b1cf38-8734-4ad3-b4a1-ef0c10d0d683\",\n                \"id\": \"b1c68f38-8734-4ad3-b4a1-ef0c10d683\",\n                \"mime_type\": \"image/jpeg\",\n                \"sha256\": \"29ed500fa64eb55fc19dc4124acb300e5dcc54a0f822a301ae99944db\",\n                \"caption\": \"Check out my new phone!\"\n            },\n            \"timestamp\": \"1521497954\",\n            \"type\": \"image\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example inbound message that contains an image. \n\n> The **`caption`** field is optional for media messages. It is only included if the user has set a caption."
					},
					"response": []
				},
				{
					"name": "Received Message with Document",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"16315551234\",\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"timestamp\": \"1522189546\",\n            \"type\": \"document\",\n            \"document\": {\n                \"caption\": \"80skaraokesonglistartist\",\n                \"file\": \"/usr/local/wamedia/shared/fc233119-733f-49c-bcbd-b2f68f798e33\",\n                \"id\": \"fc233119-733f-49c-bcbd-b2f68f798e33\",\n                \"mime_type\": \"application/pdf\",\n                \"sha256\": \"3b11fa6ef2bde1dd14726e09d3edaf782120919d06f6484f32d5d5caa4b8e\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example inbound message that contains a document. See the [**`media`** object section](#f06b1ca9-fe2e-48b4-81d0-de65c04139d4) above to learn more about the different media types."
					},
					"response": []
				},
				{
					"name": "Received Message with Voice Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"16315551234\",\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"timestamp\": \"1521827831\",\n            \"type\": \"voice\",\n            \"voice\": {\n                \"file\": \"/usr/local/wamedia/shared/463e/b7ec/ff4e4d9bb1101879cbd411b2\",\n                \"id\": \"463eb7ec-ff4e-4d9b-b110-1879cbd411b2\",\n                \"mime_type\": \"audio/ogg; codecs=opus\",\n                \"sha256\": \"fa9e1807d936b7cebe63654ea3a7912b1fa9479220258d823590521ef53b0710\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example inbound message that contains a voice message."
					},
					"response": []
				},
				{
					"name": "Received Message with Sticker",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"16315551234\",\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"timestamp\": \"1521827831\",\n            \"type\": \"sticker\",\n            \"sticker\": {\n                \"id\": \"b1c68f38-8734-4ad3-b4a1-ef0c10d683\",\n                \"metadata\": {\n                    \"sticker-pack-id\": \"463eb7ec-ff4e-4d9b-b110-1879cbd411b2\",\n                    \"sticker-pack-name\": \"Happy New Year\",\n                    \"sticker-pack-publisher\": \"Kerry Fisher\",\n                    \"emojis\": [\n                        \"🐥\",\n                        \"😃\"\n                    ],\n                    \"ios-app-store-link\": \"https://apps.apple.com/app/id3133333\",\n                    \"android-app-store-link\": \"https://play.google.com/store/apps/details?id=com.example\",\n                    \"is-first-party-sticker\": 0 | 1 # integer\n                },\n                \"mime_type\": \"image/webp\",\n                \"sha256\": \"fa9e1807d936b7cebe63654ea3a7912b1fa9479220258d823590521ef53b0710\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						}
					},
					"response": []
				},
				{
					"name": "Received Static Location Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contacts\": [ {\n    \"profile\": {\n        \"name\": \"Kerry Fisher\"\n    },\n    \"wa_id\": \"16315551234\"\n  } ],\n \"messages\":[{\n   \"from\":\"16315551234\",\n   \"id\":\"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n   \"location\":{\n      \"address\":\"Main Street Beach, Santa Cruz, CA\",\n      \"latitude\":38.9806263495,\n      \"longitude\":-131.9428612257,\n      \"name\":\"Main Street Beach\",\n      \"url\":\"https://foursquare.com/v/4d7031d35b5df7744\"},\n   \"timestamp\":\"1521497875\",\n   \"type\":\"location\"\n  }]\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of a message received from a customer specifying their static location."
					},
					"response": []
				},
				{
					"name": "Received Contact Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16315551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"contacts\": [\n                {\n                    \"addresses\": [\n                        {\n                            \"city\": \"Menlo Park\",\n                            \"country\": \"United States\",\n                            \"country_code\": \"us\",\n                            \"state\": \"CA\",\n                            \"street\": \"1 Hacker Way\",\n                            \"type\": \"WORK\",\n                            \"zip\": \"94025\"\n                        }\n                    ],\n                    \"birthday\": \"2012-08-18\",\n                    \"emails\": [\n                        {\n                            \"email\": \"kfish@fb.com\",\n                            \"type\": \"WORK\"\n                        }\n                    ],\n                    \"ims\": [\n                        {\n                            \"service\": \"AIM\",\n                            \"user_id\": \"kfish\"\n                        }\n                    ],\n                    \"name\": {\n                        \"first_name\": \"Kerry\",\n                        \"formatted_name\": \"Kerry Fisher\",\n                        \"last_name\": \"Fisher\"\n                    },\n                    \"org\": {\n                        \"company\": \"Facebook\"\n                    },\n                    \"phones\": [\n                        {\n                            \"phone\": \"+1 (940) 555-1234\",\n                            \"type\": \"CELL\"\n                        },\n                        {\n                            \"phone\": \"+1 (650) 555-1234\",\n                            \"type\": \"WORK\",\n                            \"wa_id\": \"16505551234\"\n                        }\n                    ],\n                    \"urls\": [\n                        {\n                            \"url\": \"https://www.facebook.com\",\n                            \"type\": \"WORK\"\n                        }\n                    ]\n                }\n            ],\n            \"from\": \"16505551234\",\n            \"id\": \"ABGGFlA4dSRvAgo6C4Z53hMh1ugR\",\n            \"timestamp\": \"1537248012\",\n            \"type\": \"contacts\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of a message received from a customer specifying their contact information.\n\n> The **`contact_image`** setting is empty if the consumer client is using an IPhone."
					},
					"response": []
				},
				{
					"name": "Received Forwarded Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16315551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"context\": {\n                \"forwarded\": true\n            },\n            \"from\": \"16315558011\",\n            \"id\": \"ABGGFmkiWVVPAgo-sOGh7pv13wVJ\",\n            \"text\": {\n                \"body\": \"Party at Dotty's tonight!\"\n            },\n            \"timestamp\": \"1593068329\",\n            \"type\": \"text\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Beginning with `v2.29.1` it is possible to see if a message you received has been forwarded or is frequently forwarded. The following is an example of a message that you received, that was forwarded:"
					},
					"response": []
				},
				{
					"name": "Received Frequently Forwarded Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16315551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"context\": {\n                \"frequently_forwarded\": true\n            },\n            \"from\": \"16315558011\",\n            \"id\": \"ABGGFmkiWVVPAgo-sBTHfS3swNIl\",\n            \"timestamp\": \"1593068225\",\n            \"type\": \"video\",\n            \"video\": {\n                \"id\": \"e144be57-12b1-4035-a520-703fcc87ef45\",\n                \"mime_type\": \"video/mp4\",\n                \"sha256\": \"02c4e68a4f0d6af5ec6ef02120e20d15f520a4dd473b535abec1aab175c4e8b9\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Beginning with `v2.29.1` it is possible to see if a message you received has been forwarded or is frequently forwarded. The following is an example of a message that you received, that was forwarded multiple times:"
					},
					"response": []
				},
				{
					"name": "Received Unsupported Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16315551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"errors\": [\n                {\n                    \"code\": 501,\n                    \"details\": \"Message type is not currently supported\",\n                    \"title\": \"Unknown message type\"\n                }\n            ],\n            \"from\": \"16315551234\",\n            \"id\": \"ABGGFRBzFymPAgo6N9KKs7HsN6eB\",\n            \"timestamp\": \"1531933468\",\n            \"type\": \"unknown\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "It is possible to receive an `unknown` callback notification. The following is an example of an unsupported message type received from a customer."
					},
					"response": []
				},
				{
					"name": "Inbound Image Message Referral Notification",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"12345678\",\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"image\": {\n                \"id\": \"b1c68f38-8734-4ad3-b4a1-ef0c10d683\",\n                \"mime_type\": \"image/jpeg\",\n                \"sha256\": \"29ed500fa64eb55fc19dc4124acb300e5dcca0f822a301ae99944db\"\n         \"caption\": \"Check out my product!\"\n            },\n            \"timestamp\": \"1521497954\",\n            \"type\": \"image\",\n            \"referral\": {\n                \"headline\": \"Our new product\",\n                \"body\": \"This is a great product\",\n                \"source_type\": \"<SOURCE_TYPE>\",\n                \"source_id\": \"<SOURCE_ID>\",\n                \"source_url\": \"<SOURCE_URL>\", //for the moment, this will always be a Facebook owned domain\n                \"video\": {\n                    \"id\": \"e144be57-12b1-4035-a520-703fcc87ef45\"\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of an inbound image message notification containing a [**`referral`**](#05cafa2f-e332-4425-bcb4-2df145573aa4). In the example, the user clicked on an ad that contained a video:"
					},
					"response": []
				},
				{
					"name": "Received Business Opted In Security Notifications",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16315551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"from\": \"16315553601\",\n            \"id\": \"ABGGFjFVU2AfAgo6V-Hc5eCgK5Gh\",\n            \"identity\": {\n                \"acknowledged\": true,\n                \"created_timestamp\": 1602532300000,\n                \"hash\": \"Sjvjlx8G6Z0=\"\n            },\n            \"text\": {\n                \"body\": \"Hi from new number 3601\"\n            },\n            \"timestamp\": \"1602532300\",\n            \"type\": \"text\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "If the **`show_security_notifications`** parameter is set to **`true`** in the [application settings](#36152591-dcb0-4af6-8255-ab798ca677d5)([application settings on developers.facebook.com](https://developers.facebook.com/docs/whatsapp/api/settings/app), all inbound message notifications will include the following information about the user's identity contained inside the [**`identity`**](#7abdae6e-1950-4349-8442-2274cfc2c15f) object."
					},
					"response": []
				},
				{
					"name": "Received Callback from a Quick Reply Button Click",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16505551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"button\": {\n                \"payload\": \"No-Button-Payload\",\n                \"text\": \"No\"\n            },\n            \"context\": {\n                \"from\": \"16315558007\",\n                \"id\": \"gBGGFmkiWVVPAgkgQkwi7IORac0\"\n            },\n            \"from\": \"16505551234\",\n            \"id\": \"ABGGFmkiWVVPAgo-sKD87hgxPHdF\",\n            \"timestamp\": \"1591210827\",\n            \"type\": \"button\"\n        }\n    ]\n    # If there are any errors, an errors field (array) will be present        \n    \"errors\": [\n        {}\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "When your customer clicks on a quick reply button, a response is sent. Below is an example of the callback format. \n\n**Note:** A customer may not click a button and either reply to the interactive template message or just send you a message. Make sure that you are able to support this type of scenario as well. For more information, see [Webhooks](https://developers.facebook.com/docs/whatsapp/api/webhooks)."
					},
					"response": []
				},
				{
					"name": "Customer Replied to a Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contacts\": [\n        {\n            \"profile\": {\n                \"name\": \"Kerry Fisher\"\n            },\n            \"wa_id\": \"16315551234\"\n        }\n    ],\n    \"messages\": [\n        {\n            \"context\": {\n                \"from\": \"16315558011\",\n                \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\"\n            },\n            \"from\": \"16315551234\",\n            \"id\": \"gBGGFlA5FpafAgkOuJbRq54qwbM\",\n            \"text\": {\n                \"body\": \"Yes, count me in!\"\n            },\n            \"timestamp\": \"1521499915\",\n            \"type\": \"text\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of an inbound message that is a reply to a message that you sent. See the [**`context`** object](#d4d23c6a-3e66-4a68-9cc4-a8834de1c84a) for more information.\n\n> The **`text`** field is optional for media messages. If it exists, the **`text`** value is the caption of the sent media or the body of the response, if the response is a text message."
					},
					"response": []
				},
				{
					"name": "Customer Replied to a List Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"context\": {\n                \"from\": \"sender_wa_id_of_context_message\",\n                \"group_id\": \"group_id_of_context_message\",\n                \"id\": \"message_id_of_context_message\",\n                \"mentions\": [\n                    \"wa_id1\",\n                    \"wa_id2\"\n                ]\n            },\n            \"from\": \"sender_wa_id\",\n            \"group_id\": \"group_id\",\n            \"id\": \"message_id\",\n            \"timestamp\": \"message_timestamp\",\n            \"type\": \"interactive\",\n            \"interactive\": {\n                \"type\": \"list_reply\",\n                \"list_reply\": {\n                    \"title\": \"row-title-content-here\",\n                    \"id\": \"unique-row-identifier-here\",\n                    \"description\": \"row-description-content-here\"\n                }\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of an inbound message that is a reply to a message that you sent. See the [**`context`** object](#d4d23c6a-3e66-4a68-9cc4-a8834de1c84a) for more information.\n\n> The **`text`** field is optional for media messages. If it exists, the **`text`** value is the caption of the sent media or the body of the response, if the response is a text message."
					},
					"response": []
				},
				{
					"name": "Customer Replied to a Reply Button Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"context\": {\n                \"from\": \"sender_wa_id_of_context_message\",\n                \"group_id\": \"group_id_of_context_message\",\n                \"id\": \"message_id_of_context_message\",\n                \"mentions\": [\n                    \"wa_id1\",\n                    \"wa_id2\"\n                ]\n            },\n            \"from\": \"sender_wa_id\",\n            \"group_id\": \"group_id\",\n            \"id\": \"message_id\",\n            \"timestamp\": \"message_timestamp\",\n            \"type\": \"interactive\",\n            \"interactive\": {\n                \"type\": \"button_reply\",\n                \"button_reply\": {\n                    \"id\": \"unique-button-identifier\",\n                    \"title\": \"button-text\"\n                }\n            } # end interactive node\n        } # end message item\n    ] # end messages array\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of an inbound message that is sent after the customer clicked on a reply button. See the [**`interactive`** object](#cb301b46-e72b-43f5-a8d2-d9e05459b39a) for more information.\n\n> The **`text`** field is optional for media messages. If it exists, the **`text`** value is the caption of the sent media or the body of the response, if the response is a text message."
					},
					"response": []
				},
				{
					"name": "Customer Request for Information about Product",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"contacts\": [\n    {\n      \"profile\": {\n        \"name\": \"customer-name\"\n      },\n      \"wa_id\": \"customer-whatsapp-ID\"\n    }\n  ],\n  \"messages\": [\n    {\n      \"from\": \"customer-whatsapp-ID\",\n      \"id\": \"message-ID\",\n      \"text\": {\n        \"body\": \"Can I get this in another color?\"\n      },\n      \"context\": {\n        \"referred_product\": {\n          \"catalog_id\": \"catalog-ID\",\n          \"product_retailer_id\": \"product-ID\"\n        }\n      },\n      \"timestamp\": \"message-received-timestamp\",\n      \"type\": \"text\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of an inbound message that is generated when a customer requests information about a product."
					},
					"response": []
				},
				{
					"name": "Customer Places Order After Receiving a Multi or Single Product Message",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"customer-whatsapp-id\",\n            \"group_id\": \"group-id\",\n            \"id\": \"message-ID\",\n            \"timestamp\": \"message-timestamp\",\n            \"type\": \"order\",\n            \"order\": {\n                \"catalog_id\": \"catalog_id\",\n                \"product_items\": [\n                    {\n                        \"product_retailer_id\": \"product-ID\",\n                        \"quantity\": \"number-of-items\",\n                        \"item_price\": \"unitary-price-of-item\",\n                        \"currency\": \"price-currency\"\n                    }\n                ],\n                \"text\": \"text-message-sent-along-with-the-order\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of an inbound message that is generated when a customer places an order after receiving a multi or single product message."
					},
					"response": []
				},
				{
					"name": "User Changed Number Notification",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"16315558889\",\n            \"id\": \"ABGGFjFVWIifAzNzeXMtMTYzMTU1NTg4ODlAcy53aGF0c2FwcC5uZXQtMTU3NDA4MDEwMjIxMy1jaGFuZ2U\",\n            \"system\": {\n                \"body\": \"‎User A changed from ‎+1 (631) 555-8889 to ‎+1 (631) 555-8890‎\",\n                \"new_wa_id\": \"16315558890\",\n                \"type\": \"user_changed_number\"\n            },\n            \"timestamp\": \"1574080102\",\n            \"type\": \"system\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "If the **`notify_user_change_number`** parameter is set to **`true`** in the application settings you will receive inbound system messages when a user changes their phone number."
					},
					"response": []
				},
				{
					"name": "User Potentially Changed Notification",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"from\": \"16315553601\",\n            \"id\": \"ABGGFjFVU2AfAzVzeXMtMTYzMTU1NTM2MDFAcy53aGF0c2FwcC5uZXQtMTYwMjUzNTM1NjMzMi1pZGVudGl0eQ\",\n            \"system\": {\n                \"body\": \"Test security code change\",\n                \"identity\": \"Rc/eg9Rl0JA=\",\n                \"type\": \"user_identity_changed\",\n                \"user\": \"16315553601\"\n            },\n            \"timestamp\": \"1602535356\",\n            \"type\": \"system\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "If the **`show_security_notifications`** parameter is set to **`true`** in the application settings you will receive inbound system messages when a user (in conversation with you) has potentially changed on WhatsApp.\n\nUntil this notification is acknowledged using the **`identity`** endpoint, all outgoing messages to this user will be blocked. Incoming messages will continue to be received as expected."
					},
					"response": []
				},
				{
					"name": "Customer Replied to Message with Mentions Notification",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"messages\": [\n        {\n            \"context\": {\n                \"from\": \"16315555544\",\n                \"id\": \"gBGGFlA5FpafAgkOuJbRq54qwbM\",\n                \"mentions\": [\n                    \"16315551000\",\n                    \"16315551099\"\n                ]\n            },\n            \"from\": \"16315551234 \",\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"timestamp\": \"1504902988\",\n            \"text\": {\n                \"body\": \"@16315551000 and @16315551099 are mentioned\"\n            },\n            \"type\": \"text\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following is an example of a customer replying to a message that contained mentions. The **`context`** object contains the numbers mentioned in the original message. The reply in the **`text`** object mentions the same numbers again."
					},
					"response": []
				},
				{
					"name": "Status: Message Sent Callback",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"recipient_id\": \"16315555555\",\n            \"status\": \"sent\",\n            \"timestamp\": \"1518694700\",\n            \"type\": \"message\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook shows standard callback for a message delivered.\n\n> Starting February 1, 2022, this example will also include two new objects: **`conversation`** and **`pricing`**."
					},
					"response": []
				},
				{
					"name": "Status: Message Sent Callback with User-Initiated Conversation",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"3A0C810BBE72C289F9CD\",\n            \"recipient_id\": 16315551234,\n            \"status\": \"sent\",\n            \"timestamp\": 1518694236,\n            \"type\": \"message\",\n            \"conversation\": {\n                \"id\": \"conversation-ID\",\n                \"expiration_timestamp\": 1518780636,\n                \"origin\": {\n                    \"type\": \"user_initiated\"\n                }\n            },\n            \"pricing\": {\n                \"pricing_model\": \"CBP\",\n                \"billable\": true,\n                \"category\": \"user_initiated\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following webhook will be received when a business sends a message as part of a user-initiated conversation (if that conversation did not originate in a free entry point):"
					},
					"response": []
				},
				{
					"name": "Status: Message Sent Callback with Business-Initiated Conversation",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"3A0C810BBE72C289F9CD\",\n            \"recipient_id\": 16315551234,\n            \"status\": \"sent\",\n            \"timestamp\": 1518694236,\n            \"type\": \"message\",\n            \"conversation\": {\n                \"id\": \"532b57b5f6e63595ccd74c6010e5c5c7\",\n                \"expiration_timestamp\": 1518780636,\n                \"origin\": {\n                    \"type\": \"business_initiated\"\n                }\n            },\n            \"pricing\": {\n                \"pricing_model\": \"CBP\",\n                \"billable\": true,\n                \"category\": \"business_initiated\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook is received when a business sends a message as part of a [business-initiated conversation](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing#how-it-works):"
					},
					"response": []
				},
				{
					"name": "Status: Message Delivered Callback",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"recipient_id\": \"16315555555\",\n            \"status\": \"delivered\",\n            \"timestamp\": \"1518694708\",\n            \"type\": \"message\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook is received as a standard callback for a message delivered.\n\nStarting February 1, 2022, this example will include two new objects: **`conversation`** and **`pricing`**."
					},
					"response": []
				},
				{
					"name": "Status: Message Delivered Callback User-Initiated Conversation",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"3A0C810BBE72C289F9CD\",\n            \"recipient_id\": 16315551234,\n            \"status\": \"delivered\",\n            \"timestamp\": 1518694236,\n            \"type\": \"message\",\n            \"conversation\": {\n                \"id\": \"532b57b5f6e63595ccd74c6010e5c5c7\",\n                \"origin\": {\n                    \"type\": \"user_initiated\"\n                }\n            },\n            \"pricing\": {\n                \"pricing_model\": \"CBP\",\n                \"billable\": true,\n                \"category\": \"user_initiated\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook is received when a business’ message is delivered and that message is part of a user-initiated conversation (if that conversation did not originate in a free entry point):"
					},
					"response": []
				},
				{
					"name": "Status: Message Delivered Callback Business-Initiated Conversation",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"3A0C810BBE72C289F9CD\",\n            \"recipient_id\": 16315551234,\n            \"status\": \"delivered\",\n            \"timestamp\": 1518694236,\n            \"type\": \"message\",\n            \"conversation\": {\n                \"id\": \"532b57b5f6e63595ccd74c6010e5c5c7\",\n                \"origin\": {\n                    \"type\": \"business_initiated\"\n                }\n            },\n            \"pricing\": {\n                \"pricing_model\": \"CBP\",\n                \"billable\": true,\n                \"category\": \"business_initiated\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook is received when a business’ message is delivered and that message is part of a user-initiated conversation (if that conversation did not originate in a free entry point):"
					},
					"response": []
				},
				{
					"name": "Status: Message Read Callback",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"ABGGFlA5FpafAgo6tHcNmNjXmuSf\",\n            \"recipient_id\": \"16315555555\",\n            \"status\": \"read\",\n            \"timestamp\": \"1518694722\",\n            \"type\": \"message\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook shows the standard callback for a message read.\n\n> This example will not change when [Conversation-Based Pricing launches](https://developers.facebook.com/docs/whatsapp/pricing/conversationpricing). See our [FAQs](https://developers.facebook.com/docs/whatsapp/api/webhooks/outbound#FAQs) for more information on edge cases."
					},
					"response": []
				},
				{
					"name": "Status: Message Failed Callback Error 470",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"errors\": [\n                {\n                    \"code\": 470,\n                    \"title\": \"Failed to send message because you are outside the support window for freeform messages to this user. Please use a valid HSM notification or reconsider.\"\n                }\n            ],\n            \"id\": \"gBGGEgZHMlEfAgkM1RBkhDRr7t8\",\n            \"recipient_id\": \"12064001000\",\n            \"status\": \"failed\",\n            \"timestamp\": \"1533332775\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook shows the standard callback for a message failure with Error Code 470.\n\nThe conversation subsection is not included in the callback, if a message has failed. No billing or conversation activation occurs in this case."
					},
					"response": []
				},
				{
					"name": "Status: Message Failed Callback Error 480",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"errors\": [\n                {\n                    \"code\": 480,\n                    \"title\": \"Failed to send message since we detect an identity change of the contact\"\n                }\n            ],\n            \"id\": \"gBGGFjFVU2AfAgldhhKwWDGSrTs\",\n            \"recipient_id\": \"16315553601\",\n            \"status\": \"failed\",\n            \"timestamp\": \"1602535356\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook shows the standard callback for a message failure with Error Code 480.\n\nThe conversation subsection is not included in the callback, if a message has failed. No billing or conversation activation occurs in this case."
					},
					"response": []
				},
				{
					"name": "Status: Message Deleted Callback",
					"request": {
						"method": "VIEW",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statuses\": [\n        {\n            \"id\": \"ABGGFmkiWVVPAgo66iFiii_-TG0-\",\n            \"recipient_id\": \"16692259554\",\n            \"status\": \"deleted\",\n            \"timestamp\": \"1532413514\",\n            \"type\": \"message\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "The following Webhook shows the standard callback for a deleted message.\n\nThe conversation subsection is not included in the callback, if a message has been deleted. No billing or conversation activation occurs in this case."
					},
					"response": []
				}
			],
			"description": "Webhooks are user-defined HTTP callbacks that are triggered by specific events. Whenever that trigger event occurs, the WhatsApp Business API client sees the event, collects the data, and immediately sends a notification (HTTP request) to the Webhook URL specified in the application settings updating the status of sent messages or indicating when you receive a message.\n\n> It is important that your Webhook returns an `HTTPS 200 OK` response to notifications. Otherwise the WhatsApp Business API client considers that notification as failed and tries again after a delay.\n\nSee [Components](#d4088709-d4eb-45f4-9020-9f08d5f0fb08) for all available Webhook objects."
		},
		{
			"name": "Support",
			"item": [],
			"description": "For information regarding error messages, support logs, API status, contact support, and other troubleshooting, see [Support](https://developers.facebook.com/docs/whatsapp/support)."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}